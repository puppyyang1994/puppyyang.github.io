<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vue 学习笔记（三）</title>
    <link href="/2023/02/22/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2023/02/22/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h3 id="1-指令"><a href="#1-指令" class="headerlink" title="1. 指令"></a>1. 指令</h3><table><thead><tr><th align="left">v-bind</th><th>单向绑定解析表达式, 可简写为 :xxx</th></tr></thead><tbody><tr><td align="left">v-model</td><td>双向数据绑定</td></tr><tr><td align="left">v-for</td><td>遍历数组/对象/字符串</td></tr><tr><td align="left">v-on</td><td>绑定事件监听, 可简写为@</td></tr><tr><td align="left">v-if</td><td>条件渲染（动态控制节点是否存存在）</td></tr><tr><td align="left">v-else</td><td>条件渲染（动态控制节点是否存存在）</td></tr><tr><td align="left">v-show</td><td>条件渲染 (动态控制节点是否展示)</td></tr></tbody></table><h4 id="1-1内置指令"><a href="#1-1内置指令" class="headerlink" title="1.1内置指令"></a>1.1内置指令</h4><ul><li><p><code>v-text</code></p><ol><li><p>作用：向其所在的节点中渲染文本内容</p></li><li><p> 与插值语法的区别：<code>v-text</code>会替换掉节点中的内容<code>&#123;&#123;xx&#125;&#125;</code>不会</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>        &lt;!-- 把所有的字符串都当成文本 并不会解析标签--&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;shangguigr&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;&lt;h3&gt;你好呀&lt;/h3&gt;&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p><code>v-html</code></p><ol><li><p>作用：向指定节点中渲染包含html结构的内容。 </p></li><li><p>与插值语法的区别： </p><p>  (1). v-html会替换掉节点中所有的内容，则不会。 </p><p>  (2). v-html可以识别html结构。 </p></li><li><p>严重注意：v-html有安全性问题！！！！ </p><p> (1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。 </p><p> (2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！ </p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>   &lt;/div&gt;<br>     <br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">       new Vue(&#123;</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">           el: &#x27;#root&#x27;,</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">           data: &#123;</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">               name: &#x27;尚硅谷&#x27;,</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">               str: &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>你好啊！<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>&#x27;,</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">               str2: &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">javascript:location.href</span>=<span class="hljs-string">&quot;http://www.baidu.com?&quot;</span>+<span class="hljs-attr">document.cookie</span>&gt;</span>兄弟我找到你想要的资源了，快来！<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&#x27;</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">           &#125;</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">       &#125;)</span></span></span><br><span class="language-xml"><span class="language-handlebars"><span class="language-xml">   </span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p><code>v-cloak</code></p><ol><li>本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。</li><li>使用css配合v-cloak可以解决网速慢时页面展示出的问题。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-comment">/* 属性选择器 */</span></span><br><span class="language-css">        <span class="hljs-selector-attr">[v-cloak]</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: none;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">  <br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>  <br>&lt;/div&gt;<br>&lt;!-- <span class="hljs-variable constant_">JS</span>阻塞 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://localhost:8080/resource/5s/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p><code>v-once</code></p><ol><li><p>v-once所在节点在初次动态渲染后，就视为静态内容了</p></li><li><p>以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-once</span>&gt;</span>初始化的n值是：&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><br>    &lt;/div&gt;<br><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">n</span>: <span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ol></li><li><p><code>v-pre</code></p><ol><li><p>跳过其所在节点的编译过程。</p></li><li><p>可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-pre</span>&gt;</span>Vue其实很简单<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是：</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">n</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">n</span>: <span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ol></li></ul><h4 id="1-2-自定义指令"><a href="#1-2-自定义指令" class="headerlink" title="1.2 自定义指令"></a>1.2 自定义指令</h4><p>自定义指令分为局部指令和全局指令</p><p><strong>基本用法</strong></p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677153351962.png" alt="1677153351962"></p><ol><li><p>需求1：定义一个v-big指令和v-text通能类似，但把绑定的数值放大10倍</p></li><li><p>需求2：定义一个v-fbind指令，和v-bind功能类似，但可以让其所绑定的input元素默认获取焦点。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>放大十倍后的n值是: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-big</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>局部注册</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                <span class="hljs-attr">n</span>: <span class="hljs-number">1</span><br>            &#125;,<br>            <span class="hljs-comment">// 注册局部指令 </span><br>              <span class="hljs-comment">// 这里面的都是局部指令 只能给指定的实例用</span><br>            <span class="hljs-attr">directives</span>: &#123;<br>                 <span class="hljs-comment">// 第一种写法 函数式</span><br>                <span class="hljs-title function_">big</span>(<span class="hljs-params">element, binding</span>) &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;big&#x27;</span>, <span class="hljs-variable language_">this</span>);<span class="hljs-comment">//window</span><br>                    <span class="hljs-comment">// console.log(&#x27;big&#x27;);</span><br>                    <span class="hljs-comment">// console.log(binding);</span><br>                    element.<span class="hljs-property">innerText</span> = binding.<span class="hljs-property">value</span> * <span class="hljs-number">10</span><br><br>                &#125;<br>            &#125;,<br>            <span class="hljs-comment">// 第二种写法 对象式  其实是分三步的 里面放三个函数</span><br>                <span class="hljs-attr">fbind</span>: &#123;<br>                    <span class="hljs-title function_">bind</span>(<span class="hljs-params">element, binding</span>) &#123;<br>                        element.<span class="hljs-property">value</span> = binding.<span class="hljs-property">value</span><br>                    &#125;,<br>                    <span class="hljs-title function_">inserted</span>(<span class="hljs-params">element, binding</span>) &#123;<br>                        element.<span class="hljs-title function_">focus</span>()<br>                    &#125;,<br>                    <span class="hljs-title function_">update</span>(<span class="hljs-params">element, binding</span>) &#123;<br>                        element.<span class="hljs-property">value</span> = binding.<span class="hljs-property">value</span><br>                    &#125;<br>                &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li>big函数何时会被调用？1.指令与元素成功绑定时（一上来）。2.指令所在的模板被重新解析时。 </li><li> 配置对象中常用的3个回调：  </li><li>.bind：指令与元素成功绑定时调用。 </li><li> .inserted：指令所在元素被插入页面时调用。 </li><li> .update：指令所在模板结构被重新解析时调用。 </li><li> 1.指令定义时不加v-，但使用时要加v-；  </li><li>2.指令名如果是多个单词，要使用kebab-case命名方式，不要用camelCase命名。 </li></ul><p><strong>全局指令</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//定义全局指令</span><br><span class="hljs-comment">/* Vue.directive(&#x27;fbind&#x27;,&#123;</span><br><span class="hljs-comment">//指令与元素成功绑定时（一上来）</span><br><span class="hljs-comment">bind(element,binding)&#123;</span><br><span class="hljs-comment">element.value = binding.value</span><br><span class="hljs-comment">&#125;,</span><br><span class="hljs-comment">//指令所在元素被插入页面时</span><br><span class="hljs-comment">inserted(element,binding)&#123;</span><br><span class="hljs-comment">element.focus()</span><br><span class="hljs-comment">&#125;,</span><br><span class="hljs-comment">//指令所在的模板被重新解析时</span><br><span class="hljs-comment">update(element,binding)&#123;</span><br><span class="hljs-comment">element.value = binding.value</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">&#125;) */</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="2-Vue生命周期"><a href="#2-Vue生命周期" class="headerlink" title="2. Vue生命周期"></a>2. <code>Vue</code>生命周期</h3><p>![生命周期](F:\C语言学习\前端学习相关资料\课程资料\05 - 尚硅谷Vue学习资料（含课件）\资料（含课件）\02_原理图\生命周期.png)</p><p><strong>生命周期的基本概念</strong></p><ol><li>引入生命周期</li></ol><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677155007631.png" alt="1677155007631"></p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677153601060.png" alt="1677153601060"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 动态绑定样式 里面写成对象 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;opacity: opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 简写 --&gt;</span><br>        <span class="hljs-comment">&lt;!-- 对象里面 属性名和属性值一样的 可以简写 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:sty</span></span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-attr">opacity</span>: <span class="hljs-number">1</span><br>            &#125;,<br>            <span class="hljs-attr">methods</span>: &#123;<br><br>            &#125;,<br>            <span class="hljs-comment">// Vue完成模板的解析并把初识的真实的DOM元素放入页面后（挂载完毕），调用mounted</span><br>            <span class="hljs-comment">//在关键性的时候Vue调用mounted</span><br>            <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-comment">// 挂载：把真实DOM放入页面</span><br>                <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> -= <span class="hljs-number">0.01</span><br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> &lt;= <span class="hljs-number">0</span>) <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> = <span class="hljs-number">1</span><br>                &#125;, <span class="hljs-number">16</span>)<br>            &#125;<br>        &#125;)<br>        <span class="hljs-comment">// 通过外部定时器实现  不推荐</span><br>        <span class="hljs-comment">// setInterval(() =&gt; &#123;</span><br>        <span class="hljs-comment">//     vm.opacity -= 0.01</span><br>        <span class="hljs-comment">//     if (vm.opacity &lt;= 0) vm.opacity = 1</span><br>        <span class="hljs-comment">// &#125;, 16)</span><br><br>        <span class="hljs-comment">// window.onload()</span><br><br>        <span class="hljs-comment">// vm的生命周期：在关键的时间点调用关键的函数</span><br><br>        <span class="hljs-comment">// ????       调用????函数</span><br>        <span class="hljs-comment">// 挂载完毕了   调用mounted函数</span><br>        <span class="hljs-comment">// ????    调用????函数</span><br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>分析生命周期</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- el&#x27;s outerHTML 整个div都算模板 --&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span> <span class="hljs-attr">:x</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是: &#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>点我N+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;bye&quot;</span>&gt;</span>销毁vm<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-comment">//     template: `</span><br>           <span class="hljs-comment">//     &lt;div&gt;</span><br>           <span class="hljs-comment">//         &lt;h2&gt;当前的n值是: &#123;&#123;n&#125;&#125;&lt;/h2&gt;</span><br>           <span class="hljs-comment">// &lt;button @click=&quot;add&quot;&gt;点我N+1&lt;/button&gt;</span><br>           <span class="hljs-comment">//         &lt;/div&gt;</span><br>           <span class="hljs-comment">//     `,</span><br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">n</span>: <span class="hljs-number">1</span><br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">add</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">n</span>++<br>               &#125;,<br>               <span class="hljs-title function_">bye</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-comment">// 点了这个销毁之后 再按上面的add就失效了</span><br>                   <span class="hljs-variable language_">this</span>.$destroy()<br>                   <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;bye&#x27;</span>);<br>               &#125;<br>           &#125;,<br>           <span class="hljs-comment">// 数据代理还没开始 没有vm._data n</span><br>           <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;beforeCreate&#x27;</span>);<br>               <span class="hljs-comment">// console.log(this);</span><br>               <span class="hljs-comment">// debugger</span><br>           &#125;,<br>           <span class="hljs-comment">// 数据监测和数据代理完成</span><br>           <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;created&#x27;</span>);<br>               <span class="hljs-comment">// console.log(this);</span><br>               <span class="hljs-comment">// debugger</span><br>           &#125;,<br>           <span class="hljs-title function_">beforeMount</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;beforeMount&#x27;</span>);<br>               <span class="hljs-comment">// console.log(this);</span><br>               <span class="hljs-comment">// document.querySelector(&#x27;h2&#x27;).innerHTML = &#x27;haha&#x27;</span><br><br>           &#125;,<br>           <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;mounted&#x27;</span>);<br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>);<br>               <span class="hljs-comment">// debugger</span><br>           &#125;,<br>           <span class="hljs-title function_">beforeUpdate</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;beforeUpdate&#x27;</span>);<br>               <span class="hljs-comment">// console.log(this.n);</span><br>               <span class="hljs-comment">// debugger</span><br>           &#125;,<br>           <span class="hljs-title function_">updated</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;updated&#x27;</span>)<br><br>           &#125;,<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>       &lt;!-- 动态绑定样式 里面写成对象 --&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;opacity: opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;opacity=1&quot;</span>&gt;</span>透明度设置为1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;stop&quot;</span>&gt;</span>点我停止变换<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>   &lt;/div&gt;<br><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">opacity</span>: <span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">stop</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-comment">// methods和mounted里的this.timer都可访问</span></span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-comment">// clearInterval(this.timer)</span></span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-comment">// 不通过清理定时器，直接暴力干掉vm</span></span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-comment">// 但是定时器没关掉</span></span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-variable language_">this</span>.$destroy()</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-comment">// Vue完成模板的解析并把初识的真实的DOM元素放入页面后（挂载完毕），调用mounted</span></span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-comment">//在关键性的时候Vue调用mounted</span></span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-comment">// 挂载：把真实DOM放入页面</span></span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer</span> = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> -= <span class="hljs-number">0.01</span></span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> &lt;= <span class="hljs-number">0</span>) <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> = <span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">               &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-comment">// 清除定时器写在销毁前更合适，万一不需要stop函数 </span></span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-title function_">beforeDestroy</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-comment">// 在这里清除定时器 而不是放在methods里</span></span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-built_in">clearInterval</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timer</span>)</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ol start="3"><li>生命周期总结</li></ol><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677155145630.png" alt="1677155145630"></p><h3 id="3-组件"><a href="#3-组件" class="headerlink" title="3. 组件"></a>3. 组件</h3><h4 id="3-1-基本使用"><a href="#3-1-基本使用" class="headerlink" title="3.1 基本使用"></a>3.1 基本使用</h4><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677155205972.png"></p><h4 id="3-2-非单文件组件"><a href="#3-2-非单文件组件" class="headerlink" title="3.2 非单文件组件"></a>3.2 非单文件组件</h4><p><strong>注意点<img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677155205972.png" alt="1677155205972"></strong></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677155321378.png" alt="1677155321378"></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677155480404.png" alt="1677155480404"></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677155570921.png" alt="1677155570921"></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677155710326.png" alt="1677155710326"></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677153351962.png" alt="1677153351962"></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677153601060.png" alt="1677153601060"></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677154990364.png" alt="1677154990364"></p><p><img src="C:\Users\ASUS\Desktop\整理桌面资料\myblog\puppyyang\source\images\1677155007631.png" alt="1677155007631"></p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677155321378.png" alt="1677155321378"></p><p><strong>组件的嵌套</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- &lt;hello&gt;&lt;/hello&gt; --&gt;</span><br>       <span class="hljs-comment">&lt;!-- 3. 引入组件标签 --&gt;</span><br>       <span class="hljs-comment">&lt;!-- &lt;school&gt;&lt;/school&gt; --&gt;</span><br><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> &lt;script&gt;<br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>        <span class="hljs-comment">// 创建hello 组件</span><br>        <span class="hljs-keyword">const</span> hello = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">`</span><br><span class="hljs-string">            &lt;div&gt;</span><br><span class="hljs-string">                &lt;h1&gt;学校名称:&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</span><br><span class="hljs-string">                </span><br><span class="hljs-string">            &lt;/div&gt;</span><br><span class="hljs-string">        `</span>,<br>            <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;欢迎来学&#x27;</span><br>                &#125;<br>            &#125;<br>        &#125;)<br>        <span class="hljs-comment">// 定义student组件</span><br>        <span class="hljs-keyword">const</span> student = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;<br><br>            <span class="hljs-attr">template</span>: <span class="hljs-string">`</span><br><span class="hljs-string">                    &lt;div&gt;</span><br><span class="hljs-string">                        &lt;h2&gt;学生:&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">                        &lt;h2&gt;年龄:&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">                    &lt;/div&gt;</span><br><span class="hljs-string">`</span>,<br>            <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,<br>                    <span class="hljs-attr">age</span>: <span class="hljs-number">18</span><br>                &#125;<br>            &#125;<br><br>        &#125;)<br><br><br>        <span class="hljs-comment">// 1.定义school组件</span><br>        <span class="hljs-keyword">const</span> school = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-comment">// 记得：组件注册给谁就放在谁里面 这里把student组件放在school组件里面了</span><br><br>            <span class="hljs-attr">template</span>: <span class="hljs-string">`</span><br><span class="hljs-string">            &lt;div&gt;</span><br><span class="hljs-string">                &lt;h2&gt;学校名称:&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">                &lt;h2&gt;学校地址:&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">                &lt;student&gt;&lt;/student&gt;</span><br><span class="hljs-string">               </span><br><span class="hljs-string">            &lt;/div&gt;</span><br><span class="hljs-string">        `</span>,<br>            <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span><br>                &#125;<br>            &#125;,<br>            <span class="hljs-comment">// 注册学生组件-局部</span><br>            <span class="hljs-attr">components</span>: &#123;<br>                student,<br><br>            &#125;<br><br>        &#125;)<br>        <span class="hljs-comment">// 定义app组件</span><br>        <span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">`</span><br><span class="hljs-string">        &lt;div&gt;</span><br><span class="hljs-string">            &lt;hello&gt;&lt;/hello&gt;</span><br><span class="hljs-string">            &lt;school&gt;&lt;/school&gt;</span><br><span class="hljs-string">            &lt;/div&gt;</span><br><span class="hljs-string">        `</span>,<br>            <span class="hljs-attr">components</span>: &#123;<br>                hello,<br>                school,<br>            &#125;<br><br>        &#125;)<br><br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">`</span><br><span class="hljs-string">            &lt;app&gt;&lt;/app&gt;`</span>,<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-comment">// 注册组件- 局部</span><br>            <span class="hljs-attr">components</span>: &#123;<br>                app<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><p>关于<strong>VueComponent</strong></p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677155480404.png" alt="1677155480404"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br><br>       <span class="hljs-comment">// 创建school组件</span><br>       <span class="hljs-keyword">const</span> school = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;<br>           <span class="hljs-attr">template</span>: <span class="hljs-string">`</span><br><span class="hljs-string">           &lt;div&gt;</span><br><span class="hljs-string">                   &lt;h2&gt;学校名称：&#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">           &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">           &lt;button @click=&quot;showName&quot;&gt;点我展示&lt;/button&gt;</span><br><span class="hljs-string">       &lt;/div&gt;</span><br><span class="hljs-string">           `</span>,<br>           <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-keyword">return</span> &#123;<br>                   <span class="hljs-attr">schoolName</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                   <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span><br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">showName</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-comment">// 这里的this是组件VueComponent （他本质是一个构造函数）</span><br>                   <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;showName&#x27;</span>, <span class="hljs-variable language_">this</span>);<br>               &#125;<br>           &#125;,<br>       &#125;)<br><br><br>       <span class="hljs-comment">// VueComponent的实例对象 vc</span><br>       <span class="hljs-comment">// Vue 实例对象vm</span><br>       <span class="hljs-comment">// 组件是可复用的vue实例</span><br>       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">components</span>: &#123;<br>               school<br>           &#125;<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure><p><strong>一个重要的内置关系</strong></p><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677155570921.png" alt="1677155570921"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>        <span class="hljs-comment">// Vue.extend 调用后返回的就是VueComponent构造函数的实例 这里也就是school</span><br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">x</span> = <span class="hljs-number">99</span><br>        <span class="hljs-keyword">const</span> school = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">`</span><br><span class="hljs-string">            &lt;div&gt;</span><br><span class="hljs-string">                    &lt;h2&gt;学校名称：&#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">            &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">            &lt;button @click=&quot;showX&quot;&gt;点我输出X&lt;/button&gt;</span><br><span class="hljs-string">           </span><br><span class="hljs-string">        &lt;/div&gt;</span><br><span class="hljs-string">            `</span>,<br>            <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">schoolName</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span><br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">methods</span>: &#123;<br>                <span class="hljs-title function_">showX</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-comment">// this是组件的实例vc</span><br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>);<br>                &#125;<br>            &#125;<br><br>        &#125;)<br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(school.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>);<br>        <span class="hljs-comment">// VueComponent的实例对象 vc</span><br>        <span class="hljs-comment">// Vue 实例对象vm</span><br>        <span class="hljs-comment">// 组件是可复用的vue实例</span><br>        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">components</span>: &#123;<br>                school<br>            &#125;<br>        &#125;)<br>        <span class="hljs-comment">// 构造函数</span><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> = <span class="hljs-number">1</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span> = <span class="hljs-number">2</span><br>        &#125;<br><br>        <span class="hljs-comment">// 创建一个Demo的实例对象</span><br>        <span class="hljs-keyword">const</span> d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Demo</span>()<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Demo</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>);<span class="hljs-comment">//显式原型属性</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(d.<span class="hljs-property">__proto__</span>);<span class="hljs-comment">//隐式原型属性</span><br>        <span class="hljs-comment">// 显式原型属性和隐式原型属性都指向了原型对象</span><br><br>        <span class="hljs-comment">// 通过显式原型属性操作原型对象</span><br>        <span class="hljs-title class_">Demo</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">x</span> = <span class="hljs-number">90</span><br><br>        <span class="hljs-comment">// 隐式原型属性上也有了 d.__proto__</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(d.<span class="hljs-property">x</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;@&#x27;</span>, d);<br><br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><h4 id="3-3-单文件组件"><a href="#3-3-单文件组件" class="headerlink" title="3.3 单文件组件"></a>3.3 单文件组件</h4><p><img src="C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\1677155710326.png" alt="1677155710326"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue学习笔记（复习）</title>
    <link href="/2023/02/20/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%A4%8D%E4%B9%A0%EF%BC%89/"/>
    <url>/2023/02/20/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%A4%8D%E4%B9%A0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>2023-2-20</strong></p><ul><li><p><code>Object.defineProperty</code>方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象. 应当直接在 Object 构造器对象上调用此方法，而不是在任意一个 Object 类型的实例上调用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">let</span> number = <span class="hljs-number">18</span><br>        <span class="hljs-keyword">let</span> person = &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>,<br>            <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span><br>        &#125;<br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>            <span class="hljs-comment">// value: 42,</span><br>            <span class="hljs-comment">// writable: false, //控制属性是否可以被修改</span><br>            <span class="hljs-comment">// enumerable: true, //控制属性是否可枚举</span><br>            <span class="hljs-comment">// configurable: true, //控制属性是否可被删除</span><br>            <span class="hljs-comment">// 有人读取age属性时 getter就会被调用，且返回值就是age的值</span><br>            <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;有人读取了age属性&#x27;</span>);<br>                <span class="hljs-keyword">return</span> number<br>            &#125;,<br>            <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;有人修改了age属性，且值是&#x27;</span>, value);<br>                number = value<br>            &#125;<br>        &#125;)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(person)); <span class="hljs-comment">//[name, sex]</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(person);<br><br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>数据代理：通过一个对象代理对另一个对象中的属性进行读、写操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">let</span> obj = &#123; <span class="hljs-attr">x</span>: <span class="hljs-number">100</span> &#125;<br>        <span class="hljs-keyword">let</span> obj2 = &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">200</span> &#125;<br><br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(obj2, <span class="hljs-string">&#x27;x&#x27;</span>, &#123;<br>            <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> obj.<span class="hljs-property">x</span><br>            &#125;,<br>            <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>) &#123;<br>                obj.<span class="hljs-property">x</span> = value<br>            &#125;<br><br>        &#125;)<br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj2);<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>数据代理。</p><ol><li><p>Vue中的数据代理：  通过vm对象来代理data对象中属性的操作（读/写） </p></li><li><p>Vue中数据代理的好处：  更加方便的操作data中的数据 </p></li><li><p>基本原理：  通过Object.defineProperty()把data对象中所有属性添加到vm上。  为每一个添加到vm上的属性，都指定一个getter/setter。  在getter/setter内部去操作（读/写）data中对应的属性。 </p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;洪福科技园&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// vm._data === data</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>绑定事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>      &lt;!-- <span class="hljs-number">1.</span> 使用v-<span class="hljs-attr">on</span>:<span class="hljs-variable constant_">XXX</span> 绑定事件 <span class="hljs-variable constant_">XXX</span>是事件名 --&gt;<br>      &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span> --&gt;<br>      &lt;!-- <span class="hljs-number">2.</span> 使用@<span class="hljs-variable constant_">XXX</span> 绑定事件 --&gt;<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息1-不传参<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo2($event, 66)&quot;</span>&gt;</span>点我提示信息2-传参<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>      &lt;!-- @clik=<span class="hljs-string">&quot;demo&quot;</span> 和 @click=<span class="hljs-string">&quot;demo($event)&quot;</span> 效果一致，但是后者可以传参数--&gt;<br>  &lt;/div&gt;<br>  <br>  &lt;script&gt;<br>      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>          <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>          <span class="hljs-attr">data</span>: &#123;<br>              <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span><br>          &#125;,<br>          <span class="hljs-comment">// 事件的回调需要配置在methods对象中，最终在vm上</span><br>          <span class="hljs-comment">// methods中配置的函数，不要用箭头函数，否则this就不是vm了</span><br>          <span class="hljs-comment">// methods中配置的函数，都是被Vue所管理的函数，this的指向是vm或组件实例对象</span><br>          <span class="hljs-attr">methods</span>: &#123;<br>              <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">event</span>) &#123;<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event.<span class="hljs-property">target</span>.<span class="hljs-property">innerText</span>)<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>); <span class="hljs-comment">//此处的this是vm</span><br>  <br>              &#125;,<br>              <span class="hljs-title function_">showInfo2</span>(<span class="hljs-params">event, number</span>) &#123;<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event, number);<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)<span class="hljs-comment">//此处的this是vm</span><br>              &#125;<br>          &#125;<br>      &#125;)<br></code></pre></td></tr></table></figure></li><li><p>Vue中的事件修饰符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Vue中的事件修饰符：</span><br><span class="hljs-comment">//1.prevent：阻止默认事件（常用）；</span><br><span class="hljs-comment">//2.stop：阻止事件冒泡（常用）；</span><br><span class="hljs-comment">//3.once：事件只触发一次（常用）；</span><br><span class="hljs-comment">//4.capture：使用事件的捕获模式；</span><br><span class="hljs-comment">//5.self：只有event.target是当前操作的元素时才触发事件；</span><br><span class="hljs-comment">//6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span><br><br>&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 阻止a链接页面的默认跳转 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 阻止事件冒泡 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo1&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-comment">&lt;!-- 修饰符可以连写 --&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span> @<span class="hljs-attr">click.prevent.stop</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 事件只触发一次 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 使用事件的捕获模式 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="language-xml">            div1</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsg(2)&quot;</span>&gt;</span>div2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo1&quot;</span> @<span class="hljs-attr">click.self</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-comment">&lt;!-- 这里本来应该执行两次showInfo的 因为冒泡 但是点击的是btn 所以并不会执行 --&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list&quot;</span> @<span class="hljs-attr">wheel.passive</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;你好 提示信息&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">showMsg</span>(<span class="hljs-params">msg</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(msg);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">demo</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10000</span>; i++) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;#&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;累坏了&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure></li><li><p>键盘事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1.Vue中常用的按键别名：</span><br>回车 =&gt; enter<br>删除 =&gt; <span class="hljs-keyword">delete</span> (捕获“删除”和“退格”键)<br>退出 =&gt; esc<br>空格 =&gt; space<br>换行 =&gt; tab (特殊，必须配合keydown去使用)<br>上 =&gt; up<br>下 =&gt; down<br>左 =&gt; left<br>右 =&gt; right<br><br><span class="hljs-number">2.</span><span class="hljs-title class_">Vue</span>未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-<span class="hljs-keyword">case</span>（短横线命名）<br><br><span class="hljs-number">3.</span>系统修饰键（用法特殊）：ctrl、alt、shift、meta<br>(<span class="hljs-number">1</span>).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。<br>(<span class="hljs-number">2</span>).配合keydown使用：正常触发事件。<br><br><span class="hljs-number">4.</span>也可以使用keyCode去指定具体的按键（不推荐）<br><br><span class="hljs-number">5.</span><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.自定义键名 = 键码，可以去定制按键别名<br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;按下回车提示输入&quot;</span> @<span class="hljs-attr">keydown.huiche</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.<span class="hljs-property">huiche</span> = <span class="hljs-number">13</span><span class="hljs-comment">// 定义一个别名按键</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// console.log(e.key, e.keyCode) // Enter 13</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">value</span>); <span class="hljs-comment">//获取输入的文本</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>计算属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1. 姓名案例-- 插值语法实现</span><br>    &lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        姓：&lt;input type=<span class="hljs-string">&quot;text&quot;</span> v-model=<span class="hljs-string">&quot;firstName&quot;</span>&gt;&lt;br&gt;&lt;br&gt;<br>        名：&lt;input type=<span class="hljs-string">&quot;text&quot;</span> v-model=<span class="hljs-string">&quot;lastName&quot;</span>&gt;&lt;br&gt;&lt;br&gt;<br>        全名: <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;firstName&#125;&#125;--&#123;&#123;lastName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.<span class="hljs-property">huiche</span> = <span class="hljs-number">13</span><span class="hljs-comment">// 定义一个别名按键</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">firstName</span>: <span class="hljs-string">&#x27;张&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">lastName</span>: <span class="hljs-string">&#x27;三&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="hljs-comment">// 2. methods实现</span><br>&lt;div id=&quot;root&quot;&gt;<br>        姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        名：&lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        全名: &lt;span&gt;&#123;&#123;fullName()&#125;&#125;&lt;/span&gt;<br>    &lt;/div&gt;<br>    &lt;script&gt;<br>        Vue.config.productionTip = false<br>        Vue.config.keyCodes.huiche = 13// 定义一个别名按键<br>        new Vue(&#123;<br>            el: &#x27;#root&#x27;,<br>            data: &#123;<br>                firstName: &#x27;张&#x27;,<br>                lastName: &#x27;三&#x27;<br>            &#125;,<br>            methods: &#123;<br>                fullName() &#123;<br>                    return this.firstName + &#x27;-&#x27; + this.lastName<br>                &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br><br>//3. 计算属性实现<br>// 1.定义：要用的属性不存在，要通过已有属性计算得来<br>    //2. 原理：低层借助Object.defineproperty方法提供的getter和setter<br>   // 3. get函数什么时候执行？<br>        //1. 初次读取时会执行一次<br>       // 2. 当依赖的数据发生改变时会被再次调用<br>   // 4. 优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试更方便<br>   // 5. 备注：1. 计算属性最终会出现在vm上， 直接读取使用即可<br>           // 2. 如果计算属性要被修改，那么必须要写set函数去响应修改，且set中要引起计算时依赖的数据发生改变<br> &lt;div id=&quot;root&quot;&gt;<br>        姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        名：&lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        测试: &lt;input type=&quot;text&quot; v-model=&quot;x&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;&lt;br&gt;&lt;br&gt;<br>        &lt;!-- get只调用了一次 fullName调用一次后就缓存了  但methods会吊好多次 --&gt;<br>        &lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;<br>    &lt;/div&gt;<br>    &lt;script&gt;<br>        Vue.config.productionTip = false<br>        Vue.config.keyCodes.huiche = 13// 定义一个别名按键<br>        new Vue(&#123;<br>            el: &#x27;#root&#x27;,<br>            data: &#123;<br>                firstName: &#x27;张&#x27;,<br>                lastName: &#x27;三&#x27;,<br>                x: &#x27;你好&#x27;<br>            &#125;,<br>            methods: &#123;<br>                demo() &#123;<br><br>                &#125;<br>            &#125;,<br>            computed: &#123;<br>                fullName: &#123;<br>                    // get函数的作用：当有人读取fullName时，get就会被调用，且返回值就作为fullName的值<br>                    // get什么时候调用 ：初次读取fullName时， 所依赖的数据发生变化时<br>                    get() &#123;<br>                        // console.log(&#x27;get被调用了&#x27;);<br>                        // console.log(this);<br>                        return this.firstName + &#x27;-&#x27; + this.lastName<br>                    &#125;,<br>                    // set什么时候被调用？ 当fullName被修改时<br>                    set(value) &#123;<br>                        console.log(&#x27;set被调用了&#x27;);<br>                        console.log(&#x27;set&#x27;, value);<br>                        const arr = value.split(&#x27;-&#x27;)<br>                        this.firstName = arr[0]<br>                        this.lastName = arr[1]<br>                    &#125;<br>                &#125;<br>                <br>                  // 简写<br>                //fullName() &#123;<br>                    //console.log(&#x27;get被调用了&#x27;);<br>                   // return this.firstName + &#x27;-&#x27; + this.lastName<br>               // &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>监视属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很好&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        &lt;!-- 绑定事件的时候： @xxx=<span class="hljs-string">&quot;yyy&quot;</span> yyy可以写一些简单的语句 --&gt;<br>        &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;isHot = !isHot&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span> --&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 为什么这里不切换？</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">/* watch: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                isHot: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    immediate: true,  //初始化时让handler调用一下</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    // handler什么时候调用？ 当isHot发生改变时</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    handler(newVal, oldVal) &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            &#125; */</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">//写法2 vm.$watch</span></span></span><br><span class="language-javascript"><span class="language-xml">        </span></span><br><span class="language-javascript"><span class="language-xml">        vm.$watch(<span class="hljs-string">&#x27;isHot&#x27;</span>, &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">immediate</span>:<span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">hanlder</span>(<span class="hljs-params">newVal, oldVal</span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal)</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure></li><li><p>深度监视</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 深度监视：<br>    <span class="hljs-number">1.</span> <span class="hljs-title class_">Vue</span>中的watch默认不监测对象内部值的改变（一层）<br>    <span class="hljs-number">2.</span> 配置<span class="hljs-attr">deep</span>:<span class="hljs-literal">true</span> 可以监测对象内部值改变（多层）<br><br>    备注：<span class="hljs-title class_">Vue</span>自身可以监测对象内部值的改变，但<span class="hljs-title class_">Vue</span>提供的watch默认不可以<br>            使用watch时根据--&gt;<br> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>a的值:&#123;&#123;numbers.a&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>b的值:&#123;&#123;numbers.b&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">numbers</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">c</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">d</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                            <span class="hljs-attr">e</span>: <span class="hljs-number">100</span></span></span><br><span class="language-javascript"><span class="language-xml">                        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">watch</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">handler</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal);</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// 监视多及结构中某个属性的变化</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#x27;numbers.a&#x27;: &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     hanlder() &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//         console.log(&#x27;a被改变了&#x27;);</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//监视多级结构中所有属性的变化</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">numbers</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">handler</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;numbers改变了&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 深度监测 简写</span><br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">watch</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// 正常写法</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// isHot: &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     immediate: true,</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     deep: true,</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     handler(newVal, oldVal) &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//         console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// 简写</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// isHot(newVal, oldVal) &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 正常写法</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">/* vm.$watch(&#x27;isHot&#x27;, &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            immediate: true,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            deep: true,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            handler(newVal, oldVal) &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">        &#125;) */</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 简写</span></span></span><br><span class="language-javascript"><span class="language-xml">        vm.$watch(<span class="hljs-string">&#x27;isHot&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">newVal, oldVal</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>姓名案例-watch实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//computed和watch的区别：</span><br><span class="hljs-comment">// computed能完成的功能，watch都可以完成</span><br><span class="hljs-comment">// watch 能完成的功能，computed不一定能完成</span><br><span class="hljs-comment">//原则： 所有被Vue管理的函数，最好写成普通函数，这样this指向的都是vm实例或者组件实例， 所有不被vue管理的函数（定时器的回调函数，ajax的回调函数，promise的回调函数等）最好写成箭头函数，这样this的指向才是vm或组件实例对象</span><br><br><br><br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    姓: &lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>    名: &lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>    全名: &lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;<br>&lt;/div&gt;<br>&lt;script&gt;<br>    Vue.config.productionTip = false<br>    const vm = new Vue(&#123;<br>        el: &#x27;#root&#x27;,<br>        data: &#123;<br>            firstName: &#x27;张&#x27;,<br>            lastName: &#x27;三&#x27;,<br>            fullName: &#x27;张-三&#x27;<br>        &#125;,<br>        //watch能开启异步任务但是computed不能开<br>        watch: &#123;<br>            firstName(val) &#123;<br>                setTimeout(() =&gt; &#123;<br>                    console.log(this);<br>                     //箭头函数没有自己的this 所以往外找 找到的是vm<br>                    this.fullName = val + &#x27;-&#x27; + this.lastName<br>                &#125;, 1000)<br>            &#125;,<br>            lastName(val) &#123;<br>                this.fullName = this.firstName + &#x27;-&#x27; + this.val<br>            &#125;<br>        &#125;<br><br>    &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><code>watch</code>和<code>computed</code>的区别：<a href="https://blog.51cto.com/u_15302032/3067114">https://blog.51cto.com/u_15302032/3067114</a> </p></li></ul><h4 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.basic</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">           <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">           <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.normal</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">background-color</span>: skyblue;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.atguigu1</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">background-color</span>: yellowgreen;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.atguigu2</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">           <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">10px</span> red;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.atguigu3</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">       &#125;</span><br><span class="language-css">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"> <span class="hljs-comment">&lt;!-- 绑定样式：</span></span><br><span class="hljs-comment"><span class="language-xml">    1. class样式： class=&quot;XXX&quot; XXX可以是字符串，对象，数组</span></span><br><span class="hljs-comment"><span class="language-xml">                     字符串写法适用于：类名不确定，要动态获取</span></span><br><span class="hljs-comment"><span class="language-xml">                        数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用</span></span><br><span class="hljs-comment"><span class="language-xml">        2. style样式：</span></span><br><span class="hljs-comment"><span class="language-xml">            ：style=&quot;</span></span><span class="hljs-template-variable">&#123;fontSize:xxx&#125;</span><span class="language-xml"><span class="hljs-comment">&quot; 其中XXX是动态值</span></span><br><span class="hljs-comment"><span class="language-xml">            :style=&quot;[a,b]&quot;其中a, b是样式对象</span></span><br><span class="hljs-comment"><span class="language-xml">--&gt;</span></span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    &lt;!-- 绑定<span class="hljs-keyword">class</span>样式--字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;mood&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;br&gt;&lt;br&gt;<br>    &lt;!-- 绑定<span class="hljs-keyword">class</span>样式--数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;br&gt;&lt;br&gt;<br>    &lt;!-- 绑定<span class="hljs-keyword">class</span>样式--对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用  --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;br&gt;&lt;br&gt;<br>    &lt;!-- 绑定style样式--对象写法 --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    &lt;!--  绑定style样式--数组写法  --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/div&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">mood</span>: <span class="hljs-string">&#x27;normal&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">classArr</span>: [<span class="hljs-string">&#x27;atguigu1&#x27;</span>, <span class="hljs-string">&#x27;atguigu2&#x27;</span>, <span class="hljs-string">&#x27;atguigu3&#x27;</span>],</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">classObj</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">atguigu1</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">atguigu2</span>: <span class="hljs-literal">false</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">styleObj</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">styleObj2</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;orange&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">styleArr</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;blue&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;gray&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            ]</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">changeMood</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&#x27;happy&#x27;</span>, <span class="hljs-string">&#x27;sad&#x27;</span>, <span class="hljs-string">&#x27;normal&#x27;</span>]</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-keyword">const</span> index = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">3</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">mood</span> = arr[index]</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">-- </span><br>条件渲染：<br><span class="hljs-number">1.</span>v<span class="hljs-operator">-</span>if<br>写法：<br>(<span class="hljs-number">1</span>).v<span class="hljs-operator">-</span>if<span class="hljs-operator">=</span>&quot;表达式&quot; <br>(<span class="hljs-number">2</span>).v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span><span class="hljs-operator">-</span>if<span class="hljs-operator">=</span>&quot;表达式&quot;<br>(<span class="hljs-number">3</span>).v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span><span class="hljs-operator">=</span>&quot;表达式&quot;<br>适用于：切换频率较低的场景。<br>特点：不展示的DOM元素直接被移除。<br>注意：v<span class="hljs-operator">-</span>if可以和:v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span><span class="hljs-operator">-</span>if、v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span>一起使用，但要求结构不能被“打断”。<br><br><span class="hljs-number">2.</span>v<span class="hljs-operator">-</span><span class="hljs-keyword">show</span><br>写法：v<span class="hljs-operator">-</span><span class="hljs-keyword">show</span><span class="hljs-operator">=</span>&quot;表达式&quot;<br>适用于：切换频率较高的场景。<br>特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉<br><br><span class="hljs-number">3.</span>备注：使用v<span class="hljs-operator">-</span>if的时，元素可能无法获取到，而使用v<span class="hljs-operator">-</span><span class="hljs-keyword">show</span>一定可以获取到。<br> <span class="hljs-comment">--&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>       &lt;!-- 使用v-show做条件渲染 --&gt;<br>       &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;1===1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span> --&gt;<br><br>       &lt;!-- v-<span class="hljs-keyword">if</span>做条件渲染 --&gt;<br>       &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;1===1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span> --&gt;<br><br>       &lt;!-- v-<span class="hljs-keyword">else</span> 和 v-<span class="hljs-keyword">else</span>-<span class="hljs-keyword">if</span> --&gt;<br>       &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;n===1&quot;</span>&gt;</span>Angular<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;n===2&quot;</span>&gt;</span>React<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;n===3&quot;</span>&gt;</span>Vue<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span> --&gt;<br><br>       &lt;!-- v-<span class="hljs-keyword">if</span>与template的配合使用 --&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;n===1&quot;</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>尚硅谷<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>   &lt;/div&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">n</span>: <span class="hljs-number">0</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>列表渲染</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- v-<span class="hljs-keyword">for</span>指令:<br><span class="hljs-number">1.</span>用于展示列表数据<br><span class="hljs-number">2.</span>语法：v-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;(item, index) in xxx&quot;</span> :key=<span class="hljs-string">&quot;yyy&quot;</span><br><span class="hljs-number">3.</span>可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少） --&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p, index) of persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历对象 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>汽车信息（遍历对象）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value, k) of car&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;k&quot;</span>&gt;</span>&#123;&#123;k&#125;&#125;-&#123;&#123;value&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历字符串 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>测试遍历字符串（用的很少）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(char, index) of str&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;char&#125;&#125;-&#123;&#123;index&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历指定次数 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>测试遍历指定次数（用得少）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(number, index) of 5&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;-&#123;&#123;number&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">persons</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">               ],</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">car</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;奥迪A8&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-attr">price</span>: <span class="hljs-string">&#x27;70万&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;黑色&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">               &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;hell0&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs xquery">//<span class="hljs-built_in"> key</span>的原理<br><br><br>&lt;!-- <br>面试题：react、vue中<span class="hljs-built_in">的key</span>有什么作用？<span class="hljs-built_in">（key</span>的内部原理）<br><br><span class="hljs-number">1</span>. 虚拟DOM<span class="hljs-built_in">中key</span>的作用：<br><span class="hljs-built_in">key</span>是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, <br>随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：<br><br><span class="hljs-number">2</span>.对比规则：<br>(<span class="hljs-number">1</span>).旧虚拟DOM中找到了与新虚拟DOM相同<span class="hljs-built_in">的key</span>：<br>①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！<br>②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。<br><br>(<span class="hljs-number">2</span>).旧虚拟DOM中未找到与新虚拟DOM相同<span class="hljs-built_in">的key</span><br>创建新的真实DOM，随后渲染到到页面。<br><br><span class="hljs-number">3</span>. 用index作<span class="hljs-built_in">为key</span>可能会引发的问题：<br><span class="hljs-number">1</span>. 若对数据进行：逆序添加、逆序删除等破坏顺序操作:<br>会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。<br><br><span class="hljs-number">2</span>. 如果结构中还包含输入类的DOM：<br>会产生错误DOM更新 ==&gt; 界面有问题。<br><br><span class="hljs-number">4</span>. 开发中如何选<span class="hljs-built_in">择key</span>?:<br><span class="hljs-number">1</span>.最好使用每条数据的唯一标识作<span class="hljs-built_in">为key</span>, 比<span class="hljs-built_in">如id</span>、手机号、身份证号、学号等唯一值。<br><span class="hljs-number">2</span>.如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，<br>使用index作<span class="hljs-built_in">为key</span>是没有问题的。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表（遍历数组）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><span class="language-xml"></span><br><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><span class="language-xml"></span><br><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p,index) of persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="language-xml"></span><span class="language-xquery">&#123;&#123;p<span class="hljs-built_in">.name</span>&#125;</span><span class="language-xml">&#125;-</span><span class="language-xquery">&#123;&#123;p.age&#125;</span><span class="language-xml">&#125;</span><br><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(</span></span><span class="language-xquery">&#123;</span><br><span class="language-xquery">el:<span class="hljs-string">&#x27;#root&#x27;</span>,</span><br><span class="language-xquery">data:&#123;</span><br><span class="language-xquery">persons:[</span><br><span class="language-xquery"><span class="hljs-built_in">&#123;id</span>:<span class="hljs-string">&#x27;001&#x27;</span><span class="hljs-built_in">,name</span>:<span class="hljs-string">&#x27;张三&#x27;</span>,age:<span class="hljs-number">18</span>&#125;</span><span class="language-xml">,</span><br><span class="language-xml"></span><span class="language-xquery"><span class="hljs-built_in">&#123;id</span>:<span class="hljs-string">&#x27;002&#x27;</span><span class="hljs-built_in">,name</span>:<span class="hljs-string">&#x27;李四&#x27;</span>,age:<span class="hljs-number">19</span>&#125;</span><span class="language-xml">,</span><br><span class="language-xml"></span><span class="language-xquery"><span class="hljs-built_in">&#123;id</span>:<span class="hljs-string">&#x27;003&#x27;</span><span class="hljs-built_in">,name</span>:<span class="hljs-string">&#x27;王五&#x27;</span>,age:<span class="hljs-number">20</span>&#125;</span><span class="language-xml"></span><br><span class="language-xml">]</span><br><span class="language-xml">&#125;,</span><br><span class="language-xml">methods: </span><span class="language-xquery">&#123;</span><br><span class="language-xquery">add()&#123;</span><br><span class="language-xquery">const p = <span class="hljs-built_in">&#123;id</span>:<span class="hljs-string">&#x27;004&#x27;</span><span class="hljs-built_in">,name</span>:<span class="hljs-string">&#x27;老刘&#x27;</span>,age:<span class="hljs-number">40</span>&#125;</span><span class="language-xml"><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">unshift</span>(p)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>列表过滤</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 列表过滤 --&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入名字&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p, index) of filPersons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;--&#123;&#123;p.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-comment">/* new Vue(&#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           el: &#x27;#root&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           data: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               keyWord: &#x27;&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               persons: [</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;001&#x27;, name: &#x27;马冬梅&#x27;, age: 19, sex: &#x27;女&#x27; &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;002&#x27;, name: &#x27;周冬雨&#x27;, age: 20, sex: &#x27;女&#x27; &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;003&#x27;, name: &#x27;周杰伦&#x27;, age: 21, sex: &#x27;男&#x27; &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;004&#x27;, name: &#x27;温兆伦&#x27;, age: 22, sex: &#x27;男&#x27; &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               ],</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               // 新数据</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               filPersons: []</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           //  //  indexOf 字符串中是否包含 -1 是不包含  其他都是包含</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           watch: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               keyWord: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   // 立即执行 先实现一遍</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   immediate: true,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   handler(val) &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                       this.filPersons = this.persons.filter((p) =&gt; &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                           return p.name.indexOf(val) !== -1</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                       &#125;)</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">       &#125;) */</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-comment">// 用computed实现</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-comment">// 收集用户的输入：要把输入的数字都保存下来，所以需要自己建一个空字符串，v-model实现双向绑定</span></span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">persons</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;马冬梅&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周冬雨&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周杰伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;温兆伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">               ]</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">filPersons</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                       <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">keyWord</span>) !== -<span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">                   &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>列表排序</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入名字&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 2&quot;</span>&gt;</span>年龄升序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 1&quot;</span>&gt;</span>年龄降序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 0&quot;</span>&gt;</span>原顺序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p, index) of filPersons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="language-xml">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">sortType</span>: <span class="hljs-number">0</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// persons 原数据没动过 所以0的时候 会回到原顺序</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">persons</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;马冬梅&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周冬雨&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">31</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周杰伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;温兆伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                ]</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">// 计算属性  原本没有的 通过计算才出来的</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">filPersons</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">const</span> arr = <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">keyWord</span>) !== -<span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">sortType</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        arr.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">p1, p2</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">sortType</span> === <span class="hljs-number">1</span> ? p2.<span class="hljs-property">age</span> - p1.<span class="hljs-property">age</span> : p1.<span class="hljs-property">age</span> - p2.<span class="hljs-property">age</span></span></span><br><span class="language-javascript"><span class="language-xml">                        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> arr</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javasc">//更新时的一个问题<br>&lt;div id=&quot;root&quot;&gt;<br>&lt;h2&gt;人员列表&lt;/h2&gt;<br>&lt;button @click=&quot;updateMei&quot;&gt;更新马冬梅的信息&lt;/button&gt;<br>&lt;ul&gt;<br>&lt;li v-for=&quot;(p,index) of persons&quot; :key=&quot;p.id&quot;&gt;<br>&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;<br>&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;/div&gt;<br><br>&lt;script type=&quot;text/javascript&quot;&gt;<br>Vue.config.productionTip = false<br><br>const vm = new Vue(&#123;<br>el:&#x27;#root&#x27;,<br>data:&#123;<br>persons:[<br>&#123;id:&#x27;001&#x27;,name:&#x27;马冬梅&#x27;,age:30,sex:&#x27;女&#x27;&#125;,<br>&#123;id:&#x27;002&#x27;,name:&#x27;周冬雨&#x27;,age:31,sex:&#x27;女&#x27;&#125;,<br>&#123;id:&#x27;003&#x27;,name:&#x27;周杰伦&#x27;,age:18,sex:&#x27;男&#x27;&#125;,<br>&#123;id:&#x27;004&#x27;,name:&#x27;温兆伦&#x27;,age:19,sex:&#x27;男&#x27;&#125;<br>]<br>&#125;,<br>methods: &#123;<br>updateMei()&#123;<br>// this.persons[0].name = &#x27;马老师&#x27; //奏效<br>// this.persons[0].age = 50 //奏效<br>// this.persons[0].sex = &#x27;男&#x27; //奏效<br>// this.persons[0] = &#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125; //不奏效<br>this.persons.splice(0,1,&#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125;)<br>&#125;<br>&#125;<br>&#125;) <br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><strong>总结：</strong></p><ol><li>computed是Vue的计算属性，是根据依赖关系进行缓存的计算，只有在他的相关依赖关系发生改变时才会进行更新，通过getter和setter实现对属性数据的显示和监视。计算属性存在缓存，多次读取只执行一次getter. 计算属性本质上还是属性，写法如函数，命名如属性。在处理一些复杂的逻辑时计算属性很有用。</li><li>computed计算属性的值我们需要用到它，依赖变化运算过程自动执行；watch监听的值我们不需要用到它，我们只是想在它监听的值改变了的时候搞点事情–注册用户的时候是否可用</li></ol><ul><li><p>Vue监测对象属性的改变</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;rot&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称:&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">            学校地址:&#123;&#123;address&#125;&#125;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// vm身上有的name和data其实都是来自_data上</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">//_data里的数据都是来自于你所传入的data配置项  vm._data = data (这已经是第二步 第一步是：加工一下所传入的data， 加工后就能做响应式（有了getter和setter）， 能够实现对对象里边属性的监视)</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 比如 修改了name会引起name对应的setter的调用， setter一调用就会重新解析模板， 生成新的虚拟DOM， 新旧虚拟DOM对比，更新页面</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#rot&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">age</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">friends</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span></span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                ]</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>    &lt;!-- 加工能做响应式  数据变了页面变了  <span class="hljs-number">1.</span> 加工data  <span class="hljs-number">2.</span> vm.<span class="hljs-property">_data</span> = data<br>当修改了name时，就会引起 set name的调用 --&gt;<br></code></pre></td></tr></table></figure></li><li><p>模拟一个数据监测</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">let</span> data = &#123;<br>           <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>           <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,<br>           <span class="hljs-comment">/*  a:&#123;</span><br><span class="hljs-comment">                b:1</span><br><span class="hljs-comment">            &#125; */</span><br>           <span class="hljs-comment">// 如果再加上一个对象属性 下面的代码就不可用了  但是Vue可以监测多层</span><br>       &#125;<br>  <br>       <span class="hljs-comment">// 创建一个监视的实例对象，用于监视data中属性的变化</span><br>       <span class="hljs-keyword">const</span> obs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Observer</span>(data)<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obs);<br>  <br>       <span class="hljs-comment">// 准备一个vm实例对象</span><br>       <span class="hljs-keyword">let</span> vm = &#123;&#125;<br>       <span class="hljs-comment">// vm._data 是在vm里创建了一个_data属性， 属性值是obs对象，同时给对象data 改变地址的赋值</span><br>       vm.<span class="hljs-property">_data</span> = data = obs<br>       <span class="hljs-comment">// 可以理解为原数据里的data被劫持，然后包装成了另一个_data</span><br>  <br>       <span class="hljs-keyword">function</span> <span class="hljs-title function_">Observer</span>(<span class="hljs-params">obj</span>) &#123;<br>           <span class="hljs-comment">// 汇总对象中所有的属性形成一个数组</span><br>           <span class="hljs-keyword">const</span> keys = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj)<br>  <br>           <span class="hljs-comment">// 遍历</span><br>           keys.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">k</span>) =&gt;</span> &#123;<br>               <span class="hljs-comment">// Object.defineProperty(要定义属性的对象，要定义或修改的属性的名称，要定义或修改的属性描述符。) 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。</span><br>               <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(<span class="hljs-variable language_">this</span>, k, &#123;<br>                   <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>                       <span class="hljs-keyword">return</span> obj[k]<br>                   &#125;,<br>                   <span class="hljs-title function_">set</span>(<span class="hljs-params">val</span>) &#123;<br>                       <span class="hljs-comment">// Vue到了这一步没有做输出 而是去重新解析模板了</span><br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;k&#125;</span>被改了，我要去解析模板，生成虚拟DOM.....我要开始忙了`</span>);<br>                       obj[k] = val<br>                   &#125;<br>               &#125;)<br>           &#125;)<br>       &#125;<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p><code>Vue.set</code> 和 <code>this.$set()</code>的使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称：&#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址：&#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长是：&#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>性别: &#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;，对外&#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>朋友们<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(f,index) in student.friends&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;f.name&#125;&#125;-&#123;&#123;f.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>   &lt;/div&gt;<br>   &lt;script&gt;<br>       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">school</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                   <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,<br>               &#125;,<br>               <span class="hljs-attr">student</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>,<br>                   <span class="hljs-attr">age</span>: &#123;<br>                       <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,<br>                       <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,<br>                   &#125;,<br>                   <span class="hljs-attr">friends</span>: [<br>                       &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;,<br>                       &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tony&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">36</span> &#125;<br>                   ]<br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)<br>                   <span class="hljs-comment">// this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br>                   <span class="hljs-comment">// 当你发现你给对象加了一个属性，在控制台能打印出来，但是却没有更新到视图上时，也许这个时候就需要用到this.$set（）这个方法了，简单来说this.$set的功能就是解决这个问题的啦。</span><br>                   <span class="hljs-comment">//https://www.jb51.net/article/146580.htm 有二者的对比</span><br>               &#125;<br>           &#125;<br>       &#125;)<br>  <br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm);<br></code></pre></td></tr></table></figure></li><li><p>Vue监测数据改变的原理——数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称：&#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址：&#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长是：&#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别: &#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;，对外&#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>朋友们<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h,index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;h&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// Vue.set()不能直接用在data或者vm实例上，所以要先给一个scholl属性</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">school</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">student</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">age</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">/* hobby: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        h1: &#x27;抽烟&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        h2: &#x27;喝酒&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        h3: &#x27;烫头&#x27;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    &#125;, */</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&#x27;抽烟&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>, <span class="hljs-string">&#x27;烫头&#x27;</span>],</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 必须是数组 push splice unshift shift pop这些改变数组的方法能被vue监测到,可以用vue规定的7种改变数组的方法</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// Vue.set(vm.student.hobby, 1, &#x27;打台球&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// vm.$set(vm.student.hobby, 1, &#x27;打台球&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">friends</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tony&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">36</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    ]</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 当你发现你给对象加了一个属性，在控制台能打印出来，但是却没有更新到视图上时，也许这个时候就需要用到this.$set（）这个方法了，简单来说this.$set的功能就是解决这个问题的啦。</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">//https://www.jb51.net/article/146580.htm 有二者的对比</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>总结数据监测：</p><ol><li>Vue会监视data中所有层次的属性</li><li>如何监测<strong>对象</strong>中的数据：<ul><li>通过setter实现监视，且要在new Vue时就要传入要检要监测的数据。<ul><li>对象中后追加的属性，Vue默认不做响应处理</li><li>如需给后添加的属性做响应式，请使用API：<code>Vue.set(target, propertyName/index, value)</code>或<code>Vue.$set(target, propertyName/index, value)</code></li></ul></li></ul></li><li>如何监测<strong>数组</strong>中的数据：<ul><li>通过包裹数组更新元素的方法实现，本质就是做了两件事：<ul><li>调用原生的对应的方法进行数组更新</li><li>重新解析模板，进行页面更新</li></ul></li></ul></li><li>在Vue修改数组中的某个元素时一定要用如下方法：1. 使用这些API：push, pop, shift, unshift, splice, sort, reverse; 2. Vue.set()或vm.$set()</li><li>特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据对象 添加属性！！！ </li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;student.age++&quot;</span>&gt;</span>年龄+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加性别属性,默认值：男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;student.sex=&#x27;未知&#x27;&quot;</span>&gt;</span>修改性别<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateFirst&quot;</span>&gt;</span>修改第一个朋友的名字<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;drive&quot;</span>&gt;</span>修改第一个爱好为：开车<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;remove&quot;</span>&gt;</span>去掉第一个爱好抽烟<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>年龄:&#123;&#123;student.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        &lt;!-- 渲染列表 --&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>爱好<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h, index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;h&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>朋友们:<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(f, index) in student.friends&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">student</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">age</span>: <span class="hljs-string">&#x27;18&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&#x27;抽烟&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>, <span class="hljs-string">&#x27;烫头&#x27;</span>],</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">friends</span>: [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">26</span> &#125;]</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addFriend</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>.<span class="hljs-title function_">unshift</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jack&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">updateFirst</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>[<span class="hljs-number">0</span>].<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;张珊&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addHobby</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;学习&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">drive</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// this.student.hobby.splice(0, 1, &#x27;开车&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// Vue.set(this.student.hobby, 0, &#x27;开车&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;开车&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">remove</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 从第0个开始删一个，然后插入开车</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-keyword">return</span> h !== <span class="hljs-string">&#x27;抽烟&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ul><h4 id="表单收集"><a href="#表单收集" class="headerlink" title="表单收集"></a>表单收集</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>收集表单数据：<br>若：&lt;input type=<span class="hljs-string">&quot;text&quot;</span>/&gt;，则v-model收集的是value值，用户输入的就是value值。<br>若：&lt;input type=<span class="hljs-string">&quot;radio&quot;</span>/&gt;，则v-model收集的是value值，且要给标签配置value值。<br>若：&lt;input type=<span class="hljs-string">&quot;checkbox&quot;</span>/&gt;<br><span class="hljs-number">1.</span>没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）<br><span class="hljs-number">2.</span>配置input的value属性:<br>(<span class="hljs-number">1</span>)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）<br>(<span class="hljs-number">2</span>)v-model的初始值是数组，那么收集的的就是value组成的数组<br>备注：v-model的三个修饰符：<br>lazy：失去焦点再收集数据<br>number：输入字符串转为有效的数字<br>trim：输入首尾空格过滤<br>--&gt;<br><br>&lt;body&gt;<br>    &lt;div id=&quot;root&quot;&gt;<br>        &lt;form @submit.prevent=&quot;demo&quot;&gt;<br>            账号: &lt;input type=&quot;text&quot; name=&quot;&quot; id=&quot;&quot; v-model.trim=&quot;userInfo.account&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            密码: &lt;input type=&quot;password&quot; v-model=&quot;userInfo.password&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            &lt;!-- number：输入字符串转为有效的数字 --&gt;<br>            年龄: &lt;input type=&quot;number&quot; v-model.number=&quot;userInfo.age&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            性别:<br>            男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;userInfo.sex&quot; value=&quot;male&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            女&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;userInfo.sex&quot; value=&quot;female&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            爱好:<br>            学习&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;study&quot;&gt;<br>            打游戏&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;game&quot;&gt;<br>            吃饭&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;eat&quot;&gt;<br>            &lt;br&gt;&lt;br&gt;<br>            所属校区<br>            &lt;select v-model=&quot;userInfo.city&quot;&gt;<br>                &lt;option value=&quot;&quot;&gt;请选择校区&lt;/option&gt;<br>                &lt;option value=&quot;beijing&quot;&gt;北京&lt;/option&gt;<br>                &lt;option value=&quot;shanghai&quot;&gt;上海&lt;/option&gt;<br>                &lt;option value=&quot;深圳&quot;&gt;深圳&lt;/option&gt;<br>                &lt;option value=&quot;wuhan&quot;&gt;武汉&lt;/option&gt;<br>            &lt;/select&gt;<br>            &lt;br&gt;&lt;br&gt;<br>            其他信息：<br>            &lt;!-- 在默认情况下，v-model 在每次 input 事件触发后将输入框的值与数据进行同步 (除了上述输入法组合文字时)。你可以添加 lazy 修饰符，从而转为在 change 事件_之后_进行同步： --&gt;<br>            &lt;textarea v-model.lazy=&quot;userInfo.other&quot;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.agree&quot;&gt;阅读并接受&lt;a href=&quot;http://www.atguigu.com&quot;&gt;《用户协议》&lt;/a&gt;<br>            &lt;button&gt;提交&lt;/button&gt;<br>        &lt;/form&gt;<br>    &lt;/div&gt;<br>    &lt;script&gt;<br>        Vue.config.productionTip = false<br>        new Vue(&#123;<br>            el: &#x27;#root&#x27;,<br>            data: &#123;<br>                userInfo: &#123;<br>                    account: &#x27;&#x27;,<br>                    password: &#x27;&#x27;,<br>                    age: 18,<br>                    sex: &#x27;female&#x27;,<br>                    hobby: [],<br>                    city: &#x27;beijing&#x27;,<br>                    other: &#x27;&#x27;,<br>                    agree: &#x27;&#x27;<br>                &#125;<br>            &#125;,<br>            methods: &#123;<br>                demo() &#123;<br>                    console.log(JSON.stringify)<br>                &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><p>bootbdn dayjs(轻量级)</p><h4 id="过滤器filter"><a href="#过滤器filter" class="headerlink" title="过滤器filter"></a>过滤器filter</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>过滤器：<br>定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。<br>语法：<br><span class="hljs-number">1.</span>注册过滤器：<span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(name,callback) 或 <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>&#123;<span class="hljs-attr">filters</span>:&#123;&#125;&#125;<br><span class="hljs-number">2.</span>使用过滤器：&#123;&#123; xxx | 过滤器名&#125;&#125;  或  v-<span class="hljs-attr">bind</span>:属性 = <span class="hljs-string">&quot;xxx | 过滤器名&quot;</span><br>备注：<br><span class="hljs-number">1.</span>过滤器也可以接收额外参数、多个过滤器也可以串联<br><span class="hljs-number">2.</span>并没有改变原本的数据, 是产生新的对应的数据<br>--&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>显示格式化后的时间<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 计算属性实现 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;fmtTime&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- method实现 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;getFmtTime()&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 使用过滤器 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- |管道符 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;time | timeFormater&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 过滤器实现 传参 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;time | timeFormater(&#x27;YYYY_MM_DD&#x27;) | mySlice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">:x</span>=<span class="hljs-string">&quot;msg|mySlice&quot;</span>&gt;</span>尚硅谷1<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root2&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;msg | mySlice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-comment">// 全局过滤器</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-string">&#x27;mySlice&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-keyword">return</span> value.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>)</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">time</span>: <span class="hljs-number">1621561377603</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;你好，尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">fmtTime</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">getFmtTime</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-comment">// 局部过滤器</span></span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">filters</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">timeFormater</span>(<span class="hljs-params">value, str = <span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(value).<span class="hljs-title function_">format</span>(str)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">mySlice</span>(<span class="hljs-params">value</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> value.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;hello,atguigu!&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="各种指令"><a href="#各种指令" class="headerlink" title="各种指令"></a>各种指令</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 我们学过的指令：<br>v-bind: 单向绑定解析表达式, 可简写为 :xxx<br>v-model: 双向数据绑定<br>v-<span class="hljs-keyword">for</span>  : 遍历数组/对象/字符串<br>v-on   : 绑定事件监听, 可简写为@<br>v-<span class="hljs-keyword">if</span>  : 条件渲染（动态控制节点是否存存在）<br>v-<span class="hljs-keyword">else</span> : 条件渲染（动态控制节点是否存存在）<br>v-show : 条件渲染 (动态控制节点是否展示)<br>v-text指令：<br><span class="hljs-number">1.</span>作用：向其所在的节点中渲染文本内容。<br><span class="hljs-number">2.</span>与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。 --&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>你好, &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!--  v-text指令：</span></span><br><span class="hljs-comment"><span class="language-xml">       1.作用：向其所在的节点中渲染文本内容。</span></span><br><span class="hljs-comment"><span class="language-xml">       2.与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。 --&gt;</span></span><br><span class="language-xml">           <span class="hljs-comment">&lt;!-- 把所有的字符串都当成文本 并不会解析标签--&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>hah<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;&lt;h3&gt;你好啊！&lt;/h3&gt;&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li><p>v-html指令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- v-html指令：<br>    <span class="hljs-number">1.</span> 作用：向指定节点中渲染包含html结构的内容<br>    <span class="hljs-number">2.</span> 与插值语法的区别：v-html 会替换掉节点中所有的内容, &#123;&#123;<span class="hljs-variable constant_">XXX</span>&#125;&#125;不会； v-html 可以识别html结构<br>    <span class="hljs-number">3.</span>严重注意：v-html有安全性问题！！！！<br>(<span class="hljs-number">1</span>).在网站上动态渲染任意<span class="hljs-variable constant_">HTML</span>是非常危险的，容易导致<span class="hljs-variable constant_">XSS</span>攻击。<br>(<span class="hljs-number">2</span>).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！--&gt;<br><br>&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>你好,&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;&lt;h3&gt;你好啊！&lt;/h3&gt;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">str2</span>: <span class="hljs-string">&#x27;&lt;a href=javascript:location.href=&quot;http://www.baidu.com?&quot;+document.cookie&gt;兄弟我找到你想要的资源了，快来！&lt;/a&gt;&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>v-cloak指令</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-attr">[v-cloak]</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: none;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">v-cloak指令（没有值）：<br><span class="hljs-number">1.</span>本质是一个特殊属性，<span class="hljs-title class_">Vue</span>实例创建完毕并接管容器后，会删掉v-cloak属性。<br><span class="hljs-number">2.</span>使用css配合v-cloak可以解决网速慢时页面展示出&#123;&#123;xxx&#125;&#125;的问题。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;root&#x27;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;!-- <span class="hljs-variable constant_">JS</span>阻塞 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://localhost:8080/resource/5s/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">1</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>v-once指令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>v-once指令：<br><span class="hljs-number">1.</span>v-once所在节点在初次动态渲染后，就视为静态内容了。<br><span class="hljs-number">2.</span>以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-once</span>&gt;</span>初始化的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是: &#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">n</span>: <span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>v-pre指令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>v-pre指令：<br><span class="hljs-number">1.</span>跳过其所在节点的编译过程。<br><span class="hljs-number">2.</span>可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-pre</span>&gt;</span>Vue其实很简单<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> &gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/body&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span> <span class="hljs-comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">n</span>:<span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h4><p><a href="https://dev.to/code_jedi/the-full-stack-developer-vocabularythe-full-list-4n5d">https://dev.to/code_jedi/the-full-stack-developer-vocabularythe-full-list-4n5d</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/02/20/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%A4%8D%E4%B9%A02%EF%BC%89/"/>
    <url>/2023/02/20/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%A4%8D%E4%B9%A02%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>####2023-2-20</p><ul><li> <code>Object.defineProperty</code>方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象. 应当直接在 Object 构造器对象上调用此方法，而不是在任意一个 Object 类型的实例上调用。</li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">let</span> number = <span class="hljs-number">18</span><br>        <span class="hljs-keyword">let</span> person = &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>,<br>            <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span><br>        &#125;<br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>            <span class="hljs-comment">// value: 42,</span><br>            <span class="hljs-comment">// writable: false, //控制属性是否可以被修改</span><br>            <span class="hljs-comment">// enumerable: true, //控制属性是否可枚举</span><br>            <span class="hljs-comment">// configurable: true, //控制属性是否可被删除</span><br>            <span class="hljs-comment">// 有人读取age属性时 getter就会被调用，且返回值就是age的值</span><br>            <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;有人读取了age属性&#x27;</span>);<br>                <span class="hljs-keyword">return</span> number<br>            &#125;,<br>            <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;有人修改了age属性，且值是&#x27;</span>, value);<br>                number = value<br>            &#125;<br>        &#125;)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(person)); <span class="hljs-comment">//[name, sex]</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(person);<br><br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><p>数据代理：通过一个对象代理对另一个对象中的属性进行读、写操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">let</span> obj = &#123; <span class="hljs-attr">x</span>: <span class="hljs-number">100</span> &#125;<br>        <span class="hljs-keyword">let</span> obj2 = &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">200</span> &#125;<br><br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(obj2, <span class="hljs-string">&#x27;x&#x27;</span>, &#123;<br>            <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> obj.<span class="hljs-property">x</span><br>            &#125;,<br>            <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>) &#123;<br>                obj.<span class="hljs-property">x</span> = value<br>            &#125;<br><br>        &#125;)<br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj2);<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>数据代理。</p><ol><li><p>Vue中的数据代理：  通过vm对象来代理data对象中属性的操作（读/写） </p></li><li><p> Vue中数据代理的好处：  更加方便的操作data中的数据 </p></li><li><p> 基本原理：  通过Object.defineProperty()把data对象中所有属性添加到vm上。  为每一个添加到vm上的属性，都指定一个getter/setter。  在getter/setter内部去操作（读/写）data中对应的属性。 </p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;洪福科技园&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// vm._data === data</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>绑定事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>      &lt;!-- <span class="hljs-number">1.</span> 使用v-<span class="hljs-attr">on</span>:<span class="hljs-variable constant_">XXX</span> 绑定事件 <span class="hljs-variable constant_">XXX</span>是事件名 --&gt;<br>      &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span> --&gt;<br>      &lt;!-- <span class="hljs-number">2.</span> 使用@<span class="hljs-variable constant_">XXX</span> 绑定事件 --&gt;<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息1-不传参<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo2($event, 66)&quot;</span>&gt;</span>点我提示信息2-传参<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>      &lt;!-- @clik=<span class="hljs-string">&quot;demo&quot;</span> 和 @click=<span class="hljs-string">&quot;demo($event)&quot;</span> 效果一致，但是后者可以传参数--&gt;<br>  &lt;/div&gt;<br>  <br>  &lt;script&gt;<br>      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>          <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>          <span class="hljs-attr">data</span>: &#123;<br>              <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span><br>          &#125;,<br>          <span class="hljs-comment">// 事件的回调需要配置在methods对象中，最终在vm上</span><br>          <span class="hljs-comment">// methods中配置的函数，不要用箭头函数，否则this就不是vm了</span><br>          <span class="hljs-comment">// methods中配置的函数，都是被Vue所管理的函数，this的指向是vm或组件实例对象</span><br>          <span class="hljs-attr">methods</span>: &#123;<br>              <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">event</span>) &#123;<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event.<span class="hljs-property">target</span>.<span class="hljs-property">innerText</span>)<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>); <span class="hljs-comment">//此处的this是vm</span><br>  <br>              &#125;,<br>              <span class="hljs-title function_">showInfo2</span>(<span class="hljs-params">event, number</span>) &#123;<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event, number);<br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)<span class="hljs-comment">//此处的this是vm</span><br>              &#125;<br>          &#125;<br>      &#125;)<br></code></pre></td></tr></table></figure></li><li><p>Vue中的事件修饰符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Vue中的事件修饰符：</span><br><span class="hljs-comment">//1.prevent：阻止默认事件（常用）；</span><br><span class="hljs-comment">//2.stop：阻止事件冒泡（常用）；</span><br><span class="hljs-comment">//3.once：事件只触发一次（常用）；</span><br><span class="hljs-comment">//4.capture：使用事件的捕获模式；</span><br><span class="hljs-comment">//5.self：只有event.target是当前操作的元素时才触发事件；</span><br><span class="hljs-comment">//6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span><br><br>&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 阻止a链接页面的默认跳转 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 阻止事件冒泡 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo1&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-comment">&lt;!-- 修饰符可以连写 --&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span> @<span class="hljs-attr">click.prevent.stop</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 事件只触发一次 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 使用事件的捕获模式 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="language-xml">            div1</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsg(2)&quot;</span>&gt;</span>div2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo1&quot;</span> @<span class="hljs-attr">click.self</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-comment">&lt;!-- 这里本来应该执行两次showInfo的 因为冒泡 但是点击的是btn 所以并不会执行 --&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list&quot;</span> @<span class="hljs-attr">wheel.passive</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;你好 提示信息&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">showMsg</span>(<span class="hljs-params">msg</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(msg);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">demo</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10000</span>; i++) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;#&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;累坏了&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure></li><li><p>键盘事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1.Vue中常用的按键别名：</span><br>回车 =&gt; enter<br>删除 =&gt; <span class="hljs-keyword">delete</span> (捕获“删除”和“退格”键)<br>退出 =&gt; esc<br>空格 =&gt; space<br>换行 =&gt; tab (特殊，必须配合keydown去使用)<br>上 =&gt; up<br>下 =&gt; down<br>左 =&gt; left<br>右 =&gt; right<br><br><span class="hljs-number">2.</span><span class="hljs-title class_">Vue</span>未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-<span class="hljs-keyword">case</span>（短横线命名）<br><br><span class="hljs-number">3.</span>系统修饰键（用法特殊）：ctrl、alt、shift、meta<br>(<span class="hljs-number">1</span>).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。<br>(<span class="hljs-number">2</span>).配合keydown使用：正常触发事件。<br><br><span class="hljs-number">4.</span>也可以使用keyCode去指定具体的按键（不推荐）<br><br><span class="hljs-number">5.</span><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.自定义键名 = 键码，可以去定制按键别名<br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;按下回车提示输入&quot;</span> @<span class="hljs-attr">keydown.huiche</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.<span class="hljs-property">huiche</span> = <span class="hljs-number">13</span><span class="hljs-comment">// 定义一个别名按键</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// console.log(e.key, e.keyCode) // Enter 13</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">value</span>); <span class="hljs-comment">//获取输入的文本</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>计算属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1. 姓名案例-- 插值语法实现</span><br>    &lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        姓：&lt;input type=<span class="hljs-string">&quot;text&quot;</span> v-model=<span class="hljs-string">&quot;firstName&quot;</span>&gt;&lt;br&gt;&lt;br&gt;<br>        名：&lt;input type=<span class="hljs-string">&quot;text&quot;</span> v-model=<span class="hljs-string">&quot;lastName&quot;</span>&gt;&lt;br&gt;&lt;br&gt;<br>        全名: <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;firstName&#125;&#125;--&#123;&#123;lastName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.<span class="hljs-property">huiche</span> = <span class="hljs-number">13</span><span class="hljs-comment">// 定义一个别名按键</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">firstName</span>: <span class="hljs-string">&#x27;张&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">lastName</span>: <span class="hljs-string">&#x27;三&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="hljs-comment">// 2. methods实现</span><br>&lt;div id=&quot;root&quot;&gt;<br>        姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        名：&lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        全名: &lt;span&gt;&#123;&#123;fullName()&#125;&#125;&lt;/span&gt;<br>    &lt;/div&gt;<br>    &lt;script&gt;<br>        Vue.config.productionTip = false<br>        Vue.config.keyCodes.huiche = 13// 定义一个别名按键<br>        new Vue(&#123;<br>            el: &#x27;#root&#x27;,<br>            data: &#123;<br>                firstName: &#x27;张&#x27;,<br>                lastName: &#x27;三&#x27;<br>            &#125;,<br>            methods: &#123;<br>                fullName() &#123;<br>                    return this.firstName + &#x27;-&#x27; + this.lastName<br>                &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br><br>//3. 计算属性实现<br>// 1.定义：要用的属性不存在，要通过已有属性计算得来<br>    //2. 原理：低层借助Object.defineproperty方法提供的getter和setter<br>   // 3. get函数什么时候执行？<br>        //1. 初次读取时会执行一次<br>       // 2. 当依赖的数据发生改变时会被再次调用<br>   // 4. 优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试更方便<br>   // 5. 备注：1. 计算属性最终会出现在vm上， 直接读取使用即可<br>           // 2. 如果计算属性要被修改，那么必须要写set函数去响应修改，且set中要引起计算时依赖的数据发生改变<br> &lt;div id=&quot;root&quot;&gt;<br>        姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        名：&lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        测试: &lt;input type=&quot;text&quot; v-model=&quot;x&quot;&gt;&lt;br&gt;&lt;br&gt;<br>        全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;&lt;br&gt;&lt;br&gt;<br>        &lt;!-- get只调用了一次 fullName调用一次后就缓存了  但methods会吊好多次 --&gt;<br>        &lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;<br>    &lt;/div&gt;<br>    &lt;script&gt;<br>        Vue.config.productionTip = false<br>        Vue.config.keyCodes.huiche = 13// 定义一个别名按键<br>        new Vue(&#123;<br>            el: &#x27;#root&#x27;,<br>            data: &#123;<br>                firstName: &#x27;张&#x27;,<br>                lastName: &#x27;三&#x27;,<br>                x: &#x27;你好&#x27;<br>            &#125;,<br>            methods: &#123;<br>                demo() &#123;<br><br>                &#125;<br>            &#125;,<br>            computed: &#123;<br>                fullName: &#123;<br>                    // get函数的作用：当有人读取fullName时，get就会被调用，且返回值就作为fullName的值<br>                    // get什么时候调用 ：初次读取fullName时， 所依赖的数据发生变化时<br>                    get() &#123;<br>                        // console.log(&#x27;get被调用了&#x27;);<br>                        // console.log(this);<br>                        return this.firstName + &#x27;-&#x27; + this.lastName<br>                    &#125;,<br>                    // set什么时候被调用？ 当fullName被修改时<br>                    set(value) &#123;<br>                        console.log(&#x27;set被调用了&#x27;);<br>                        console.log(&#x27;set&#x27;, value);<br>                        const arr = value.split(&#x27;-&#x27;)<br>                        this.firstName = arr[0]<br>                        this.lastName = arr[1]<br>                    &#125;<br>                &#125;<br>                <br>                  // 简写<br>                //fullName() &#123;<br>                    //console.log(&#x27;get被调用了&#x27;);<br>                   // return this.firstName + &#x27;-&#x27; + this.lastName<br>               // &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>监视属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很好&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        &lt;!-- 绑定事件的时候： @xxx=<span class="hljs-string">&quot;yyy&quot;</span> yyy可以写一些简单的语句 --&gt;<br>        &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;isHot = !isHot&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span> --&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 为什么这里不切换？</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">/* watch: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                isHot: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    immediate: true,  //初始化时让handler调用一下</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    // handler什么时候调用？ 当isHot发生改变时</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    handler(newVal, oldVal) &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            &#125; */</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">//写法2 vm.$watch</span></span></span><br><span class="language-javascript"><span class="language-xml">        </span></span><br><span class="language-javascript"><span class="language-xml">        vm.$watch(<span class="hljs-string">&#x27;isHot&#x27;</span>, &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">immediate</span>:<span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">hanlder</span>(<span class="hljs-params">newVal, oldVal</span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal)</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure></li><li><p>深度监视</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 深度监视：<br>    <span class="hljs-number">1.</span> <span class="hljs-title class_">Vue</span>中的watch默认不监测对象内部值的改变（一层）<br>    <span class="hljs-number">2.</span> 配置<span class="hljs-attr">deep</span>:<span class="hljs-literal">true</span> 可以监测对象内部值改变（多层）<br><br>    备注：<span class="hljs-title class_">Vue</span>自身可以监测对象内部值的改变，但<span class="hljs-title class_">Vue</span>提供的watch默认不可以<br>            使用watch时根据--&gt;<br> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>a的值:&#123;&#123;numbers.a&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>b的值:&#123;&#123;numbers.b&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">numbers</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">c</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">d</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                            <span class="hljs-attr">e</span>: <span class="hljs-number">100</span></span></span><br><span class="language-javascript"><span class="language-xml">                        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">watch</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">handler</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal);</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// 监视多及结构中某个属性的变化</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#x27;numbers.a&#x27;: &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     hanlder() &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//         console.log(&#x27;a被改变了&#x27;);</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//监视多级结构中所有属性的变化</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">numbers</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title function_">handler</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;numbers改变了&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 深度监测 简写</span><br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">watch</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// 正常写法</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// isHot: &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     immediate: true,</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     deep: true,</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     handler(newVal, oldVal) &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//         console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// 简写</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// isHot(newVal, oldVal) &#123;</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//     console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// &#125;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 正常写法</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">/* vm.$watch(&#x27;isHot&#x27;, &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            immediate: true,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            deep: true,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            handler(newVal, oldVal) &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                console.log(&#x27;isHot被修改了&#x27;, newVal, oldVal);</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">        &#125;) */</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 简写</span></span></span><br><span class="language-javascript"><span class="language-xml">        vm.$watch(<span class="hljs-string">&#x27;isHot&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">newVal, oldVal</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>姓名案例-watch实现</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//computed和watch的区别：</span><br><span class="hljs-comment">// computed能完成的功能，watch都可以完成</span><br><span class="hljs-comment">// watch 能完成的功能，computed不一定能完成</span><br><span class="hljs-comment">//原则： 所有被Vue管理的函数，最好写成普通函数，这样this指向的都是vm实例或者组件实例， 所有不被vue管理的函数（定时器的回调函数，ajax的回调函数，promise的回调函数等）最好写成箭头函数，这样this的指向才是vm或组件实例对象</span><br><br><br><br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    姓: &lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>    名: &lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt;<br>    全名: &lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;<br>&lt;/div&gt;<br>&lt;script&gt;<br>    Vue.config.productionTip = false<br>    const vm = new Vue(&#123;<br>        el: &#x27;#root&#x27;,<br>        data: &#123;<br>            firstName: &#x27;张&#x27;,<br>            lastName: &#x27;三&#x27;,<br>            fullName: &#x27;张-三&#x27;<br>        &#125;,<br>        //watch能开启异步任务但是computed不能开<br>        watch: &#123;<br>            firstName(val) &#123;<br>                setTimeout(() =&gt; &#123;<br>                    console.log(this);<br>                     //箭头函数没有自己的this 所以往外找 找到的是vm<br>                    this.fullName = val + &#x27;-&#x27; + this.lastName<br>                &#125;, 1000)<br>            &#125;,<br>            lastName(val) &#123;<br>                this.fullName = this.firstName + &#x27;-&#x27; + this.val<br>            &#125;<br>        &#125;<br><br>    &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p> <code>watch</code>和<code>computed</code>的区别：<a href="https://blog.51cto.com/u_15302032/3067114">https://blog.51cto.com/u_15302032/3067114</a> </p></li></ul><h4 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.basic</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">           <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">           <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.normal</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">background-color</span>: skyblue;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.atguigu1</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">background-color</span>: yellowgreen;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.atguigu2</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">           <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">10px</span> red;</span><br><span class="language-css">       &#125;</span><br><span class="language-css"></span><br><span class="language-css">       <span class="hljs-selector-class">.atguigu3</span> &#123;</span><br><span class="language-css">           <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">       &#125;</span><br><span class="language-css">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"> <span class="hljs-comment">&lt;!-- 绑定样式：</span></span><br><span class="hljs-comment"><span class="language-xml">    1. class样式： class=&quot;XXX&quot; XXX可以是字符串，对象，数组</span></span><br><span class="hljs-comment"><span class="language-xml">                     字符串写法适用于：类名不确定，要动态获取</span></span><br><span class="hljs-comment"><span class="language-xml">                        数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用</span></span><br><span class="hljs-comment"><span class="language-xml">        2. style样式：</span></span><br><span class="hljs-comment"><span class="language-xml">            ：style=&quot;</span></span><span class="hljs-template-variable">&#123;fontSize:xxx&#125;</span><span class="language-xml"><span class="hljs-comment">&quot; 其中XXX是动态值</span></span><br><span class="hljs-comment"><span class="language-xml">            :style=&quot;[a,b]&quot;其中a, b是样式对象</span></span><br><span class="hljs-comment"><span class="language-xml">--&gt;</span></span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    &lt;!-- 绑定<span class="hljs-keyword">class</span>样式--字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;mood&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;br&gt;&lt;br&gt;<br>    &lt;!-- 绑定<span class="hljs-keyword">class</span>样式--数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;br&gt;&lt;br&gt;<br>    &lt;!-- 绑定<span class="hljs-keyword">class</span>样式--对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用  --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;br&gt;&lt;br&gt;<br>    &lt;!-- 绑定style样式--对象写法 --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    &lt;!--  绑定style样式--数组写法  --&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/div&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">mood</span>: <span class="hljs-string">&#x27;normal&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">classArr</span>: [<span class="hljs-string">&#x27;atguigu1&#x27;</span>, <span class="hljs-string">&#x27;atguigu2&#x27;</span>, <span class="hljs-string">&#x27;atguigu3&#x27;</span>],</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">classObj</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">atguigu1</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">atguigu2</span>: <span class="hljs-literal">false</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">styleObj</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">styleObj2</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;orange&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">styleArr</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;blue&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;gray&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            ]</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">changeMood</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&#x27;happy&#x27;</span>, <span class="hljs-string">&#x27;sad&#x27;</span>, <span class="hljs-string">&#x27;normal&#x27;</span>]</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-keyword">const</span> index = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">3</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">mood</span> = arr[index]</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">-- </span><br>条件渲染：<br><span class="hljs-number">1.</span>v<span class="hljs-operator">-</span>if<br>写法：<br>(<span class="hljs-number">1</span>).v<span class="hljs-operator">-</span>if<span class="hljs-operator">=</span>&quot;表达式&quot; <br>(<span class="hljs-number">2</span>).v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span><span class="hljs-operator">-</span>if<span class="hljs-operator">=</span>&quot;表达式&quot;<br>(<span class="hljs-number">3</span>).v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span><span class="hljs-operator">=</span>&quot;表达式&quot;<br>适用于：切换频率较低的场景。<br>特点：不展示的DOM元素直接被移除。<br>注意：v<span class="hljs-operator">-</span>if可以和:v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span><span class="hljs-operator">-</span>if、v<span class="hljs-operator">-</span><span class="hljs-keyword">else</span>一起使用，但要求结构不能被“打断”。<br><br><span class="hljs-number">2.</span>v<span class="hljs-operator">-</span><span class="hljs-keyword">show</span><br>写法：v<span class="hljs-operator">-</span><span class="hljs-keyword">show</span><span class="hljs-operator">=</span>&quot;表达式&quot;<br>适用于：切换频率较高的场景。<br>特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉<br><br><span class="hljs-number">3.</span>备注：使用v<span class="hljs-operator">-</span>if的时，元素可能无法获取到，而使用v<span class="hljs-operator">-</span><span class="hljs-keyword">show</span>一定可以获取到。<br> <span class="hljs-comment">--&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>       &lt;!-- 使用v-show做条件渲染 --&gt;<br>       &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;1===1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span> --&gt;<br><br>       &lt;!-- v-<span class="hljs-keyword">if</span>做条件渲染 --&gt;<br>       &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;1===1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span> --&gt;<br><br>       &lt;!-- v-<span class="hljs-keyword">else</span> 和 v-<span class="hljs-keyword">else</span>-<span class="hljs-keyword">if</span> --&gt;<br>       &lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;n===1&quot;</span>&gt;</span>Angular<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;n===2&quot;</span>&gt;</span>React<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;n===3&quot;</span>&gt;</span>Vue<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span> --&gt;<br><br>       &lt;!-- v-<span class="hljs-keyword">if</span>与template的配合使用 --&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;n===1&quot;</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>尚硅谷<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>   &lt;/div&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">n</span>: <span class="hljs-number">0</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>列表渲染</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- v-<span class="hljs-keyword">for</span>指令:<br><span class="hljs-number">1.</span>用于展示列表数据<br><span class="hljs-number">2.</span>语法：v-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;(item, index) in xxx&quot;</span> :key=<span class="hljs-string">&quot;yyy&quot;</span><br><span class="hljs-number">3.</span>可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少） --&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p, index) of persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历对象 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>汽车信息（遍历对象）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value, k) of car&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;k&quot;</span>&gt;</span>&#123;&#123;k&#125;&#125;-&#123;&#123;value&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历字符串 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>测试遍历字符串（用的很少）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(char, index) of str&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;char&#125;&#125;-&#123;&#123;index&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 遍历指定次数 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>测试遍历指定次数（用得少）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(number, index) of 5&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;-&#123;&#123;number&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">persons</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">               ],</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">car</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;奥迪A8&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-attr">price</span>: <span class="hljs-string">&#x27;70万&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;黑色&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">               &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;hell0&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// key的原理</span><br><br><br>&lt;!-- <br>面试题：react、vue中的key有什么作用？（key的内部原理）<br><br><span class="hljs-number">1.</span> 虚拟<span class="hljs-variable constant_">DOM</span>中key的作用：<br>key是虚拟<span class="hljs-variable constant_">DOM</span>对象的标识，当数据发生变化时，<span class="hljs-title class_">Vue</span>会根据【新数据】生成【新的虚拟<span class="hljs-variable constant_">DOM</span>】, <br>随后<span class="hljs-title class_">Vue</span>进行【新虚拟<span class="hljs-variable constant_">DOM</span>】与【旧虚拟<span class="hljs-variable constant_">DOM</span>】的差异比较，比较规则如下：<br><br><span class="hljs-number">2.</span>对比规则：<br>(<span class="hljs-number">1</span>).旧虚拟<span class="hljs-variable constant_">DOM</span>中找到了与新虚拟<span class="hljs-variable constant_">DOM</span>相同的key：<br>①.若虚拟<span class="hljs-variable constant_">DOM</span>中内容没变, 直接使用之前的真实<span class="hljs-variable constant_">DOM</span>！<br>②.若虚拟<span class="hljs-variable constant_">DOM</span>中内容变了, 则生成新的真实<span class="hljs-variable constant_">DOM</span>，随后替换掉页面中之前的真实<span class="hljs-variable constant_">DOM</span>。<br><br>(<span class="hljs-number">2</span>).旧虚拟<span class="hljs-variable constant_">DOM</span>中未找到与新虚拟<span class="hljs-variable constant_">DOM</span>相同的key<br>创建新的真实<span class="hljs-variable constant_">DOM</span>，随后渲染到到页面。<br><br><span class="hljs-number">3.</span> 用index作为key可能会引发的问题：<br><span class="hljs-number">1.</span> 若对数据进行：逆序添加、逆序删除等破坏顺序操作:<br>会产生没有必要的真实<span class="hljs-variable constant_">DOM</span>更新 ==&gt; 界面效果没问题, 但效率低。<br><br><span class="hljs-number">2.</span> 如果结构中还包含输入类的<span class="hljs-variable constant_">DOM</span>：<br>会产生错误<span class="hljs-variable constant_">DOM</span>更新 ==&gt; 界面有问题。<br><br><span class="hljs-number">4.</span> 开发中如何选择key?:<br><span class="hljs-number">1.</span>最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。<br><span class="hljs-number">2.</span>如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，<br>使用index作为key是没有问题的。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表（遍历数组）<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p,index) of persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="language-xml">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">persons</span>:[</span></span><br><span class="language-javascript"><span class="language-xml">&#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;001&#x27;</span>,<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;张三&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">18</span>&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;002&#x27;</span>,<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;李四&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">19</span>&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;003&#x27;</span>,<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;王五&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">20</span>&#125;</span></span><br><span class="language-javascript"><span class="language-xml">]</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">add</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> p = &#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;004&#x27;</span>,<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;老刘&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">40</span>&#125;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">unshift</span>(p)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>列表过滤</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 列表过滤 --&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入名字&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p, index) of filPersons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;--&#123;&#123;p.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-comment">/* new Vue(&#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           el: &#x27;#root&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           data: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               keyWord: &#x27;&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               persons: [</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;001&#x27;, name: &#x27;马冬梅&#x27;, age: 19, sex: &#x27;女&#x27; &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;002&#x27;, name: &#x27;周冬雨&#x27;, age: 20, sex: &#x27;女&#x27; &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;003&#x27;, name: &#x27;周杰伦&#x27;, age: 21, sex: &#x27;男&#x27; &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#123; id: &#x27;004&#x27;, name: &#x27;温兆伦&#x27;, age: 22, sex: &#x27;男&#x27; &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               ],</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               // 新数据</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               filPersons: []</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           &#125;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           //  //  indexOf 字符串中是否包含 -1 是不包含  其他都是包含</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           watch: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               keyWord: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   // 立即执行 先实现一遍</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   immediate: true,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   handler(val) &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                       this.filPersons = this.persons.filter((p) =&gt; &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                           return p.name.indexOf(val) !== -1</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                       &#125;)</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                   &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">               &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">           &#125;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">       &#125;) */</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-comment">// 用computed实现</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-comment">// 收集用户的输入：要把输入的数字都保存下来，所以需要自己建一个空字符串，v-model实现双向绑定</span></span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">persons</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;马冬梅&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周冬雨&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周杰伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                   &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;温兆伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">               ]</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">filPersons</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                       <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">keyWord</span>) !== -<span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">                   &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>列表排序</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入名字&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 2&quot;</span>&gt;</span>年龄升序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 1&quot;</span>&gt;</span>年龄降序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 0&quot;</span>&gt;</span>原顺序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p, index) of filPersons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="language-xml">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">sortType</span>: <span class="hljs-number">0</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// persons 原数据没动过 所以0的时候 会回到原顺序</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">persons</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;马冬梅&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周冬雨&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">31</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周杰伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;温兆伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                ]</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">// 计算属性  原本没有的 通过计算才出来的</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">filPersons</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">const</span> arr = <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">keyWord</span>) !== -<span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">sortType</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        arr.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">p1, p2</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">sortType</span> === <span class="hljs-number">1</span> ? p2.<span class="hljs-property">age</span> - p1.<span class="hljs-property">age</span> : p1.<span class="hljs-property">age</span> - p2.<span class="hljs-property">age</span></span></span><br><span class="language-javascript"><span class="language-xml">                        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-keyword">return</span> arr</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javasc">//更新时的一个问题<br>&lt;div id=&quot;root&quot;&gt;<br>&lt;h2&gt;人员列表&lt;/h2&gt;<br>&lt;button @click=&quot;updateMei&quot;&gt;更新马冬梅的信息&lt;/button&gt;<br>&lt;ul&gt;<br>&lt;li v-for=&quot;(p,index) of persons&quot; :key=&quot;p.id&quot;&gt;<br>&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;<br>&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;/div&gt;<br><br>&lt;script type=&quot;text/javascript&quot;&gt;<br>Vue.config.productionTip = false<br><br>const vm = new Vue(&#123;<br>el:&#x27;#root&#x27;,<br>data:&#123;<br>persons:[<br>&#123;id:&#x27;001&#x27;,name:&#x27;马冬梅&#x27;,age:30,sex:&#x27;女&#x27;&#125;,<br>&#123;id:&#x27;002&#x27;,name:&#x27;周冬雨&#x27;,age:31,sex:&#x27;女&#x27;&#125;,<br>&#123;id:&#x27;003&#x27;,name:&#x27;周杰伦&#x27;,age:18,sex:&#x27;男&#x27;&#125;,<br>&#123;id:&#x27;004&#x27;,name:&#x27;温兆伦&#x27;,age:19,sex:&#x27;男&#x27;&#125;<br>]<br>&#125;,<br>methods: &#123;<br>updateMei()&#123;<br>// this.persons[0].name = &#x27;马老师&#x27; //奏效<br>// this.persons[0].age = 50 //奏效<br>// this.persons[0].sex = &#x27;男&#x27; //奏效<br>// this.persons[0] = &#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125; //不奏效<br>this.persons.splice(0,1,&#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125;)<br>&#125;<br>&#125;<br>&#125;) <br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><strong>总结：</strong></p><ol><li>computed是Vue的计算属性，是根据依赖关系进行缓存的计算，只有在他的相关依赖关系发生改变时才会进行更新，通过getter和setter实现对属性数据的显示和监视。计算属性存在缓存，多次读取只执行一次getter. 计算属性本质上还是属性，写法如函数，命名如属性。在处理一些复杂的逻辑时计算属性很有用。</li><li>computed计算属性的值我们需要用到它，依赖变化运算过程自动执行；watch监听的值我们不需要用到它，我们只是想在它监听的值改变了的时候搞点事情–注册用户的时候是否可用</li></ol><ul><li><p>Vue监测对象属性的改变</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;rot&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称:&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">            学校地址:&#123;&#123;address&#125;&#125;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// vm身上有的name和data其实都是来自_data上</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">//_data里的数据都是来自于你所传入的data配置项  vm._data = data (这已经是第二步 第一步是：加工一下所传入的data， 加工后就能做响应式（有了getter和setter）， 能够实现对对象里边属性的监视)</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 比如 修改了name会引起name对应的setter的调用， setter一调用就会重新解析模板， 生成新的虚拟DOM， 新旧虚拟DOM对比，更新页面</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#rot&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">age</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">friends</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                    &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span></span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                ]</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>    &lt;!-- 加工能做响应式  数据变了页面变了  <span class="hljs-number">1.</span> 加工data  <span class="hljs-number">2.</span> vm.<span class="hljs-property">_data</span> = data<br>当修改了name时，就会引起 set name的调用 --&gt;<br></code></pre></td></tr></table></figure></li><li><p>模拟一个数据监测</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">let</span> data = &#123;<br>           <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>           <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,<br>           <span class="hljs-comment">/*  a:&#123;</span><br><span class="hljs-comment">                b:1</span><br><span class="hljs-comment">            &#125; */</span><br>           <span class="hljs-comment">// 如果再加上一个对象属性 下面的代码就不可用了  但是Vue可以监测多层</span><br>       &#125;<br>  <br>       <span class="hljs-comment">// 创建一个监视的实例对象，用于监视data中属性的变化</span><br>       <span class="hljs-keyword">const</span> obs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Observer</span>(data)<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obs);<br>  <br>       <span class="hljs-comment">// 准备一个vm实例对象</span><br>       <span class="hljs-keyword">let</span> vm = &#123;&#125;<br>       <span class="hljs-comment">// vm._data 是在vm里创建了一个_data属性， 属性值是obs对象，同时给对象data 改变地址的赋值</span><br>       vm.<span class="hljs-property">_data</span> = data = obs<br>       <span class="hljs-comment">// 可以理解为原数据里的data被劫持，然后包装成了另一个_data</span><br>  <br>       <span class="hljs-keyword">function</span> <span class="hljs-title function_">Observer</span>(<span class="hljs-params">obj</span>) &#123;<br>           <span class="hljs-comment">// 汇总对象中所有的属性形成一个数组</span><br>           <span class="hljs-keyword">const</span> keys = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj)<br>  <br>           <span class="hljs-comment">// 遍历</span><br>           keys.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">k</span>) =&gt;</span> &#123;<br>               <span class="hljs-comment">// Object.defineProperty(要定义属性的对象，要定义或修改的属性的名称，要定义或修改的属性描述符。) 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。</span><br>               <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(<span class="hljs-variable language_">this</span>, k, &#123;<br>                   <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>                       <span class="hljs-keyword">return</span> obj[k]<br>                   &#125;,<br>                   <span class="hljs-title function_">set</span>(<span class="hljs-params">val</span>) &#123;<br>                       <span class="hljs-comment">// Vue到了这一步没有做输出 而是去重新解析模板了</span><br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;k&#125;</span>被改了，我要去解析模板，生成虚拟DOM.....我要开始忙了`</span>);<br>                       obj[k] = val<br>                   &#125;<br>               &#125;)<br>           &#125;)<br>       &#125;<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p><code>Vue.set</code> 和 <code>this.$set()</code>的使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称：&#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址：&#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长是：&#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>性别: &#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;，对外&#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>朋友们<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(f,index) in student.friends&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;f.name&#125;&#125;-&#123;&#123;f.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>   &lt;/div&gt;<br>   &lt;script&gt;<br>       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">school</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                   <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,<br>               &#125;,<br>               <span class="hljs-attr">student</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>,<br>                   <span class="hljs-attr">age</span>: &#123;<br>                       <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,<br>                       <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,<br>                   &#125;,<br>                   <span class="hljs-attr">friends</span>: [<br>                       &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;,<br>                       &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tony&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">36</span> &#125;<br>                   ]<br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)<br>                   <span class="hljs-comment">// this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br>                   <span class="hljs-comment">// 当你发现你给对象加了一个属性，在控制台能打印出来，但是却没有更新到视图上时，也许这个时候就需要用到this.$set（）这个方法了，简单来说this.$set的功能就是解决这个问题的啦。</span><br>                   <span class="hljs-comment">//https://www.jb51.net/article/146580.htm 有二者的对比</span><br>               &#125;<br>           &#125;<br>       &#125;)<br>  <br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm);<br></code></pre></td></tr></table></figure></li><li><p>Vue监测数据改变的原理——数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称：&#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址：&#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长是：&#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别: &#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;，对外&#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>朋友们<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h,index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;h&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// Vue.set()不能直接用在data或者vm实例上，所以要先给一个scholl属性</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">school</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">student</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">age</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">/* hobby: &#123;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        h1: &#x27;抽烟&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        h2: &#x27;喝酒&#x27;,</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                        h3: &#x27;烫头&#x27;</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">                    &#125;, */</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&#x27;抽烟&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>, <span class="hljs-string">&#x27;烫头&#x27;</span>],</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 必须是数组 push splice unshift shift pop这些改变数组的方法能被vue监测到,可以用vue规定的7种改变数组的方法</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// Vue.set(vm.student.hobby, 1, &#x27;打台球&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// vm.$set(vm.student.hobby, 1, &#x27;打台球&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">friends</span>: [</span></span><br><span class="language-javascript"><span class="language-xml">                        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tony&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">36</span> &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                    ]</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 当你发现你给对象加了一个属性，在控制台能打印出来，但是却没有更新到视图上时，也许这个时候就需要用到this.$set（）这个方法了，简单来说this.$set的功能就是解决这个问题的啦。</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">//https://www.jb51.net/article/146580.htm 有二者的对比</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>总结数据监测：</p><ol><li>Vue会监视data中所有层次的属性</li><li>如何监测<strong>对象</strong>中的数据：<ul><li>通过setter实现监视，且要在new Vue时就要传入要检要监测的数据。<ul><li>对象中后追加的属性，Vue默认不做响应处理</li><li>如需给后添加的属性做响应式，请使用API：<code>Vue.set(target, propertyName/index, value)</code>或<code>Vue.$set(target, propertyName/index, value)</code></li></ul></li></ul></li><li>如何监测<strong>数组</strong>中的数据：<ul><li>通过包裹数组更新元素的方法实现，本质就是做了两件事：<ul><li>调用原生的对应的方法进行数组更新</li><li>重新解析模板，进行页面更新</li></ul></li></ul></li><li>在Vue修改数组中的某个元素时一定要用如下方法：1. 使用这些API：push, pop, shift, unshift, splice, sort, reverse; 2. Vue.set()或vm.$set()</li><li> 特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据对象 添加属性！！！ </li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;student.age++&quot;</span>&gt;</span>年龄+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加性别属性,默认值：男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;student.sex=&#x27;未知&#x27;&quot;</span>&gt;</span>修改性别<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateFirst&quot;</span>&gt;</span>修改第一个朋友的名字<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;drive&quot;</span>&gt;</span>修改第一个爱好为：开车<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;remove&quot;</span>&gt;</span>去掉第一个爱好抽烟<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>年龄:&#123;&#123;student.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        &lt;!-- 渲染列表 --&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>爱好<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h, index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;h&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>朋友们:<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(f, index) in student.friends&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>&#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><br>    &lt;/div&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">student</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">age</span>: <span class="hljs-string">&#x27;18&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&#x27;抽烟&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>, <span class="hljs-string">&#x27;烫头&#x27;</span>],</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">friends</span>: [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">26</span> &#125;]</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addFriend</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>.<span class="hljs-title function_">unshift</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jack&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">updateFirst</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>[<span class="hljs-number">0</span>].<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;张珊&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">addHobby</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;学习&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">drive</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// this.student.hobby.splice(0, 1, &#x27;开车&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// Vue.set(this.student.hobby, 0, &#x27;开车&#x27;)</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;开车&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title function_">remove</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-comment">// 从第0个开始删一个，然后插入开车</span></span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                        <span class="hljs-keyword">return</span> h !== <span class="hljs-string">&#x27;抽烟&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ul><h4 id="表单收集"><a href="#表单收集" class="headerlink" title="表单收集"></a>表单收集</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>收集表单数据：<br>若：&lt;input type=<span class="hljs-string">&quot;text&quot;</span>/&gt;，则v-model收集的是value值，用户输入的就是value值。<br>若：&lt;input type=<span class="hljs-string">&quot;radio&quot;</span>/&gt;，则v-model收集的是value值，且要给标签配置value值。<br>若：&lt;input type=<span class="hljs-string">&quot;checkbox&quot;</span>/&gt;<br><span class="hljs-number">1.</span>没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）<br><span class="hljs-number">2.</span>配置input的value属性:<br>(<span class="hljs-number">1</span>)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）<br>(<span class="hljs-number">2</span>)v-model的初始值是数组，那么收集的的就是value组成的数组<br>备注：v-model的三个修饰符：<br>lazy：失去焦点再收集数据<br>number：输入字符串转为有效的数字<br>trim：输入首尾空格过滤<br>--&gt;<br><br>&lt;body&gt;<br>    &lt;div id=&quot;root&quot;&gt;<br>        &lt;form @submit.prevent=&quot;demo&quot;&gt;<br>            账号: &lt;input type=&quot;text&quot; name=&quot;&quot; id=&quot;&quot; v-model.trim=&quot;userInfo.account&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            密码: &lt;input type=&quot;password&quot; v-model=&quot;userInfo.password&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            &lt;!-- number：输入字符串转为有效的数字 --&gt;<br>            年龄: &lt;input type=&quot;number&quot; v-model.number=&quot;userInfo.age&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            性别:<br>            男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;userInfo.sex&quot; value=&quot;male&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            女&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;userInfo.sex&quot; value=&quot;female&quot;&gt;&lt;br&gt;&lt;br&gt;<br>            爱好:<br>            学习&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;study&quot;&gt;<br>            打游戏&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;game&quot;&gt;<br>            吃饭&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;eat&quot;&gt;<br>            &lt;br&gt;&lt;br&gt;<br>            所属校区<br>            &lt;select v-model=&quot;userInfo.city&quot;&gt;<br>                &lt;option value=&quot;&quot;&gt;请选择校区&lt;/option&gt;<br>                &lt;option value=&quot;beijing&quot;&gt;北京&lt;/option&gt;<br>                &lt;option value=&quot;shanghai&quot;&gt;上海&lt;/option&gt;<br>                &lt;option value=&quot;深圳&quot;&gt;深圳&lt;/option&gt;<br>                &lt;option value=&quot;wuhan&quot;&gt;武汉&lt;/option&gt;<br>            &lt;/select&gt;<br>            &lt;br&gt;&lt;br&gt;<br>            其他信息：<br>            &lt;!-- 在默认情况下，v-model 在每次 input 事件触发后将输入框的值与数据进行同步 (除了上述输入法组合文字时)。你可以添加 lazy 修饰符，从而转为在 change 事件_之后_进行同步： --&gt;<br>            &lt;textarea v-model.lazy=&quot;userInfo.other&quot;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.agree&quot;&gt;阅读并接受&lt;a href=&quot;http://www.atguigu.com&quot;&gt;《用户协议》&lt;/a&gt;<br>            &lt;button&gt;提交&lt;/button&gt;<br>        &lt;/form&gt;<br>    &lt;/div&gt;<br>    &lt;script&gt;<br>        Vue.config.productionTip = false<br>        new Vue(&#123;<br>            el: &#x27;#root&#x27;,<br>            data: &#123;<br>                userInfo: &#123;<br>                    account: &#x27;&#x27;,<br>                    password: &#x27;&#x27;,<br>                    age: 18,<br>                    sex: &#x27;female&#x27;,<br>                    hobby: [],<br>                    city: &#x27;beijing&#x27;,<br>                    other: &#x27;&#x27;,<br>                    agree: &#x27;&#x27;<br>                &#125;<br>            &#125;,<br>            methods: &#123;<br>                demo() &#123;<br>                    console.log(JSON.stringify)<br>                &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><p>bootbdn dayjs(轻量级)</p><h4 id="过滤器filter"><a href="#过滤器filter" class="headerlink" title="过滤器filter"></a>过滤器filter</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>过滤器：<br>定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。<br>语法：<br><span class="hljs-number">1.</span>注册过滤器：<span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(name,callback) 或 <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>&#123;<span class="hljs-attr">filters</span>:&#123;&#125;&#125;<br><span class="hljs-number">2.</span>使用过滤器：&#123;&#123; xxx | 过滤器名&#125;&#125;  或  v-<span class="hljs-attr">bind</span>:属性 = <span class="hljs-string">&quot;xxx | 过滤器名&quot;</span><br>备注：<br><span class="hljs-number">1.</span>过滤器也可以接收额外参数、多个过滤器也可以串联<br><span class="hljs-number">2.</span>并没有改变原本的数据, 是产生新的对应的数据<br>--&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>显示格式化后的时间<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 计算属性实现 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;fmtTime&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- method实现 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;getFmtTime()&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 使用过滤器 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- |管道符 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;time | timeFormater&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!-- 过滤器实现 传参 --&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;time | timeFormater(&#x27;YYYY_MM_DD&#x27;) | mySlice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">:x</span>=<span class="hljs-string">&quot;msg|mySlice&quot;</span>&gt;</span>尚硅谷1<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root2&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;msg | mySlice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-comment">// 全局过滤器</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-string">&#x27;mySlice&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-keyword">return</span> value.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>)</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">time</span>: <span class="hljs-number">1621561377603</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;你好，尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">computed</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">fmtTime</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">getFmtTime</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-comment">// 局部过滤器</span></span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">filters</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">timeFormater</span>(<span class="hljs-params">value, str = <span class="hljs-string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(value).<span class="hljs-title function_">format</span>(str)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-title function_">mySlice</span>(<span class="hljs-params">value</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                   <span class="hljs-keyword">return</span> value.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>)</span></span><br><span class="language-javascript"><span class="language-xml">               &#125;</span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;hello,atguigu!&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="各种指令"><a href="#各种指令" class="headerlink" title="各种指令"></a>各种指令</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 我们学过的指令：<br>v-bind: 单向绑定解析表达式, 可简写为 :xxx<br>v-model: 双向数据绑定<br>v-<span class="hljs-keyword">for</span>  : 遍历数组/对象/字符串<br>v-on   : 绑定事件监听, 可简写为@<br>v-<span class="hljs-keyword">if</span>  : 条件渲染（动态控制节点是否存存在）<br>v-<span class="hljs-keyword">else</span> : 条件渲染（动态控制节点是否存存在）<br>v-show : 条件渲染 (动态控制节点是否展示)<br>v-text指令：<br><span class="hljs-number">1.</span>作用：向其所在的节点中渲染文本内容。<br><span class="hljs-number">2.</span>与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。 --&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>你好, &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-comment">&lt;!--  v-text指令：</span></span><br><span class="hljs-comment"><span class="language-xml">       1.作用：向其所在的节点中渲染文本内容。</span></span><br><span class="hljs-comment"><span class="language-xml">       2.与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。 --&gt;</span></span><br><span class="language-xml">           <span class="hljs-comment">&lt;!-- 把所有的字符串都当成文本 并不会解析标签--&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>hah<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">           <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">               <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;&lt;h3&gt;你好啊！&lt;/h3&gt;&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">           &#125;</span></span><br><span class="language-javascript"><span class="language-xml">       &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li><p>v-html指令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- v-html指令：<br>    <span class="hljs-number">1.</span> 作用：向指定节点中渲染包含html结构的内容<br>    <span class="hljs-number">2.</span> 与插值语法的区别：v-html 会替换掉节点中所有的内容, &#123;&#123;<span class="hljs-variable constant_">XXX</span>&#125;&#125;不会； v-html 可以识别html结构<br>    <span class="hljs-number">3.</span>严重注意：v-html有安全性问题！！！！<br>(<span class="hljs-number">1</span>).在网站上动态渲染任意<span class="hljs-variable constant_">HTML</span>是非常危险的，容易导致<span class="hljs-variable constant_">XSS</span>攻击。<br>(<span class="hljs-number">2</span>).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！--&gt;<br><br>&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>你好,&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;&lt;h3&gt;你好啊！&lt;/h3&gt;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">str2</span>: <span class="hljs-string">&#x27;&lt;a href=javascript:location.href=&quot;http://www.baidu.com?&quot;+document.cookie&gt;兄弟我找到你想要的资源了，快来！&lt;/a&gt;&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>v-cloak指令</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-attr">[v-cloak]</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: none;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br>v-cloak指令（没有值）：<br><span class="hljs-number">1.</span>本质是一个特殊属性，<span class="hljs-title class_">Vue</span>实例创建完毕并接管容器后，会删掉v-cloak属性。<br><span class="hljs-number">2.</span>使用css配合v-cloak可以解决网速慢时页面展示出&#123;&#123;xxx&#125;&#125;的问题。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;root&#x27;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;!-- <span class="hljs-variable constant_">JS</span>阻塞 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://localhost:8080/resource/5s/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">1</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>v-once指令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>v-once指令：<br><span class="hljs-number">1.</span>v-once所在节点在初次动态渲染后，就视为静态内容了。<br><span class="hljs-number">2.</span>以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-once</span>&gt;</span>初始化的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是: &#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">n</span>: <span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>v-pre指令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- <br>v-pre指令：<br><span class="hljs-number">1.</span>跳过其所在节点的编译过程。<br><span class="hljs-number">2.</span>可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。<br>--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-pre</span>&gt;</span>Vue其实很简单<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> &gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/body&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span> <span class="hljs-comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">n</span>:<span class="hljs-number">1</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h4><p><a href="https://dev.to/code_jedi/the-full-stack-developer-vocabularythe-full-list-4n5d">https://dev.to/code_jedi/the-full-stack-developer-vocabularythe-full-list-4n5d</a></p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>bigEvent - login登录页面</title>
    <link href="/2023/02/14/igEvent-%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/02/14/igEvent-%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="登录注册页面"><a href="#登录注册页面" class="headerlink" title="登录注册页面"></a>登录注册页面</h3><h5 id="1-页面布局"><a href="#1-页面布局" class="headerlink" title="1. 页面布局"></a>1. 页面布局</h5><p><img src="/images/pasted-11.png" alt="upload successful"></p><h5 id="2-制作记录"><a href="#2-制作记录" class="headerlink" title="2. 制作记录"></a>2. 制作记录</h5><ul><li>注意普通按钮和提交按钮的区别只是在于<code>lay submit</code> 这个属性</li></ul><p><img src="/images/pasted-10.png" alt="upload successful"></p><ul><li>css技巧<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span>,<br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;/assets/images/login_bg.jpg&quot;</span>) no-repeat center;<br>  <span class="hljs-comment">/* 这样整个背景图片平铺 */</span><br>  <span class="hljs-attribute">background-size</span>: cover;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 先把注册界面隐藏 */</span><br><span class="hljs-selector-class">.reg-box</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 让a链接向右端对齐*/</span><br><span class="hljs-selector-class">.links</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: flex-end;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 把字体图标放到该放的位置 */</span><br><span class="hljs-selector-class">.layui-form-item</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><span class="hljs-selector-class">.layui-icon</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><span class="hljs-selector-class">.layui-input</span> &#123;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">32px</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>JS部分</li></ul><ol><li>点击注册/登录按钮时页面跟着变化，这里的逻辑很简单，主要是<code>hiden()</code>和<code>show(）</code>方法的运用<figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs arcade">$(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// 点击“去注册账号”的链接</span><br>  $(<span class="hljs-string">&#x27;#link_reg&#x27;</span>).on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    $(<span class="hljs-string">&#x27;.login-box&#x27;</span>).hide()<br>    $(<span class="hljs-string">&#x27;.reg-box&#x27;</span>).show()<br>  &#125;)<br><br>  <span class="hljs-comment">// 点击“去登录”的链接</span><br>  $(<span class="hljs-string">&#x27;#link_login&#x27;</span>).on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    $(<span class="hljs-string">&#x27;.login-box&#x27;</span>).show()<br>    $(<span class="hljs-string">&#x27;.reg-box&#x27;</span>).hide()<br>  &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure></li><li>表单验证（这个是重点）</li></ol><ul><li>引入layui.js </li><li>从layui中获取<code>form</code>对象<code>let form = layui.form</code>和提示框 <code>let layer = layui.layer</code></li><li>通过<code>form.verify()</code>函数自定义验证表单验证规则<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs awk">form.verify(&#123; <span class="hljs-regexp">//</span> 自定义了一个叫做 pwd 校验规则<br>    pwd: [<span class="hljs-regexp">/^[\S]&#123;6,12&#125;$/</span>, <span class="hljs-string">&#x27;密码必须6到12位，且不能出现空格&#x27;</span>],<br>    <span class="hljs-regexp">//</span> 校验两次密码是否一致的规则<br>    repwd: <span class="hljs-keyword">function</span>(value) &#123;<br>      <span class="hljs-regexp">//</span> 通过形参拿到的是确认密码框中的内容<br>      <span class="hljs-regexp">//</span> 还需要拿到密码框中的内容<br>      <span class="hljs-regexp">//</span> 然后进行一次等于的判断<br>      <span class="hljs-regexp">//</span> 如果判断失败,则return一个提示消息即可<br>      var pwd = $(<span class="hljs-string">&#x27;.reg-box [name=password]&#x27;</span>).val()<br>      <span class="hljs-keyword">if</span> (pwd !== value) &#123;<br>        return <span class="hljs-string">&#x27;两次密码不一致！&#x27;</span><br>      &#125;<br>    &#125;&#125;)<br>    <br> <span class="hljs-regexp">//</span>注意一定不能忘记 给html中的标签属性添加上校验规格<br> &lt;input type=<span class="hljs-string">&quot;password&quot;</span> name=<span class="hljs-string">&quot;repassword&quot;</span> required lay-verify=<span class="hljs-string">&quot;required|pwd|repwd&quot;</span> placeholder=<span class="hljs-string">&quot;再次确认密码&quot;</span> autocomplete=<span class="hljs-string">&quot;off&quot;</span> class=<span class="hljs-string">&quot;layui-input&quot;</span> /&gt;<br></code></pre></td></tr></table></figure></li></ul><ol start="3"><li><p>发起注册的ajax请求</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// 监听注册表单的提交事件</span><br>  $(<span class="hljs-string">&#x27;#form_reg&#x27;</span>)<span class="hljs-selector-class">.on</span>(<span class="hljs-string">&#x27;submit&#x27;</span>, <span class="hljs-built_in">function</span>(e) &#123;<br>    <span class="hljs-comment">// 1. 阻止默认的提交行为</span><br>    e<span class="hljs-selector-class">.preventDefault</span>()<br>    <span class="hljs-comment">// 2. 发起Ajax的POST请求</span><br>    <span class="hljs-selector-tag">var</span> data = &#123;<br>      username: $(<span class="hljs-string">&#x27;#form_reg [name=username]&#x27;</span>)<span class="hljs-selector-class">.val</span>(),<br>      password: $(<span class="hljs-string">&#x27;#form_reg [name=password]&#x27;</span>)<span class="hljs-selector-class">.val</span>()<br>    &#125;<br>    $<span class="hljs-selector-class">.post</span>(<span class="hljs-string">&#x27;http://api-breakingnews-web.itheima.net/api/reguser&#x27;</span>, data, <span class="hljs-built_in">function</span>(res) &#123;<br>      <span class="hljs-keyword">if</span> (res<span class="hljs-selector-class">.status</span> !== <span class="hljs-number">0</span>) &#123;<br>        return layer<span class="hljs-selector-class">.msg</span>(res.message)<br>      &#125;<br>   layer<span class="hljs-selector-class">.msg</span>(<span class="hljs-string">&#x27;注册成功，请登录！&#x27;</span>)<br>      <span class="hljs-comment">// 模拟人的点击行为</span><br>      $(<span class="hljs-string">&#x27;#link_login&#x27;</span>)<span class="hljs-selector-class">.click</span>()<br>    &#125;)<br>  &#125;)<br></code></pre></td></tr></table></figure></li><li><p>发起登录的ajax请求</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// 监听登录表单的提交事件</span><br>  $(<span class="hljs-string">&#x27;#form_login&#x27;</span>)<span class="hljs-selector-class">.submit</span>(<span class="hljs-built_in">function</span>(e) &#123;<br>    <span class="hljs-comment">// 阻止默认提交行为</span><br>    e<span class="hljs-selector-class">.preventDefault</span>()<br>    $<span class="hljs-selector-class">.ajax</span>(&#123;<br>      url: <span class="hljs-string">&#x27;http://api-breakingnews-web.itheima.net/api/login&#x27;</span>,<br>      method: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-comment">// 快速获取表单中的数据</span><br>      data: $(this)<span class="hljs-selector-class">.serialize</span>(),<br>      success: <span class="hljs-built_in">function</span>(res) &#123;<br>        <span class="hljs-keyword">if</span> (res<span class="hljs-selector-class">.status</span> !== <span class="hljs-number">0</span>) &#123;<br>          return layer<span class="hljs-selector-class">.msg</span>(<span class="hljs-string">&#x27;登录失败！&#x27;</span>)<br>        &#125;<br>        layer<span class="hljs-selector-class">.msg</span>(<span class="hljs-string">&#x27;登录成功！&#x27;</span>)<br>        <span class="hljs-comment">// 将登录成功得到的 token 字符串，保存到 localStorage 中</span><br>        localStorage<span class="hljs-selector-class">.setItem</span>(<span class="hljs-string">&#x27;token&#x27;</span>, res.token)<br>        <span class="hljs-comment">// 跳转到后台主页</span><br>        location<span class="hljs-selector-class">.href</span> = <span class="hljs-string">&#x27;/index.html&#x27;</span><br>      &#125;<br>    &#125;)<br>  &#125;)<br></code></pre></td></tr></table></figure></li><li><p>在ajaxPrefilter中统一拼接请求的根路径</p></li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span><span class="hljs-number">1</span>. 在 `<span class="hljs-regexp">/assets/</span>js` 目录中新建 `baseAPI.js`<br><span class="hljs-regexp">//</span> 注意：每次调用 $.get() 或 $.post() 或 $.ajax() 的时候，<br><span class="hljs-regexp">//</span> 会先调用 ajaxPrefilter 这个函数<br><span class="hljs-regexp">//</span> 在这个函数中，可以拿到我们给Ajax提供的配置对象<br>$.ajaxPrefilter(<span class="hljs-keyword">function</span>(options) &#123;<br>  <span class="hljs-regexp">//</span> 在发起真正的 Ajax 请求之前，统一拼接请求的根路径<br>  options.url = <span class="hljs-string">&#x27;http://api-breakingnews-web.itheima.net&#x27;</span> + options.url<br>&#125;)<br><br></code></pre></td></tr></table></figure><h5 id="3-最终效果"><a href="#3-最终效果" class="headerlink" title="3. 最终效果"></a>3. 最终效果</h5><p><img src="/images/pasted-12.png" alt="upload successful"></p><p><img src="/images/pasted-13.png" alt="upload successful"></p>]]></content>
    
    
    <categories>
      
      <category>前端学习笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Git的基本使用</title>
    <link href="/2023/02/14/%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/02/14/%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<ol><li><p>git bash 然后输入 mkdir coding  就创建了一个文件夹 （此时文件夹里是空的）</p></li><li><p>cd coding 到文件夹coding的位置</p></li><li><p>再git init  此时文件夹中会出来一个.git的文件夹</p></li><li><p>在coding文件夹中手动创建一个test.txt</p></li><li><p>使用命令行 git add test.txt 将文件放到暂存区</p></li><li><p>再git status查看文件夹的状态 会显示 changes to be committed (绿色的 new file test.txt</p></li><li><p>然后git commit -m “第一次提交”  会显示 creat mode test.txt 这样文件就放到本地仓库了</p></li><li><p>git remote add origin(名) url</p></li><li><p>git branch -M main</p></li><li><p>git push -u origin main</p><p>如果再上传一个文件夹的话 要把origin改成别的名字</p></li><li><p>把文件内容改了之后 再git status 会发现 变成了modified 此时 我们git add . 添加到暂存区 然后 git commit -m “second commit” 然后 git push -u origin main</p></li></ol><p>注意：- 如果一个文件夹 已经有.git文件包了  不能在新建一个有.git的文件包进来</p><p>​           - git 不能远程上传一个空文件夹 必须在它的里面放点东西</p><p>返回上一级文件夹 命令行 cd ..</p><p>分支主要是每个程序元负责自己的版块 等到最后大家都合并到master分支上</p><ol start="12"><li><p>通过git branch 命令行 可以查看所有的分支，分支前的*号表示当前所处的分支</p></li><li><p>git branch login 基于当前的main分支又创建了一个login分支 分支中的代码和main一致</p></li><li><p>通过chekout 来切换到指定分支上 git checkout login</p></li><li><p>通过git checkout -b logout 可以新建logout分支 并切换到它的上面</p></li><li><p>合并分支：先切换到main 分支上 在main分支上运行 git merge login命令  将login代码合并到main上</p></li><li><p>合并之后就删除本地的login 分支 git branch -d login</p></li><li><p>第一次上传分支 git push origin logout  (先要切换到这个分支上来) origin是指远程仓库的别名 ：第一次推送分支需要带 -u 参数，此后可以直接使用 git push 推送代码到远程分支。</p></li><li><p>通过git remote show 可以查看所有分支列表、</p></li><li><p>跟踪分支：把远程仓库的分支下载到本地仓库 git checkout logout（给本地分支重命名）</p><p>git checkout  -b newbranch origin/logout(远程分支名称)</p></li><li><p>从远程分支拉取代码 git pull 保持远程的代码和本地仓库的一致</p></li><li><p>删除远程分支 git push origin –delete 远程分支名</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>好久不见</title>
    <link href="/2023/01/06/%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81/"/>
    <url>/2023/01/06/%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81/</url>
    
    <content type="html"><![CDATA[<p>我回来了！</p><p>2023 坚持写博客！</p>]]></content>
    
    
    
    <tags>
      
      <tag>Daily</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue学习笔记（二）</title>
    <link href="/2022/10/03/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2022/10/03/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h4 id="1-条件渲染"><a href="#1-条件渲染" class="headerlink" title="1. 条件渲染"></a>1. 条件渲染</h4><h5 id="1-1-v-if"><a href="#1-1-v-if" class="headerlink" title="1.1 v-if"></a>1.1 <code>v-if</code></h5><ul><li><p>写法：</p><ul><li><code>v-if=&quot;表达式&quot;</code></li><li><code>v-else-if=&quot;表达式&quot;</code></li><li><code>v-else=&quot;表达式&quot;</code></li></ul></li><li><p>适用于：切换频率较低的场景</p></li><li><p>特点：不展示的DOM元素直接被移除</p></li><li><p>注意：<code>v-if</code>可以和<code>v-else-if</code>,<code>v-else</code>一起使用，但是结构不能被打断</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;1===1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">div v-if=&quot;n===1&quot;&gt;Angular<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;n===2&quot;</span>&gt;</span>React<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;n===3&quot;</span>&gt;</span>Vue<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>hah<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><code>v-if</code>与<code>template</code>搭配使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">``html<br><span class="hljs-comment">&lt;!-- v-if与template的配合使用 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;n === 1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>尚硅谷<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h5 id="1-2-v-show"><a href="#1-2-v-show" class="headerlink" title="1.2 v-show"></a>1.2 <code>v-show</code></h5><ul><li><p>写法：</p><ul><li><code>v-show=&quot;表达式&quot;</code></li><li>适用于：切换频率较高的场景</li><li>特点：不展示的DOM元素未被移除，仅仅是样式隐藏掉了</li><li>使用<code>v-if</code>时，元素可能无法获取到，而使用<code>v-show</code>一定可以获取到</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>// 切换频率高的用v-show<br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;1===1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">n</span>: <span class="hljs-number">0</span>,<br>               <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span><br>           &#125;<br>       &#125;)<br></code></pre></td></tr></table></figure></li></ul><h4 id="2-列表渲染"><a href="#2-列表渲染" class="headerlink" title="2. 列表渲染"></a>2. 列表渲染</h4><h5 id="2-1-基本列表"><a href="#2-1-基本列表" class="headerlink" title="2.1 基本列表"></a>2.1 基本列表</h5><ol><li><code>v-for</code>指令：</li></ol><ul><li>用于展示列表数据</li><li>语法：<code>v-for=&quot;(item,index) in xxx :key=&quot;yyy&quot;</code></li><li>可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）</li></ul><ol start="2"><li><p>遍历数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//JS</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-attr">persons</span>: [<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span> &#125;<br>                ],<br>            &#125;<br>        &#125;)<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html">//HTML<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- p相当于形参 --&gt;</span><br>         //每个节点都有自己的id  这里的in 可以改成of   <br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p, index) in persons &quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;p.id&quot;</span>&gt;</span><br>                &#123;&#123;p.name&#125;&#125; - &#123;&#123;p.age&#125;&#125; - &#123;&#123;index&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            // 这里只能用p.id 不能用index<br>             <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;p in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;p.id&quot;</span>&gt;</span><br>                &#123;&#123;p.name&#125;&#125;- &#123;&#123;p.age&#125;&#125;- &#123;&#123;p.id&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>遍历对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//JS</span><br> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-attr">car</span>: &#123;<br>                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;奥迪&#x27;</span>,<br>                    <span class="hljs-attr">price</span>: <span class="hljs-string">&#x27;1800&#x27;</span>,<br>                    <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;黑色&#x27;</span><br>                &#125;,<br>            &#125;<br>        &#125;)<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html">//HTML<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>汽车信息<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value,k) of car&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;k&quot;</span>&gt;</span><br>                &#123;&#123;value&#125;&#125;-&#123;&#123;k&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>遍历字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;hello&#x27;</span><br>           &#125;<br>       &#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>遍历字符串<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(char,index) of str&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="language-xml">                &#123;&#123;char&#125;&#125;-&#123;&#123;index&#125;&#125;</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>    &lt;/div&gt;<br></code></pre></td></tr></table></figure></li><li><p>遍历指定次数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>遍历指定次数<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(number,index) of 5&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                &#123;&#123;number&#125;&#125;-&#123;&#123;index&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h5 id="2-2-key的原理"><a href="#2-2-key的原理" class="headerlink" title="2.2 key的原理"></a>2.2 key的原理</h5><h6 id="2-2-1虚拟DOM中的key的作用："><a href="#2-2-1虚拟DOM中的key的作用：" class="headerlink" title="2.2.1虚拟DOM中的key的作用："></a>2.2.1虚拟DOM中的key的作用：</h6><ol><li>key是虚拟DOM对象的标识，当数据发生变化时，vue会根据新数据形成【新DOM】</li><li>随后<code>Vue</code>进行【新虚拟<code>DOM</code>】与【旧虚拟<code>DOM</code>】的差异比较。比较规则如下：</li></ol><h6 id="2-2-2-对比规则"><a href="#2-2-2-对比规则" class="headerlink" title="2.2.2 对比规则"></a>2.2.2 对比规则</h6><ol><li>旧虚拟<code>DOM</code>中找到了与新虚拟<code>DOM</code>相同的<code>key</code>:<ul><li>若虚拟<code>DOM</code>中内容没有变，直接使用之前的真实<code>DOM</code></li><li>若虚拟<code>DOM</code>中的内容变了，则生成新的真实<code>DOM</code>，随后替换页面之前的真实DOM</li></ul></li><li>旧虚拟<code>DOM</code>中未找到与新虚拟<code>DOM</code>相同的<code>key</code>:<ul><li>创建新的真实<code>DOM</code>，随后渲染到页面</li></ul></li></ol><h6 id="2-2-3-用index作为key可能引发的问题"><a href="#2-2-3-用index作为key可能引发的问题" class="headerlink" title="2.2.3 用index作为key可能引发的问题"></a>2.2.3 用index作为key可能引发的问题</h6><ol><li>若对数据进行：逆序添加，逆序删除等破坏顺序操作，会产生没必要的真实DOM更新— 界面效果没问题，但是效率低</li><li>如果结构中还包含输入类的DOM：会产生错误的DOM更新—导致界面有问题</li></ol><h6 id="2-2-4-开发中如何选择key"><a href="#2-2-4-开发中如何选择key" class="headerlink" title="2.2.4 开发中如何选择key"></a>2.2.4 开发中如何选择key</h6><ol><li><p>最好使用每条数据的唯一标识作为key, 如id，手机号，身份证号，学号等唯一值</p></li><li><p>如果不存在对数据的逆序添加，逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用index作为key是没有问题的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>  <br>               <span class="hljs-comment">&lt;!--虚拟DOM对比Diff算法 --&gt;</span><br>            <span class="hljs-comment">&lt;!-- key属性被Vue征用了 --&gt;</span><br>            <span class="hljs-comment">&lt;!-- key相当于身份证号 --&gt;</span><br>            <span class="hljs-comment">&lt;!-- 如果index打乱了顺序操作 那只有写p.id才不会有问题  用p.id效率会更高 因为复用多 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p,index) in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;p.id&quot;</span>&gt;</span><br>                &#123;&#123;p.name&#125;&#125; - &#123;&#123;p.age&#125;&#125;<br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>        <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#root&#x27;</span>,<br>        <span class="hljs-attr">data</span>: &#123;<br>            <span class="hljs-attr">persons</span>: [<br>            &#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">19</span>&#125; ,   <br>            &#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">20</span>&#125;,<br>            &#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">21</span>&#125;<br>            ],<br>        &#125;,<br>        <span class="hljs-attr">methods</span>: &#123;<br>            <span class="hljs-title function_">add</span>(<span class="hljs-params"></span>)&#123;<br>                <span class="hljs-keyword">const</span> p = &#123;<span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;老刘&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">40</span>&#125;<br>                <span class="hljs-comment">// this.persons.unshift(p) 从头加</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">push</span>(p) <span class="hljs-comment">//从尾加</span><br>            &#125;<br>        &#125;,<br>    &#125;)  <br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure></li></ol><h5 id="2-3-列表过滤"><a href="#2-3-列表过滤" class="headerlink" title="2.3 列表过滤"></a>2.3 列表过滤</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入名字&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;keyWord&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(p,index) in filPersons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;p.id&quot;</span>&gt;</span><br>                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;<br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">//用watch实现</span><br>&lt;script&gt;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-comment">// 收集用户的输入：要把输入的数字都保存下来，所以需要自己建一个空字符串，v-model实现双向绑定</span><br>                <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>                <span class="hljs-attr">persons</span>: [<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;马冬梅&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周冬雨&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周杰伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;温兆伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;<br>                ],<br>                <span class="hljs-comment">//新数据</span><br>                <span class="hljs-attr">filPersons</span>: [&#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;马冬梅&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,<br>                &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周冬雨&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,<br>                &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周杰伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;,<br>                &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;温兆伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;]<br><br>            &#125;,<br>            <span class="hljs-comment">// 监测input框内  数据的变化</span><br>     <span class="hljs-comment">//filter过滤后 会返回一个新的数组（符合条件的数组），不会改变原数组</span><br>      <span class="hljs-comment">// 所以 把拿到的数据重新赋值给原数组，这样数组内容就改变了</span><br>     <span class="hljs-comment">//  indexOf 字符串中是否包含 -1 是不包含  其他都是包含</span><br>            <span class="hljs-attr">watch</span>: &#123;<br>                <span class="hljs-attr">keyWord</span>: &#123;<br>                    <span class="hljs-comment">//立即执行 先实现一遍</span><br>                    <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span>,<br>                    <span class="hljs-title function_">handler</span>(<span class="hljs-params">val</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">filPersons</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;<br>                            <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(val) !== -<span class="hljs-number">1</span><br>                        &#125;)<br>                    &#125;<br><br>                &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">//用computed实现</span><br> &lt;script&gt;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>                <span class="hljs-attr">persons</span>: [<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;001&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;马冬梅&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;002&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周冬雨&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;女&#x27;</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;003&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;周杰伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;,<br>                    &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;004&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;温兆伦&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span> &#125;<br>                ],<br><br>            &#125;,<br>            <span class="hljs-attr">computed</span>: &#123;<br>                <span class="hljs-title function_">filPersons</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;<br>                        <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">keyWord</span>) !== -<span class="hljs-number">1</span><br>                    &#125;)<br>                &#125;<br>            &#125;<br><br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><h5 id="2-4-列表排序"><a href="#2-4-列表排序" class="headerlink" title="2.4 列表排序"></a>2.4 列表排序</h5><h5 id="2-5-Vue检测数据改变的原理-对象"><a href="#2-5-Vue检测数据改变的原理-对象" class="headerlink" title="2.5 Vue检测数据改变的原理__对象"></a>2.5<code> Vue</code>检测数据改变的原理__对象</h5><h5 id="2-6-数据监测"><a href="#2-6-数据监测" class="headerlink" title="2.6 数据监测"></a>2.6 数据监测</h5><h5 id="2-7-Vue-set的使用"><a href="#2-7-Vue-set的使用" class="headerlink" title="2.7 Vue.set的使用"></a>2.7 <code>Vue.set</code>的使用</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>名称：&#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>地址：&#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长：&#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- undefined 不报错 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值为男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>姓别:&#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>真实年龄&#123;&#123;student.age.rAge&#125;&#125;, 对外&#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>朋友们<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(f,index) in student.friends&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>               &#123;&#123;f.age&#125;&#125;-&#123;&#123;f.name&#125;&#125;<br>           <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-comment">// Vue.set()不能直接用在data或者vm实例上，所以要先给一个school属性</span><br>               <span class="hljs-attr">school</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                   <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,<br>               &#125;,<br>               <span class="hljs-attr">student</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>,<br>                   <span class="hljs-attr">age</span>: &#123;<br>                       <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,<br>                       <span class="hljs-attr">sAge</span>: <span class="hljs-number">20</span><br>                   &#125;,<br>                   <span class="hljs-attr">friends</span>: [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">23</span> &#125;]<br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-comment">// Vue.set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br>                   <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)<br>               &#125;<br>           &#125;,<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure><h5 id="2-8-Vue监测数据改变的原理-数组"><a href="#2-8-Vue监测数据改变的原理-数组" class="headerlink" title="2.8 Vue监测数据改变的原理_数组"></a>2.8 <code>Vue</code>监测数据改变的原理_数组</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>名称：&#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>地址：&#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长：&#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- undefined 不报错 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值为男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>姓别:&#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>真实年龄&#123;&#123;student.age.rAge&#125;&#125;, 对外&#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>爱好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h,index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                &#123;&#123;h&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-comment">// Vue.set()不能直接用在data或者vm实例上，所以要先给一个school属性</span><br>               <span class="hljs-attr">school</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>                   <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,<br>               &#125;,<br>               <span class="hljs-attr">student</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>,<br>                   <span class="hljs-attr">age</span>: &#123;<br>                       <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,<br>                       <span class="hljs-attr">sAge</span>: <span class="hljs-number">20</span>,<br><br>                   &#125;,<br>                   <span class="hljs-comment">// hobby: &#123;</span><br>                   <span class="hljs-comment">//     h1: &#x27;抽烟&#x27;,</span><br>                   <span class="hljs-comment">//     h2: &#x27;喝酒&#x27;,</span><br>                   <span class="hljs-comment">//     n3: &#x27;烫头&#x27;</span><br>                   <span class="hljs-comment">// &#125;,</span><br>                   <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&#x27;抽烟&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>, <span class="hljs-string">&#x27;烫头&#x27;</span>],<br>                   <span class="hljs-comment">// 必须是数组 push splice unshift shift pop这些改变数组的方法能被vue监测到,可以用vue规定的7种改变数组的方法</span><br>                   <span class="hljs-comment">// Vue.set(vm.student.hobby, 1, &#x27;打台球&#x27;)</span><br>                   <span class="hljs-comment">// vm.$set(vm.student.hobby, 1, &#x27;打台球&#x27;)</span><br>                   <span class="hljs-attr">friends</span>: [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">23</span> &#125;]<br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-comment">// Vue.set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br>                   <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)<br>               &#125;<br>           &#125;,<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure><h5 id="2-10-Vue数据监测总结"><a href="#2-10-Vue数据监测总结" class="headerlink" title="2.10 Vue数据监测总结"></a>2.10 <code>Vue</code>数据监测总结</h5><p><code>Vue</code>监测数据的原理：</p><ol><li><code>Vue</code>会监视<code>data</code>中所有层次的数据</li><li>如何监测对象中的数据？<ul><li>通过<code>setter</code>实现监视，且要在<code>new Vue</code>时就要传入要监测的数据。<ol><li>对象中后追加的属性，<code>vue</code>默认不做响应处理</li><li>如需给后添加的属性做响应式，要使用如下API：<ul><li><code>Vue.set(target, propertyName/index, val)</code>或</li><li><code>vm.$set(target, propertyName/index, val)</code></li></ul></li></ol></li></ul></li><li>如何监测数组中的数据？<ul><li>通过包裹数组更新元素的方法实现，本质就是做了两件事：<ul><li>调用原生对应的方法对数组进行更新</li><li>重新解析模板，进而更新页面</li></ul></li></ul></li><li>在<code>vue</code>修改数组中的某个元素一定要用如下方法：<ul><li>使用这些API：<code>push(), pop(), shift(), unshift(), splice()</code></li><li><code>Vue.set()或vm.$set()</code></li></ul></li><li>注意：<code>Vue.set()和vm.$set()</code>不能给<code>vm</code>或<code>vm</code>的根数据添加属性（也就是<code>data</code>）</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html">//HTML<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;student.age++&quot;</span>&gt;</span>年龄+1岁<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加性别属性， 默认值：男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;student.sex= &#x27;未知&#x27;&quot;</span>&gt;</span>修改性别<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateFirst&quot;</span>&gt;</span>修改第一个朋友的名字为:张三<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;drive&quot;</span>&gt;</span>修改第一个爱好为：开车<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;remove&quot;</span>&gt;</span>去掉第一个爱好抽烟<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>年龄：&#123;&#123;student.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>爱好<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h, index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                &#123;&#123;h&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>朋友们：<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(f, index) in student.friends&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                &#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">student</span>: &#123;<br>                   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,<br>                   <span class="hljs-attr">age</span>: <span class="hljs-string">&#x27;18&#x27;</span>,<br>                   <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&#x27;抽烟&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>, <span class="hljs-string">&#x27;烫头&#x27;</span>],<br>                   <span class="hljs-attr">friends</span>: [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;tom&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">26</span> &#125;]<br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-comment">// Vue.set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br>                   <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&#x27;sex&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>)<br>               &#125;,<br>               <span class="hljs-title function_">addFriend</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>.<span class="hljs-title function_">unshift</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jack&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> &#125;) <span class="hljs-comment">//后面加的Jack也是响应式</span><br>               &#125;,<br>               <span class="hljs-title function_">updateFirst</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>[<span class="hljs-number">0</span>].<span class="hljs-property">name</span> = <span class="hljs-string">&quot;张三&quot;</span><br>               &#125;,<br>               <span class="hljs-title function_">addHobby</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;学习&#x27;</span>)<br>               &#125;,<br>               <span class="hljs-title function_">drive</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-comment">// 从第0个开始删一个，然后插入开车</span><br>                   <span class="hljs-comment">// this.student.hobby.splice(0, 1, &#x27;开车&#x27;)</span><br>                   <span class="hljs-comment">// Vue.set(this.student.hobby, 0, &#x27;开车&#x27;)</span><br>                   <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;开车&#x27;</span>)<br>               &#125;,<br>               <span class="hljs-title function_">remove</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> &#123;<br>                       <span class="hljs-keyword">return</span> h !== <span class="hljs-string">&#x27;抽烟&#x27;</span><br>                   &#125;)<br>               &#125;<br>           &#125;<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure><p>未完，待补充更新…</p>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>14-JavaScript Reference VS Copying</title>
    <link href="/2022/09/25/14-JavaScript-Reference-VS-Copying/"/>
    <url>/2022/09/25/14-JavaScript-Reference-VS-Copying/</url>
    
    <content type="html"><![CDATA[<h3 id="14-JavaScript-References-VS-Copying"><a href="#14-JavaScript-References-VS-Copying" class="headerlink" title="14. JavaScript References VS Copying"></a>14. JavaScript References VS Copying</h3><p>本小节主要学习JavaScript中不同类型数据的<code>引用reference</code>和<code>复制copy</code>的区别。</p><h4 id="1-普通数据类型"><a href="#1-普通数据类型" class="headerlink" title="1. 普通数据类型"></a>1. 普通数据类型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// Number型 String型</span><br><span class="hljs-keyword">let</span> age = <span class="hljs-number">100</span>;<br><span class="hljs-keyword">let</span> age2 = age;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age, age2); <span class="hljs-comment">//100, 100</span><br>age = <span class="hljs-number">200</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(age, age2); <span class="hljs-comment">// 200, 100</span><br><br><span class="hljs-keyword">let</span> name = <span class="hljs-string">&#x27;Wes&#x27;</span>;<br><span class="hljs-keyword">let</span> name2 = name;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name, name2);<br>name = <span class="hljs-string">&#x27;wesley&#x27;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name, name2);<br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">//Array型</span><br><span class="hljs-comment">// 新建一个数组</span><br>        <span class="hljs-keyword">const</span> players = [<span class="hljs-string">&#x27;Wes&#x27;</span>, <span class="hljs-string">&#x27;Sarah&#x27;</span>, <span class="hljs-string">&#x27;Ryan&#x27;</span>, <span class="hljs-string">&#x27;Poppy&#x27;</span>]<br>        <span class="hljs-comment">// 我们想要复制这个数组</span><br>        <span class="hljs-keyword">const</span> team = players<br>        <span class="hljs-comment">// 改变了复制数组里的一项</span><br>        team[<span class="hljs-number">3</span>] = <span class="hljs-string">&#x27;Lux&#x27;</span><br>        <span class="hljs-comment">// 结果原数组也会发生改变</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(players, team);<br><span class="hljs-comment">// 因为这是数组引用 reference  而不是数组复制 copy；引用指向的是同一个数组</span><br></code></pre></td></tr></table></figure><p>所以要如何修复这个问题？我们要复制一个数组</p><ul><li>方法一：利用<code>slice()</code>浅拷贝</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 利用slice：slice得到的结果是对原数组的浅拷贝，不会影响原数组</span><br><span class="hljs-keyword">const</span> team2 = players.<span class="hljs-title function_">slice</span>()<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(team2);<br></code></pre></td></tr></table></figure><ul><li>方法二：利用<code>concat()</code>合并数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//利用concat合并数组：创建一个新数组然后和原数组合并。concat它也不会更改原有的数组，而是返回一个新数组</span><br>       <span class="hljs-keyword">const</span> team3 = [].<span class="hljs-title function_">concat</span>(players)<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(team3);<br></code></pre></td></tr></table></figure><ul><li>方法三：使用<code>ES6 Spread扩展语法</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> team4 = [...players]<br>team4[<span class="hljs-number">3</span>] = <span class="hljs-string">&#x27;hah&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(team4);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(players);<br></code></pre></td></tr></table></figure><ul><li>方法四：使用<code>Array.from()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 使用Array.from()使用 Array 创建新的数组实例</span><br><span class="hljs-keyword">const</span> team5 = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(players)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(team5);<br></code></pre></td></tr></table></figure><h4 id="2-对象"><a href="#2-对象" class="headerlink" title="2. 对象"></a>2. 对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> person = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Wes Bos&#x27;</span>,<br><span class="hljs-attr">age</span>: <span class="hljs-number">80</span><br>&#125;<br><span class="hljs-comment">// 我们想要复制一个对象</span><br><span class="hljs-keyword">const</span> captain = person;<br>captain.<span class="hljs-property">number</span> = <span class="hljs-number">99</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(person);<br><span class="hljs-comment">// number:90  这个属性也会添加到captain身上，这是引用而不是复制</span><br></code></pre></td></tr></table></figure><p>所以，要如何实现对对象的复制？</p><ul><li>方法一：利用<code>Object.assign(&#123;&#125;, 对象名, &#123;需要加的新属性等&#125;)</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> cap2 = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, person, &#123;<br><span class="hljs-attr">number</span>: <span class="hljs-number">99</span>,<br><span class="hljs-attr">age</span>: <span class="hljs-number">22</span><br>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(cap2);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(person);<br><span class="hljs-comment">// person不会因为cap2改变而变化</span><br></code></pre></td></tr></table></figure><p>这个例子里面，我们用的数组和对象都只是一层嵌套，Lodash 有一个深度复制的方法，但使用之前需要多考虑一下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> wes = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;wes&#x27;</span>,<br><span class="hljs-attr">age</span>: <span class="hljs-number">100</span>,<br><span class="hljs-attr">social</span>: &#123;<br><span class="hljs-attr">twitter</span>: <span class="hljs-string">&#x27;@wesbos&#x27;</span>,<br><span class="hljs-attr">facebook</span>: <span class="hljs-string">&#x27;wesbos.developer&#x27;</span><br>&#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">clear</span>()<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(wes);<br><br><span class="hljs-keyword">const</span> dev = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, wes)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(dev);<br></code></pre></td></tr></table></figure><ul><li>方法二：利用JSON转换</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">// 利用JSON转换：先将对象转换成字符串的格式，再转换成JSON格式， 从而实现复制</span><br><span class="hljs-keyword">const</span> dev2 = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(wes))<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(dev);<br></code></pre></td></tr></table></figure><p>这一节比较简单，就这样~~~</p>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>13-Slide in on Scroll</title>
    <link href="/2022/09/25/13-Slide-in-on-Scroll/"/>
    <url>/2022/09/25/13-Slide-in-on-Scroll/</url>
    
    <content type="html"><![CDATA[<h3 id="13-Slide-in-on-scroll"><a href="#13-Slide-in-on-scroll" class="headerlink" title="13. Slide in on scroll"></a>13. Slide in on scroll</h3><h4 id="1-实现效果"><a href="#1-实现效果" class="headerlink" title="1. 实现效果"></a>1. 实现效果</h4><p>随着页面上下滚动，图片位置划过图片的一半时，图片从两侧滑入；图片位置离开可见区域时，图片滑出。</p><h4 id="2-相关知识点"><a href="#2-相关知识点" class="headerlink" title="2. 相关知识点"></a>2. 相关知识点</h4><ul><li><p><code>translateX</code>控制左右移动；<code>scale</code>控制元素的缩放</p></li><li><p><code>Element.scrollTop</code>属性获取或者设置一个元素的内容垂直滚动的像素数</p></li><li><p><code>window.innerHeight</code>浏览器窗口的视口高度（以像素为单位），如果有滚动条，也包括滚动条的高度。<strong>只读属性</strong>没有默认值。</p></li><li><p><code>HTMLElement.offsetTop</code> <strong>只读属性</strong>，它返回当前元素相对于其父元素的顶部内边距的距离。</p></li><li><p><code>debounce</code>的作用：降低事件监听的频率</p></li><li><p><code>apply()</code>方法  是为了动态改变<code>this</code>而出现的，当一个<code>object</code>没有某方法，但是其他的有时，我们可以借助<code>apply</code>用其他对象的方法来操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">func.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, [arg1, arg2])<br></code></pre></td></tr></table></figure></li></ul><h4 id="3-思路"><a href="#3-思路" class="headerlink" title="3. 思路"></a>3. 思路</h4><ul><li>获取页面中的所有图片元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> sliderImages = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.slide-in&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>监听滚动事件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkSlide</span>(<span class="hljs-params">e</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">count</span>(e);<br>&#125;<br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;scroll&#x27;</span>, <span class="hljs-title function_">debounce</span>(checkSlide))<br></code></pre></td></tr></table></figure><p>由于每次滚动都会触发事件，会降低JS的运行性能， 所以用<code>debounce</code>来减少触发的次数</p><p>针对每一次监听到的滚动事件，都遍历图片元素，判断是否显示或者隐藏图片；图片的显示只需要通过<code>.active</code>类</p><ul><li>尺寸获取和处理</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//滑动页面的底部距离扣除图片一半的高度</span><br><span class="hljs-keyword">const</span> slideInAt = (<span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollY</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>) - img.<span class="hljs-property">height</span>/<span class="hljs-number">2</span><br><span class="hljs-comment">// 图片底部距离顶端的距离</span><br><span class="hljs-keyword">const</span> imgBottom = img.<span class="hljs-property">offsetTop</span> + img.<span class="hljs-property">height</span><br></code></pre></td></tr></table></figure><p><img src="/images/pasted-9.png" alt="upload successful"></p><ul><li><p>滚动至指定区域的判断</p><p>需要利用两个临界点来判断图片是否显示，所以用两个值来存放该条件的结果（这样能保证每次事件监听的结果赋值给常量后，不会随window的属性值变化）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 已滑过了图片的一半</span><br><span class="hljs-keyword">const</span> isHalfShow = slideInAt &gt; img.<span class="hljs-property">setoffTop</span>;<br><span class="hljs-comment">// 未完全划过图片</span><br><span class="hljs-keyword">const</span> isNotScrollPast = <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollY</span>&lt; imgBottom;<br></code></pre></td></tr></table></figure><p>对于满足现实条件的，给图片添加<code>.active</code>类，不满足的则去掉</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span>(isHalfShow &amp;&amp; isNotScrollPast)&#123;<br>img.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;active&#x27;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>img.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;active&#x27;</span>)<br>&#125;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue学习笔记（一）</title>
    <link href="/2022/09/17/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2022/09/17/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h3 id="Vue学习笔记（一）"><a href="#Vue学习笔记（一）" class="headerlink" title="Vue学习笔记（一）"></a>Vue学习笔记（一）</h3><h4 id="1-初识"><a href="#1-初识" class="headerlink" title="1. 初识"></a>1. 初识</h4><ul><li><p>引入<code>vue.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script src=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>准备好一个容器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello &#123;&#123;name.toUpperCase()&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>&lt;/div&gt;<br></code></pre></td></tr></table></figure></li><li><p>创建<code>vue</code>实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span> <span class="hljs-comment">//阻止 vue 在启动时生成生产提示。</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>    <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Shang&#x27;</span><br>    &#125;<br>&#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ol><li>用<code>el</code>指定当前<code>Vue</code>实例为哪个容器服务，通常值为<code>css</code>选择器</li><li><code>data</code>中用于存储数据，数据供<code>el</code>所指定的容器去使用，值暂时先写成一个对象</li><li>容器和实例之间是一一对应的关系</li><li><code>js表达式</code>和<code>js代码</code>不是同一概念，前者会生成一个值，可以放在任何需要值的地方；后者是语句</li></ol></li></ul><h4 id="2-模板语法"><a href="#2-模板语法" class="headerlink" title="2.  模板语法"></a>2.  模板语法</h4><p><code>html</code>中包含了一些<code>js</code>语法代码，语法分为两种：<code>插值语法</code>和<code>指令（以v-开头）</code></p><h5 id="2-1-插值语法"><a href="#2-1-插值语法" class="headerlink" title="2.1 插值语法"></a>2.1 插值语法</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>插值语法<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>你好， &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>    &lt;hr&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>指向语法<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">:href</span>=<span class="hljs-string">&#x27;url&#x27;</span>&gt;</span>去尚硅谷学习<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="hljs-comment">//url 在这里是表达式</span><br>    &lt;/div&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jack&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://www.atguigu.com&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ol><li>插值语法：用于解析标签体内容， 写法<code>&#123;&#123;**&#125;&#125;</code> **是<code>js</code>表达式，且可以直接读取到<code>data</code>中的所有属性</li><li>指令语法：用于解析标签内容（包括：标签属性，标签体内容，绑定事件等），如<code>v-bind:href=&#39;xxx&#39;</code>或者简写<code>:href=&#39;xxx&#39;</code>,<code>xxx</code>要为表达式，且可以直接读取到<code>data</code>中的所有属性。vue中有很多的指令。</li></ol><h4 id="3-数据绑定"><a href="#3-数据绑定" class="headerlink" title="3. 数据绑定"></a>3. 数据绑定</h4><p><code>Vue</code>中有两种数据绑定方式：</p><h5 id="3-1-单向数据绑定"><a href="#3-1-单向数据绑定" class="headerlink" title="3.1 单向数据绑定"></a>3.1 单向数据绑定</h5><p><code>单向绑定（v-bind）</code>:数据只能从<code>data</code>流向页面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-bind:value</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span></span><br><span class="language-xml">        //简写  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml"> </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h5 id="3-2-双向数据绑定"><a href="#3-2-双向数据绑定" class="headerlink" title="3.2 双向数据绑定"></a>3.2 双向数据绑定</h5><p><code>双向绑定（v-model）</code>:数据不仅能从<code>data</code>流向页面，还能从页面流向<code>data</code>。一般应用在表单类元素上，如<code>input``select</code>等；<code>v-model:value</code>可以简写成<code>v-model</code>，因为<code>v-model</code>默认收集的就是<code>value</code>值.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span></span><br><span class="language-xml">        //简写： <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>需要注意的是，并不是所有的元素类型都支持<code>v-model</code>，比如下面代码就会报错</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;h2 v-<span class="hljs-attr">model</span>:x=<span class="hljs-string">&quot;name&quot;</span>&gt;你好啊&lt;/h2&gt; <br><span class="hljs-comment">//因为v-model只支持表单类元素(输入类元素上)</span><br></code></pre></td></tr></table></figure><h4 id="4-el和data的两种写法"><a href="#4-el和data的两种写法" class="headerlink" title="4. el和data的两种写法"></a>4. <code>el</code>和<code>data</code>的两种写法</h4><h5 id="4-1-el的两种写法："><a href="#4-1-el的两种写法：" class="headerlink" title="4.1 el的两种写法："></a>4.1 <code>el</code>的两种写法：</h5><ol><li><p><code>new Vue()</code>的时候配置<code>el</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> &lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>你好, &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br> &lt;/div&gt;<br><br>&lt;script&gt;<br><span class="hljs-keyword">const</span> v = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br><span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br><span class="hljs-attr">data</span>: &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Shang&#x27;</span><br>&#125;<br>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(v);<br></code></pre></td></tr></table></figure></li><li><p>先创建<code>Vue</code>实例，随后再通过<code>v.$mout(&#39;#root&#39;)</code>指定<code>el</code>的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> v = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br><span class="hljs-attr">data</span>: &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Hai&#x27;</span><br>&#125;<br>&#125;)<br>v.$mount(<span class="hljs-string">&#x27;#root&#x27;</span>)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure></li></ol><h5 id="4-2-data的两种写法"><a href="#4-2-data的两种写法" class="headerlink" title="4.2 data的两种写法"></a>4.2 <code>data</code>的两种写法</h5><ol><li><p>对象式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> &lt;script&gt;<br> <span class="hljs-keyword">const</span> v = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br> <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br> <span class="hljs-attr">data</span>: &#123;<br> <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Hai&#x27;</span><br> &#125;<br> &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>函数式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> v = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br><span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;###&#x27;</span>, <span class="hljs-variable language_">this</span>);<br>    <span class="hljs-comment">//此处的this 是Vue的实例对象</span><br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Shanghai&#x27;</span><br>&#125;<br>&#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>如何选择? 目前两种写法都可以，以后学习到组件以后，<code>data</code>必须用函数式，否则会报错</p></li><li><p>一个重要原则：由<code>Vue</code>管理的函数，一定不要写箭头函数，因为一旦写了箭头函数<code>this</code>就不再是<code>Vue</code>的实例了。</p></li></ol><h4 id="5-MVVM模型"><a href="#5-MVVM模型" class="headerlink" title="5. MVVM模型"></a>5. MVVM模型</h4><ul><li>概念</li></ul><p><code>MVVM</code>模型就是把一堆数据和页面的<code>DOM</code>结构联系起来</p><p><code>m</code>是模型(model),是<code>data</code>中的数据;</p><p><code>v</code>是视图(view), 是模板代码;</p><p><code>vm</code>是视图模型(viewmodel): <code>Vue</code>实例;</p><p><code>data</code>中的所有属性，随后都出现在了<code>vm</code>身上；<code>vm</code>身上的所有属性以及<code>Vue</code>原型上所有属性, 在<code>Vue</code>模板中都可以直接使用;</p><ul><li><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校名称&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学校地址&#123;&#123;address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123;2+2&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>测试一下：&#123;&#123;$options&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#root&#x27;</span>,<br>    <span class="hljs-attr">data</span>: &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>        <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,<br>        <span class="hljs-attr">a</span>:<span class="hljs-number">1</span><br>    &#125;<br>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm)<br></code></pre></td></tr></table></figure></li></ul><p><img src="/images/pasted-6.png" alt="upload successful"></p><h4 id="6-数据代理"><a href="#6-数据代理" class="headerlink" title="6. 数据代理"></a>6. 数据代理</h4><h5 id="6-1-回顾Object-defineProperty"><a href="#6-1-回顾Object-defineProperty" class="headerlink" title="6.1 回顾Object.defineProperty"></a>6.1 回顾<code>Object.defineProperty</code></h5><ol><li><p><code>Object.defineProperty</code>是用来给对象添加新属性或者修改一个对象的属性，并返回该对象。参数依次为<strong>需要添加属性的对象</strong>, <strong>需要定义或修改的属性名</strong>,<strong>属性描述符</strong>。</p></li><li><p>使用<code>Object.defineProperty</code>定义的属性默认是<strong>不可被枚举（遍历）的</strong>。下列代码中通过使用<code>(for...in)</code>和<code>(Object.keys())</code>方法遍历属性时，不会出现新增的<code>age</code>属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//代码1</span><br><span class="hljs-keyword">let</span> number = <span class="hljs-number">18</span><br>    <span class="hljs-keyword">let</span> person = &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>,<br>        <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;nan&#x27;</span><br>    &#125;<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>    <span class="hljs-attr">value</span>:<span class="hljs-number">18</span><br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>数据描述符的可选键值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//enumerable 控制属性是否可枚举的，默认值为false</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>    <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// writable 控制属性是否可以被修改</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>    <span class="hljs-attr">writable</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// configurable 控制属性是否可以被删除</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>    <span class="hljs-attr">configurable</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>除了上面四个基本配置项，还有高级配置项</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//getter  当有人读取person的age属性时，就会触发get函数,返回值就是age的值</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;有人读取了age属性&#x27;</span>)<br>    <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-comment">//以后就可以通过number来更改age的值</span><br>    <span class="hljs-keyword">return</span> number<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//setter 当修改了person的age属性时,set函数会被调用，且会收到修改的具体值</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(person, <span class="hljs-string">&#x27;age&#x27;</span>, &#123;<br>    <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;有人修改了age的属性， 且值是&#x27;</span> + value);<br>    <span class="hljs-comment">//只有把value给number才是真正的修改成功   </span><br>    number = value<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//遍历对象属性，属性数组里不会出现&#x27;age&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(person))<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//遍历属性值，不会有age的属性18</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> person)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(person[k])<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h5 id="6-2-什么是数据代理"><a href="#6-2-什么是数据代理" class="headerlink" title="6.2 什么是数据代理"></a>6.2 什么是数据代理</h5><p>数据代理简而言之就是：通过一个对象代理对另一个对象中属性的操作（读，写）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj = &#123;<span class="hljs-attr">x</span>: <span class="hljs-number">100</span>&#125;<br><span class="hljs-keyword">let</span> obj2 = &#123;<span class="hljs-attr">y</span>: <span class="hljs-number">200</span>&#125;<br><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(obj, <span class="hljs-string">&#x27;x&#x27;</span>, &#123;<br><span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">return</span> obj.<span class="hljs-property">x</span><br>&#125;,<br><span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>)&#123;<br>obj.<span class="hljs-property">x</span> = value<br>&#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h5 id="6-3-Vue中的数据代理"><a href="#6-3-Vue中的数据代理" class="headerlink" title="6.3 Vue中的数据代理"></a>6.3 <code>Vue</code>中的数据代理</h5><ol><li>定义：通过<code>vm</code>对象来代理<code>data</code>对象中属性的操作（读、写）</li><li>数据代理的好处：更加方便的操作<code>data</code>中的数据</li><li>基本原理：<ul><li>通过<code>Object.defineProperty()</code>把<code>data</code>对象中所有属性添加到<code>vm</code>身上</li><li>为每一个添加到<code>vm</code>上的属性都指定一个<code>getter/setter</code></li><li>在getter/setter内部去操作（读、写）data中对应的属性</li></ul></li></ol><p><img src="/images/pasted-7.png" alt="upload successful"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>        学习名称：&#123;&#123;name&#125;&#125;<br>        // &#123;&#123;_data.name&#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>        学习地址：&#123;&#123;address&#125;&#125;<br>        //&#123;&#123;_data.address&#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>    <span class="hljs-attr">data</span>: &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span>,<br>        <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;北京&#x27;</span><br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/images/pasted-8.png" alt="upload successful"></p><h4 id="7-事件处理"><a href="#7-事件处理" class="headerlink" title="7. 事件处理"></a>7. 事件处理</h4><h5 id="7-1-事件的基本使用"><a href="#7-1-事件的基本使用" class="headerlink" title="7.1 事件的基本使用"></a>7.1 事件的基本使用</h5><ol><li>使用<code>v-on:xxx</code>或者<code>@xxx</code>绑定事件，其中<code>xxx</code>是事件名。</li><li>事件的回调需要配置在<code>methods</code>对象中,最终会在<code>vm</code>上。</li><li><code>methods</code>中配置的函数，不要用箭头函数，否则<code>this</code>就不是<code>vm</code>了。</li><li><code>methods</code>中配置的函数，都是被<code>Vue</code>所管理的函数，<code>this</code>的指向是<code>vm</code>或者组件实例对象。</li><li><code>@ckick=&quot;demo&quot;</code>和<code>@click=&quot;demo($event)&quot;</code>效果一致，但后者可以传参。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎你&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息（不传参数）<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo2(66, $event)&quot;</span>&gt;</span>点我提示信息2（传递参数）<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                  <span class="hljs-comment">// 只有放在data里面的内容才会做数据劫持和数据代理</span><br>                <span class="hljs-comment">// 不要把函数方法写在data里，因为这样会变成数据代理</span><br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Puppy&#x27;</span><br>            &#125;,<br>            <span class="hljs-attr">methods</span>: &#123;<br>                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;第一次提示&#x27;</span>)<br>                    <span class="hljs-title function_">alert</span>(event)<br>                &#125;,<br>                <span class="hljs-title function_">showInfo2</span>(<span class="hljs-params">number, a</span>) &#123;<br>                    <span class="hljs-title function_">alert</span>(number)<br>                    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;第二次提示&#x27;</span>)<br>                &#125;<br>            &#125;<br>        &#125;)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><h5 id="7-2-事件修饰符"><a href="#7-2-事件修饰符" class="headerlink" title="7.2 事件修饰符"></a>7.2 事件修饰符</h5><p><code>Vue</code>中的事件修饰符：</p><ol><li><p><code>prevent</code>阻止默认事件（比如<code>a标签</code>的默认跳转）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">// HTML</span><br>&lt;div id=<span class="hljs-string">&quot;root&quot;</span>&gt;<br>     <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点击提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br>    &lt;/div&gt;<br><span class="hljs-comment">//JS</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>    <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-title function_">showInfo</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hi&#x27;</span>)<br>    &#125;<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p><code>stop</code>阻止事件冒泡</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>我是按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><code>once</code>事件只触发一次</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>我是按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><code>capture</code>使用事件的捕获模式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;class1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding: 5px; background: skyblue; &quot;</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span><br>    div1<br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;class2&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding: 5px; background: skyblue; &quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo2&quot;</span>&gt;</span><br>    div2<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> //点击div2之后会先触发showInfo,之后才是showInfo2<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">showInfo</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;盒子1&#x27;</span>)<br>               &#125;,<br>               <span class="hljs-title function_">showInfo2</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;盒子2&#x27;</span>)<br>               &#125;<br>           &#125;<br>       &#125;)<br></code></pre></td></tr></table></figure></li><li><p><code>self</code>只有<code>event.target</code>是当前操作的元素时才触发事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;demo1&quot;</span> @click.<span class="hljs-property">self</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;<br>            <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>        &lt;/div&gt;<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">methods</span>: &#123;<br>                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">e</span>) &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>);<br>                &#125;,<br><br>            &#125;<br>        &#125;)<br><span class="hljs-comment">//这样的执行结果是(冒泡的结果)</span><br><span class="hljs-comment">//&lt;button&gt;点我提示信息&lt;/button&gt;</span><br><span class="hljs-comment">//&lt;button&gt;点我提示信息&lt;/button&gt;</span><br><br><span class="hljs-comment">//加上self之后，只执行了btn里的，所以其实这样也可以阻止冒泡</span><br><span class="hljs-comment">//&lt;button&gt;点我提示信息&lt;/button&gt;</span><br><br></code></pre></td></tr></table></figure></li><li><p><code>passive</code>事件的默认行为立即执行，无需等待事件回调执行完毕（比如<code>wheel</code>事件）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> &lt;ul style=<span class="hljs-string">&quot;height: 200px; background-color: aqua; overflow: auto;&quot;</span> @wheel.<span class="hljs-property">passive</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;<br>            <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 100px; &quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br>            <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 100px; &quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br>            <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 100px; &quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br>            <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 100px; &quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br>        &lt;/ul&gt;<br><span class="hljs-title function_">showInfo</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100000</span>; i++) <br>&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;#&#x27;</span>);<br>&#125;<br>     <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;累坏了&#x27;</span>);<br>     <span class="hljs-comment">// 整个函数执行完之后 wheel才会真的动滚动条</span><br>     <span class="hljs-comment">// 给wheel事件加上passive之后 就会立即执行滚动条 </span><br> &#125;<br><br></code></pre></td></tr></table></figure></li></ol><h5 id="7-3-键盘事件"><a href="#7-3-键盘事件" class="headerlink" title="7.3 键盘事件"></a>7.3 键盘事件</h5><ol><li><code>Vue</code>中常用的按键别名：</li></ol><ul><li><p>回车 <code>enter</code></p></li><li><p>删除<code>delete</code>(捕获删除和退格键)</p></li><li><p>退出<code>esc</code></p></li><li><p>空格<code>space</code></p></li><li><p>换行<code>tab</code>(特殊，必须配合<code>keydown</code>去使用)</p></li><li><p>上<code>up</code></p></li><li><p>下<code>down</code></p></li><li><p>左<code>left</code></p></li><li><p>右<code>right</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;按下回车键提示输入&quot;</span> @<span class="hljs-attr">keyup.delete</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span><br>  <br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><ol start="2"><li><p><code>Vue</code>未提供别名的按键，可以使用按键原始的<code>key</code>值去绑定，但要注意转为<code>keytab-case</code>(短横线命名)</p></li><li><p>系统修饰键(用法特殊):ctrl, alt, shift, meta</p><ul><li>配合<code>keyup</code>使用：按下键修饰的同时，再按下其他键，随后释放其他键，事件才被触发。</li><li>配合<code>keydown</code>使用：正常触发事件。</li></ul></li><li><p><code>Vue.config.keyCodes.</code>自定义健名 = 键码， 可以去定制按键别名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;按下回车键提示输入&quot;</span> @<span class="hljs-attr">keyup.huichen</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span><br>   <br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.<span class="hljs-property">huichen</span> = <span class="hljs-number">13</span><br>        <span class="hljs-comment">//输入huichen后按回车 打印的是13</span><br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">methods</span>: &#123;<br>                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">e</span>) &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">keyCode</span>);<br><br>                &#125;<br>            &#125;<br>        &#125;)<br></code></pre></td></tr></table></figure></li></ol><h4 id="8-计算属性"><a href="#8-计算属性" class="headerlink" title="8. 计算属性"></a>8. 计算属性</h4><h5 id="8-1-姓名案例"><a href="#8-1-姓名案例" class="headerlink" title="8.1 姓名案例"></a>8.1 姓名案例</h5><ol><li><p>插值语法实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        姓：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>// 从0开始截取三位 不包括第三位<br>        姓名：<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;firstName.slice(0,3)&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">firstName</span>: <span class="hljs-string">&#x27;张&#x27;</span>,<br>               <span class="hljs-attr">lastName</span>: <span class="hljs-string">&#x27;三&#x27;</span><br>           &#125;<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li><p><code>methods</code>实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       姓：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>       名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 展示的是函数调用返回的结果，所以（）一定要加上 --&gt;</span><br>       姓名：<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-comment">//只要data中的值发生改变Vue一定会重新解析模板</span><br>               <span class="hljs-attr">firstName</span>: <span class="hljs-string">&#x27;张&#x27;</span>,<br>               <span class="hljs-attr">lastName</span>: <span class="hljs-string">&#x27;三&#x27;</span><br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">fullName</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&#x27;-&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span><br>               &#125;<br>           &#125;<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure></li></ol><h5 id="8-2-姓名案例-计算属性实现"><a href="#8-2-姓名案例-计算属性实现" class="headerlink" title="8.2 姓名案例__计算属性实现"></a>8.2 姓名案例__计算属性实现</h5><ul><li>定义：要用的属性不存在，要通过已有属性计算得来。</li><li>原理：底层借助了Object.defineproperty方法提供的<code>getter</code>和<code>setter</code>.</li><li><code>get函数什么时候执行</code>：<ol><li>初次读取时会执行一次</li><li>当依赖的数据发生改变时会被再次调用</li></ol></li><li>优势：与<code>methods</code>实现相比，内部有缓存机制（复用），效率更高，调试方便</li><li>备注：<ol><li>计算属性最终会出现在<code>vm</code>上，直接读取即可使用。</li><li>如果计算属性要被修改，那必须写<code>set</code>函数去响应修改，且<code>set</code>中要引起计算时依赖的数据发生改变。</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        姓：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>//fullName调用一次后就缓存了，而methods要多次调用     <br>        姓名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>       <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">firstName</span>: <span class="hljs-string">&#x27;张&#x27;</span>,<br>               <span class="hljs-attr">lastName</span>: <span class="hljs-string">&#x27;三&#x27;</span><br>           &#125;,<br>           <span class="hljs-attr">computed</span>: &#123;<br>               <span class="hljs-comment">//fullName这里不能当成函数看待</span><br>               <span class="hljs-attr">fullName</span>: &#123;<br>                   <span class="hljs-comment">//初次读取fullName时，get函数会被调用，且返回值就作为fullName的值</span><br>                   <span class="hljs-comment">// 当fullName所依赖的数据（这里是firstName或lastName)发生改变时，get函数会被调用(比如往input框里输入文字)</span><br>                   <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>                       <span class="hljs-comment">// 这个时候get的指向Vue已经调成了vm</span><br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;get被调用了&#x27;</span>);<br>                       <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&#x27;-&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span><br>                   &#125;,<br>                   <span class="hljs-comment">// 当fullName被修改的时候，set函数会被调用</span><br>   <br>                   <span class="hljs-title function_">set</span>(<span class="hljs-params">val</span>) &#123;<br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;set函数被调用了&#x27;</span>);<br>                       <span class="hljs-comment">// 把名字字符串变成数组</span><br>                       <span class="hljs-keyword">const</span> arr = val.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;-&#x27;</span>)<br>                       <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> = arr[<span class="hljs-number">0</span>]<br>                       <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span> = arr[<span class="hljs-number">1</span>]<br>                   &#125;<br>               &#125;<br>           &#125;<br>       &#125;)<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><p>计算属性简写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">computed</span>: &#123;<br>               <span class="hljs-title function_">fullName</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&#x27;-&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span><br>               &#125;<br>           &#125;<br></code></pre></td></tr></table></figure></li></ul></li></ol><h4 id="9-监视属性"><a href="#9-监视属性" class="headerlink" title="9. 监视属性"></a>9. 监视属性</h4><h5 id="9-1-监视属性watch"><a href="#9-1-监视属性watch" class="headerlink" title="9.1 监视属性watch:"></a>9.1 监视属性<code>watch</code>:</h5><ol><li>当被监视的属性变化时，回调函数自动调用进行相关操作。</li><li>监视的属性必须存在，才能进行监视。</li><li>监视的两种写法：<ul><li><code>new Vue</code>时传入<code>watch配置</code></li><li>通过<code>vm.$watch</code>监视</li></ul></li></ol><h5 id="9-2-天气案例"><a href="#9-2-天气案例" class="headerlink" title="9.2 天气案例"></a>9.2 天气案例</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>     <span class="hljs-comment">&lt;!--绑定事件的时候 @xxx=&#x27;yyy&#x27;, yyy可以写一些简单的语句 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span><br>            &#125;,<br>            <span class="hljs-attr">computed</span>: &#123;<br>                <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span><br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">methods</span>: &#123;<br>                <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span><br>                &#125;<br>            &#125;,<br>        &#125;)<br></code></pre></td></tr></table></figure><p>监视属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">watch</span>: &#123;<br><span class="hljs-attr">isHot</span>: &#123;<br><span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//初始化时让handler调用一下</span><br><span class="hljs-comment">// 什么时候调用handler？当isHot发生改变时</span><br><span class="hljs-title function_">handler</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal);<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>另一种写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">vm.$watch(<span class="hljs-string">&#x27;isHot&#x27;</span>, &#123;<br>            <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-title function_">handler</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>);<br>            &#125;<br>        &#125;)<br></code></pre></td></tr></table></figure><p>计算属性<code>info</code>也可以被监视</p><p>监视属性-简写（只有当配置项只有handler的时候才可以简写）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">watch：&#123;<br><span class="hljs-title function_">isHot</span>(<span class="hljs-params">newVal, oldVal</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">vm.$watch(<span class="hljs-string">&#x27;isHot&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">newVal, oldVal</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal)<br>&#125;)<br><span class="hljs-comment">//不要写成箭头函数</span><br></code></pre></td></tr></table></figure><h5 id="9-3-深度监视"><a href="#9-3-深度监视" class="headerlink" title="9.3 深度监视"></a>9.3 深度监视</h5><ol><li>Vue中的watch默认不监测对象内部值的改变（一层）</li><li>配置deep:true 可以监测对象内部值改变（多层）</li><li>Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以</li><li>使用watch时根据数据的具体结构，决定是否采用深度监测</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>a的值是:&#123;&#123;numbers.a&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>b的值是:&#123;&#123;numbers.b&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>彻底替换掉numbers<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span>,<br>               <span class="hljs-attr">numbers</span>: &#123;<br>                   <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,<br>                   <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>,<br>                   <span class="hljs-attr">c</span>: <span class="hljs-number">1</span><br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">computed</span>: &#123;<br>               <span class="hljs-comment">// 计算属性的简写</span><br>               <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&#x27;炎热&#x27;</span> : <span class="hljs-string">&#x27;凉爽&#x27;</span><br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">methods</span>: &#123;<br>               <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;<br>                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span><br>               &#125;<br>           &#125;,<br>           <span class="hljs-attr">watch</span>: &#123;<br>               <span class="hljs-attr">isHot</span>: &#123;<br>                   <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//初始化时让handler调用一下</span><br>                   <span class="hljs-comment">// 什么时候调用handler？当isHot发生改变时</span><br>                   <span class="hljs-title function_">handler</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;<br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isHot被修改了&#x27;</span>, newVal, oldVal);<br>                   &#125;<br>               &#125;,<br>               <span class="hljs-comment">// 监视多级结构中某个属性的变化</span><br>               <span class="hljs-string">&#x27;numbers.a&#x27;</span>: &#123;<br>                   <span class="hljs-title function_">handler</span>(<span class="hljs-params"></span>) &#123;<br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;a变化了&#x27;</span>);<br>                   &#125;<br>               &#125;,<br>               <span class="hljs-attr">numbers</span>: &#123;<br>                   <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span>,<br>                   <span class="hljs-title function_">handler</span>(<span class="hljs-params"></span>) &#123;<br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;numbers变化了&#x27;</span>);<br>                   &#125;<br>               &#125;<br>           &#125;<br>       &#125;)<br></code></pre></td></tr></table></figure><h5 id="9-4-姓名案例-watch实现"><a href="#9-4-姓名案例-watch实现" class="headerlink" title="9.4 姓名案例_watch实现_"></a>9.4 姓名案例_<code>watch</code>实现_</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        姓：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>           <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>           <span class="hljs-attr">data</span>: &#123;<br>               <span class="hljs-attr">firstName</span>: <span class="hljs-string">&#x27;张&#x27;</span>,<br>               <span class="hljs-attr">lastName</span>: <span class="hljs-string">&#x27;三&#x27;</span>,<br>               <span class="hljs-attr">fullName</span>: <span class="hljs-string">&#x27;张-三&#x27;</span><br>           &#125;,<br>           <span class="hljs-attr">watch</span>: &#123;<br>               <span class="hljs-title function_">firstName</span>(<span class="hljs-params">val</span>) &#123;<br>                   <span class="hljs-comment">//watch能开启异步任务但是computed不能</span><br>                   <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-comment">//箭头函数没有自己的this,所以往外找，找到vm                     console.log(this);</span><br>                       <span class="hljs-variable language_">this</span>.<span class="hljs-property">fullName</span> = val + <span class="hljs-string">&#x27;-&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span><br>                   &#125;，<span class="hljs-number">1000</span>)<br>               &#125;,<br>               <span class="hljs-title function_">lastName</span>(<span class="hljs-params">val</span>) &#123;<br>                   <span class="hljs-variable language_">this</span>.<span class="hljs-property">fullName</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&#x27;-&#x27;</span> + val<br>               &#125;<br>           &#125;<br>       &#125;)<br><br></code></pre></td></tr></table></figure><h5 id="9-5-计算属性与监视属性的区别"><a href="#9-5-计算属性与监视属性的区别" class="headerlink" title="9.5 计算属性与监视属性的区别"></a>9.5 计算属性与监视属性的区别</h5><ol><li><code>computed</code>能完成的功能，<code>watch</code>都能完成。</li><li><code>watch</code>能完成的功能，<code>computed</code>不一定能完成，比如<code>watch</code>可以进行异步操作。</li><li>原则：<ul><li>所有被Vue管理的函数，最好写成普通函数，这样this的指向才是vm或者组件实例对象。</li></ul></li></ol><h4 id="10-绑定样式"><a href="#10-绑定样式" class="headerlink" title="10. 绑定样式"></a>10. 绑定样式</h4><h5 id="10-1-class样式"><a href="#10-1-class样式" class="headerlink" title="10.1 class样式"></a>10.1 class样式</h5><ul><li>写法:<code>class=&#39;xxx&#39;</code>, xxx可以是字符串，对象，数组。<ul><li>字符串写法适用于：类名不确定，要动态获取。</li><li>对象写法适用于：要绑定的样式个数不确定，名字也不确定。</li><li>对象写法适用于：要绑定的样式个数不确定，但名字确定，不确定用不用。</li></ul></li></ul><h5 id="10-2-style样式"><a href="#10-2-style样式" class="headerlink" title="10.2 style样式"></a>10.2 style样式</h5><ul><li><code>:style=&quot;&#123;fontSize:xxx&#125;&quot;</code>其中xxx是动态值</li><li><code>:style=&quot;[a,b]&quot;</code>其中a,b是样式对象</li></ul><h5 id="10-3-代码实现"><a href="#10-3-代码实现" class="headerlink" title="10.3 代码实现"></a>10.3 代码实现</h5><ul><li><p>class样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;mood&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>       <span class="hljs-comment">&lt;!--对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用  --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;shangguige&#x27;</span>,<br>                <span class="hljs-attr">mood</span>: <span class="hljs-string">&#x27;normal&#x27;</span>,<br>                <span class="hljs-attr">classArr</span>: [<span class="hljs-string">&#x27;atguigu1&#x27;</span>, <span class="hljs-string">&#x27;atguigu2&#x27;</span>, <span class="hljs-string">&#x27;atguigu3&#x27;</span>],<br>                <span class="hljs-comment">// 可以通过vm.arr.splice()或者push()来操作数组</span><br>                <span class="hljs-attr">classObj</span>: &#123;<br>                    <span class="hljs-attr">atguigu1</span>: <span class="hljs-literal">false</span>,<br>                    <span class="hljs-attr">atguigu2</span>: <span class="hljs-literal">false</span>,<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">methods</span>: &#123;<br>                <span class="hljs-title function_">changeMood</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&#x27;happy&#x27;</span>, <span class="hljs-string">&#x27;sad&#x27;</span>, <span class="hljs-string">&#x27;normal&#x27;</span>]<br>                    <span class="hljs-keyword">const</span> index = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">3</span>)<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mood</span> = arr[index]<br>                &#125;<br>            &#125;,<br>        &#125;)<br></code></pre></td></tr></table></figure></li><li><p>style样式</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleObj&quot;</span>&gt;</span> &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 绑定style样式--数组写法  --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">styleObj</span>: &#123;<br>    <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,<br>        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span><br>&#125;,<br>    <span class="hljs-attr">styleArr</span>: [&#123;<br>        <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,<br>        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;blue&#x27;</span><br>    &#125;, &#123;<br>        <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;gray&#x27;</span><br>    &#125;]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>12- Key Sequence Detection</title>
    <link href="/2022/09/13/2-Key-Sequence-Detection/"/>
    <url>/2022/09/13/2-Key-Sequence-Detection/</url>
    
    <content type="html"><![CDATA[<h3 id="12-Key-Sequence-Detection"><a href="#12-Key-Sequence-Detection" class="headerlink" title="12  **Key Sequence Detection **"></a>12  **Key Sequence Detection **</h3><h4 id="1-实现效果"><a href="#1-实现效果" class="headerlink" title="1. 实现效果"></a>1. 实现效果</h4><p>通过<code>script</code>引入提供的<code>Cornify.com</code>加载一个JS文件，调用其中的<code>cornify_add()</code>方法，在页面中追加<code>p</code>标签，并在<code>DOM</code>中插入图片。</p><p>实现效果的前提是要先在页面输入完整的”密码”。</p><h4 id="2-思路"><a href="#2-思路" class="headerlink" title="2. 思路"></a>2. 思路</h4><ol><li>先输入特定的字符串(密码)</li><li>监听并且获取输入的字符串</li><li>处理输入，在符合条件时，调用<code>cornify</code></li></ol><h4 id="3-代码"><a href="#3-代码" class="headerlink" title="3. 代码"></a>3. 代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1. 声明一个空数组，用于存放输入的字符</span><br><span class="hljs-keyword">const</span> pressed = [];<br><span class="hljs-comment">// 2. 声明暗号（密码）</span><br><span class="hljs-keyword">const</span> secretCode = <span class="hljs-string">&#x27;wesbos&#x27;</span>;<br><span class="hljs-comment">//3. 添加键盘事件（这个事件是针对整个页面的）</span><br><span class="hljs-comment">//注意 keydown是要一直按着键盘才会生效，弹起后就不生效了</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;keyup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span>&#123;<br>   <span class="hljs-comment">// 打印输入的键盘的值</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">key</span>)<br>    <span class="hljs-comment">//4. 把按下的值存放到空数组中</span><br>    pressed.<span class="hljs-title function_">push</span>(e.<span class="hljs-property">key</span>)<br>    <span class="hljs-comment">//当输入的密码的长度大于已经设置的密码的长度，从数组首部删除一个</span><br>    <span class="hljs-keyword">while</span>(pressed.<span class="hljs-property">length</span>&gt;secretCode.<span class="hljs-property">length</span>)&#123;<br>        pressed.<span class="hljs-title function_">shift</span>();<br>    &#125;<br>    <span class="hljs-comment">//把数组变成字符串 如果输入的密码和设置的密码相同 调用cornify_add()方法</span><br>    <span class="hljs-keyword">if</span>(pressed.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>).<span class="hljs-title function_">toLowerCase</span>() === secretCode)<br>        <span class="hljs-title function_">cornify_add</span>();<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>作者的代码和上面有些不同，作者是通过<code>splice()</code>方法来进行数组删除的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> pressed = [];<br><span class="hljs-keyword">const</span> secretCode = <span class="hljs-string">&#x27;wesbos&#x27;</span>;<br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;keyup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span>&#123;<br>press.<span class="hljs-title function_">push</span>(e.<span class="hljs-property">key</span>)<br>press.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, pressed.<span class="hljs-property">length</span> - secretCode.<span class="hljs-property">length</span>)<br><span class="hljs-comment">//这段代码保证了输入的值的长度和设定的值的长度相等</span><br><span class="hljs-keyword">if</span>(pressed.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>).<span class="hljs-title function_">includes</span>(secretCode))&#123;<br>    <span class="hljs-title function_">cornify_add</span>()<br><span class="hljs-comment">//有上面代码作为前提，用includes()可以保证pressed和secretCode完全相等</span><br>&#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p> <strong><code>includes()</code></strong> 方法用于判断一个字符串是否包含在另一个字符串中，根据情况返回 true 或 false。 </p>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>11- Video Player</title>
    <link href="/2022/09/08/1-Video-Player/"/>
    <url>/2022/09/08/1-Video-Player/</url>
    
    <content type="html"><![CDATA[<h3 id="Video-Player"><a href="#Video-Player" class="headerlink" title="Video Player"></a>Video Player</h3><p><img src="/images/pasted-2.png" alt="upload successful"></p><h4 id="1-功能介绍"><a href="#1-功能介绍" class="headerlink" title="1.功能介绍"></a>1.功能介绍</h4><p>这个案例和<code>video</code>播放控制面板相关，涉及到以下功能：</p><ul><li>点击视频画面或者按钮实现切换播放，同时按钮图形做相应的变化</li><li>点击或拖动进度条选择播放进度</li><li>点击按钮实现视频快进或者后退</li><li>滑动调节音量和播放速度</li></ul><h4 id="2-重点知识点"><a href="#2-重点知识点" class="headerlink" title="2. 重点知识点"></a>2. 重点知识点</h4><ul><li><p><code>video</code>的相关属性，方法和事件（参考MDN）</p><ul><li>paused</li><li>play()</li><li>pause()</li><li>video.paused 只读属性 告诉视频是否正在暂停（布尔型）</li><li>currentTime 会以秒为单位返回当前媒体元素的播放时间。设置这个属性会改变媒体元素当前播放位置。 </li><li>timeupdate  <code>currentTime</code>属性指定的时间发生变化</li><li>扩展： auotplay（布尔型）controls（浏览器会自动提供一个控制面板）loop（布尔型- 循环播放） muted(布尔型-音频初识化为静音) poster（海报帧图片URL， 用于在视频处于下载中的状态时显示 ）</li></ul></li></ul><h4 id="3-代码"><a href="#3-代码" class="headerlink" title="3. 代码"></a>3. 代码</h4><h5 id="1-HTML"><a href="#1-HTML" class="headerlink" title="1. HTML"></a>1. HTML</h5><p>  <code>video</code>标签中放入视频， <code>palyer_controls</code>是播放控制面板</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;player&quot;</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./652333414.mp4&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_video viewer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_controls&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress_filled&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_button toggle&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Toggle Play&quot;</span>&gt;</span>►<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_slider&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;volume&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.05&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_slider&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;playbackRate&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0.5&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.1&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 后退10秒  前进25秒 --&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;-10&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_button&quot;</span>&gt;</span>« 10s<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;25&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_button&quot;</span>&gt;</span>25s »<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h5 id="2-JS"><a href="#2-JS" class="headerlink" title="2. JS"></a>2. JS</h5><ul><li>获取元素</li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 获取元素</span><br><span class="hljs-keyword">const</span> player = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.player&#x27;</span>)<br><span class="hljs-keyword">const</span> video = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.viewer&#x27;</span>)<br><span class="hljs-comment">// 获取进度条框</span><br><span class="hljs-keyword">const</span> progress = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.progress&#x27;</span>)<br><span class="hljs-comment">// 进度条bar</span><br><span class="hljs-keyword">const</span> progressBar = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.progress_filled&#x27;</span>)<br><span class="hljs-comment">// 切换按钮</span><br><span class="hljs-keyword">const</span> toggle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.toggle&#x27;</span>)<br><span class="hljs-comment">// 快进按钮</span><br><span class="hljs-keyword">const</span> skipButtons = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;[data-skip]&#x27;</span>)<br><span class="hljs-comment">// 范围条</span><br><span class="hljs-keyword">const</span> ranges = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.player_slider&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>点击后实现播放/暂停的切换<ol><li>判断视频是否在播放<code>video.paused</code></li><li>播放视频 <code>play()</code>方法</li><li>暂停播放<code>pause()</code>方法</li></ol></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">togglePlay</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">if</span>(video.<span class="hljs-property">paused</span>)&#123;<br>video.<span class="hljs-title function_">play</span>()<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>video.<span class="hljs-title function_">pause</span>()<br>&#125;<br>&#125;<br><span class="hljs-comment">// 简写- 三元操作符</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">togglePlay</span>(<span class="hljs-params"></span>)&#123;<br>    video.<span class="hljs-property">paused</span>? <span class="hljs-title function_">play</span>():<span class="hljs-title function_">pasue</span>()<br>&#125;<br><span class="hljs-comment">//简写- 字符串执行属性方法</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">togglePlay</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">const</span> method = video.<span class="hljs-property">paused</span>? <span class="hljs-string">&#x27;play&#x27;</span>:<span class="hljs-string">&#x27;pasue&#x27;</span><br>    video[method]();<br>&#125;<br>video.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, togglePlay)<br>toggle.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, togglePlay)<br></code></pre></td></tr></table></figure><ul><li><p>播放/暂停图标的切换</p><p>通过视频本身的播放状态来判断该显示什么图标，这样最不容易出问题</p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">updateButton</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">const</span> icon = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paused</span> ? <span class="hljs-string">&#x27;►&#x27;</span>:<span class="hljs-string">&#x27;❚ ❚&#x27;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(icon);<br>    toggle.<span class="hljs-property">textContent</span> = icon;<br>&#125;<br><span class="hljs-comment">// this是方法的调用者video</span><br>video.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;play&#x27;</span>, updateButton)；<br>video.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;pause&#x27;</span>, updateButton)；<br></code></pre></td></tr></table></figure><ul><li><p>进度条的变化和操作</p><ol><li><p>进度条随着视频播放进度的变化而变化</p><p>通过改变<code>progress_filled</code>占父元素<code>progress</code>的宽度的百分比实现</p><p><code>progress_filled</code>元素是<code>flex</code>定位的元素（初始化设置的是占整个<code>progress</code>的<code>flex-basis:50%</code></p></li></ol></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//根据当前播放时间调节进度条</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleProgress</span>(<span class="hljs-params"></span>)&#123;<br> <span class="hljs-comment">// 现在的时间/视频整个的时间 * 100</span><br><span class="hljs-keyword">const</span> percent = (video.<span class="hljs-property">currentTime</span>/ video.<span class="hljs-property">duration</span>)*<span class="hljs-number">100</span>;<br>    progressBar.<span class="hljs-property">style</span>.<span class="hljs-property">flexBasis</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;percent&#125;</span>%`</span><br><br>&#125;<br></code></pre></td></tr></table></figure><p>  只要运行这个函数就可以实现这个功能，但是如何能做到自动执行这个函数呢？用<code>timeupdate</code>事件，这个事件会在媒体文件的<code>currentTime</code>属性发生改变时触发, 所以给<code>video</code>绑定该事件即可：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">video.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;timeupdate&#x27;</span>, handleProgress)<br></code></pre></td></tr></table></figure><p>  ​                    2. 手动<code>点击</code>进度条来实现进度条的变化</p><p>  ​                    通过事件对象<code>offsetX</code> 来得到鼠标点击的位置（<code>offsetX</code>表示鼠标店家位置相对于该元素的水平偏移）,得到偏移位置后计算该位置的百分比即可</p><p>  ​                        <code>offsetWidth</code> 是一个<strong>只读</strong>属性，返回一个元素的布局宽度。 </p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 根据点击位置设置播放时间</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">scrub</span>(<span class="hljs-params">e</span>)&#123;<br>   <span class="hljs-keyword">const</span> scrubTime = (e.<span class="hljs-property">setoffX</span> / progress.<span class="hljs-property">offsetWidth</span>) * vide.<span class="hljs-property">duration</span>;<br>    video.<span class="hljs-property">currentTime</span> = scrubTime;<br>&#125;<br>progress.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, scrub)<br></code></pre></td></tr></table></figure><pre><code class="hljs">3.手动`拖动`进度条来实现变化   首先要设置一个标志来判断当前是否是出于拖动状态，然后通过`mousedown` `mouseup`来更新标志的状态</code></pre>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> mousedown = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 鼠标在progress上移动时更新进度条</span><br>progress.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span>&#123;<br>    <span class="hljs-comment">//若当前出于拖拽状态则更新进度条</span><br>    <span class="hljs-keyword">if</span>(mousedown)&#123;<br>        <span class="hljs-title function_">scrub</span>(e)<br>    &#125;  <br>&#125;)<br><span class="hljs-comment">//鼠标按下改变标志</span><br>progress.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">()=&gt;</span> mousedown=<span class="hljs-literal">true</span>)<br><span class="hljs-comment">//鼠标抬起 恢复标志</span><br>progress.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">()=&gt;</span> mousedown = <span class="hljs-literal">false</span>)<br></code></pre></td></tr></table></figure><p>   这样就实现了拖拽进度条时改变播放进度的功能，实际使用的时候会发现拖拽和视频的更新并不是实时的，会有一定延迟，这是因为 <code>mousemove</code> 事件触发的频率非常高，视频更新的速度跟不上。 </p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//利用逻辑与&amp;&amp;的短路特性来实现代码简写</span><br>progress.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> mousedown &amp;&amp; <span class="hljs-title function_">scrub</span>(e))<br><span class="hljs-comment">//只有当`mousedown`为true时才会执行scrub(e)；若第一项不为真，第二项不会执行</span><br></code></pre></td></tr></table></figure><ul><li><p>快进/快退</p><p>给快进/快退按钮添加了自定义的<code>data-skip</code>属性，值即为快进/快退的秒数。</p><p>通过设置<code>currentTime</code>来设置视频当前的时间，所以只要修改这个属性即可。</p></li></ul>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;-10&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_button&quot;</span>&gt;</span>« 10s<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;25&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_button&quot;</span>&gt;</span>25s »<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">//快进或者后退功能</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">skip</span>(<span class="hljs-params"></span>)&#123;<br>    video.<span class="hljs-property">currentTime</span> +=<span class="hljs-built_in">parseFloat</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">dataset</span>.<span class="hljs-property">skip</span>)<br>&#125;<br><span class="hljs-comment">//获取到的skipButtons元素是一个数组，使用forEach()给每个元素都绑定事件</span><br>skipButtons.<span class="hljs-title function_">for</span>(<span class="hljs-function"><span class="hljs-params">button</span> =&gt;</span> button.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, skip))<br></code></pre></td></tr></table></figure><p>  <code>data-**</code>自定义属性需要通过<code>.dataset.**</code>来访问， 因为获取到的是字符串所以要用<code>parseFloat()</code>转换成数值型</p><ul><li><p>音量/播放速度</p><p>通过对滑动条的控制来控制音量和播放速度。两个滑动条是<code>range</code>类型的<code>input</code>, <code>min</code> <code>max</code> <code>step</code> <code>value</code>属性分别设置了最小值，最大值，步值。<code>name</code>属性的命名是为了便于后面的操作，叫什么其实都可以,因为在video对象中有<code>volume</code>和<code>playbackRate</code>这两个属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_slider&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;volume&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.05&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player_slider&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;playbackRate&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0.5&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.1&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>通过<code>input</code>的<code>change</code>事件，通过设置<code>value</code>可以来改变速度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleRangUpdate</span>(<span class="hljs-params"></span>)&#123;<br>video[<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>] = <span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span><br>&#125;<br><span class="hljs-comment">// 给两个ranges滑动条绑定事件</span><br>ranges.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">range</span> =&gt;</span> range.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, handleRangUpdate))<br></code></pre></td></tr></table></figure><p> <code>change</code> 事件在控件失去焦点<code>blur</code>前都不会触发 ， 只有松开鼠标时才会生效。知道这一点很重要。解决方案：</p><pre><code class="hljs"> 1. 把`change`事件改成`input`事件 2. 在上面绑定`change`的基础上，在给`ranges`添加`mousemove`事件</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ranges.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">range</span> =&gt;</span> range.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mousemove&#x27;</span>, handleRangeUpdate))<br></code></pre></td></tr></table></figure><p>这个效果只有在鼠标滑动的时候才会生效。</p></li></ul><h5 id="3-CSS"><a href="#3-CSS" class="headerlink" title="3. CSS"></a>3. CSS</h5>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>&#125;<br><br>*,<br>*<span class="hljs-selector-pseudo">:before</span>,<br>*<span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: inherit;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#7a419b</span>;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-comment">/* 渐变色 */</span><br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">135deg</span>, <span class="hljs-number">#7c1599</span> <span class="hljs-number">0%</span>, <span class="hljs-number">#921099</span> <span class="hljs-number">48%</span>, <span class="hljs-number">#7e4ae8</span> <span class="hljs-number">100%</span>);<br>  <span class="hljs-attribute">background-size</span>: cover;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br><span class="hljs-selector-class">.player</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">750px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">5px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><span class="hljs-selector-class">.player</span><span class="hljs-selector-pseudo">:fullscreen</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: none;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><span class="hljs-selector-class">.player</span>:-webkit-full-screen &#123;<br>  <span class="hljs-attribute">max-width</span>: none;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><span class="hljs-comment">/* 和外面的大盒子保持一致 */</span><br><span class="hljs-selector-class">.player_video</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><span class="hljs-selector-class">.player_button</span> &#123;<br>  <span class="hljs-attribute">background</span>: none;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">outline</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player_button</span><span class="hljs-selector-pseudo">:focus</span> &#123;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ffc600</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player_slider</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><span class="hljs-selector-class">.player_controls</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">100%</span>) <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">5px</span>);<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.3s</span>;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.1</span>);<br>&#125;<br><span class="hljs-comment">/* 鼠标经过播放器时 播放按钮升起来 */</span><br><span class="hljs-selector-class">.player</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.player_controls</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-selector-class">.player</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.progress</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">15px</span>;<br>&#125;<br><span class="hljs-selector-class">.player_controls</span> &gt; * &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-selector-class">.progress</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">10</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-basis</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">transition</span>: height <span class="hljs-number">0.3s</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.5</span>);<br>  <span class="hljs-attribute">cursor</span>: ew-resize;<br>&#125;<br><span class="hljs-selector-class">.progress_filled</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">flex-basis</span>: <span class="hljs-number">50%</span>;<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;range&quot;</span>]</span> &#123;<br>  -webkit-appearance: none;<br>  <span class="hljs-attribute">background</span>: transparent;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span>;<br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;range&quot;</span>]</span><span class="hljs-selector-pseudo">:focus</span> &#123;<br>  <span class="hljs-attribute">outline</span>: none;<br>&#125;<br><span class="hljs-comment">/* 要和thumb搭配使用 */</span><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;range&quot;</span>]</span>::-webkit-slider-runnable-track &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">8.4px</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.8</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">1.3px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0.2px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-comment">/* range 的滑块的具体样式，该伪类只在内核为 webkit/blink 的浏览器中有效 */</span><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;range&quot;</span>]</span>::-webkit-slider-thumb &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  -webkit-apprearance: none;<br>  <span class="hljs-comment">/* 清除默认样式 */</span><br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">3.5px</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.2</span>);<br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;range&quot;</span>]</span><span class="hljs-selector-pseudo">:focus</span>::-webkit-slider-runnable-track &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#bada55</span>;<br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;range&quot;</span>]</span>::-moz-range-track &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">8.4px</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">1.3px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0.2px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>10- Hold Shift and Check Checboxes</title>
    <link href="/2022/09/05/10-Hold-Shift-and-Check-Checboxes/"/>
    <url>/2022/09/05/10-Hold-Shift-and-Check-Checboxes/</url>
    
    <content type="html"><![CDATA[<h3 id="10-Hold-Shift-and-Check-Checkboxes"><a href="#10-Hold-Shift-and-Check-Checkboxes" class="headerlink" title="10 Hold Shift and Check Checkboxes"></a>10 Hold Shift and Check Checkboxes</h3><p> 首先将获取到的 组转化为数组，针对每次操作，获取 A 和 B，利用 <code>indexOf()</code> 来获得 A 和 B 在数组中的索引值，由此即可确定范围，并能通过 <code>slice()</code> 来直接截取 A-B 的所有 DOM 元素，并进行状态改变的操作，而变量 <code>onOff</code> 表示 A-B 范围内的状态，<code>true</code> 表示选中，<code>false</code> 表示取消选中。 </p><h4 id="1-CSS部分"><a href="#1-CSS部分" class="headerlink" title="1. CSS部分"></a>1. CSS部分</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br><span class="hljs-selector-tag">html</span>,<br><span class="hljs-selector-tag">body</span> &#123;<br>    <span class="hljs-attribute">font-family</span>: sans-serif;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>&#125;<br><br><span class="hljs-selector-class">.inbox</span> &#123;<br>    <span class="hljs-attribute">max-width</span>: <span class="hljs-number">400px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>    <span class="hljs-attribute">background</span>: white;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.item</span> &#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#F1F1F1</span>;<br><br>&#125;<br><br><span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;<br>    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#D1E2FF</span>;<br>    <span class="hljs-attribute">transition</span>: background <span class="hljs-number">0.2s</span>;<br>&#125;<br><br><span class="hljs-comment">/* 属性选择器的写法 */</span><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-comment">/* 选中checkbox之后 p标签的内容加上中横线 */</span><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span>+<span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#f9f9f9</span>;<br>    <span class="hljs-attribute">text-decoration</span>: line-through;<br>&#125;<br><br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">0</span>;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h4 id="2-HTML部分"><a href="#2-HTML部分" class="headerlink" title="2. HTML部分"></a>2. HTML部分</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;inbox&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>This is an inbox layout.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Check one item<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hold down your Shift key<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Check a lower item<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Everything in between should also be set to checked<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Try do it without any libraries<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Just regular JavaScript<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Good Luck!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Don&#x27;t forget to tweet your result!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-JS部分"><a href="#3-JS部分" class="headerlink" title="3. JS部分"></a>3. JS部分</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br> <span class="hljs-comment">// 1. 获取所有的CheckBox</span><br><span class="hljs-keyword">const</span> checkboxes =<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.inbox input[type=&quot;checkbox&quot;]&#x27;</span>)<br><span class="hljs-comment">// 转换Nodelist为数组</span><br><span class="hljs-keyword">const</span> boxArr = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(checkboxes)<br><span class="hljs-keyword">let</span> lastChecked<br><span class="hljs-keyword">let</span> onOff = <span class="hljs-literal">false</span><br><br><span class="hljs-comment">// 2. 遍历所有的checkbox, 当触发了点击事件后调用函数</span><br>checkboxes.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">checkbox</span> =&gt;</span> checkbox.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, handleCheck))<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleCheck</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">if</span> (!lastChecked) lastChecked = <span class="hljs-variable language_">this</span><br><span class="hljs-comment">//确定选中 or 取消选中    </span><br>    onOff = lastChecked.<span class="hljs-property">checked</span> ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span><br>    <span class="hljs-keyword">if</span> (e.<span class="hljs-property">shiftKey</span>) &#123;<br><br>        <span class="hljs-keyword">let</span> start = boxArr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>)<br>        <span class="hljs-keyword">let</span> end = boxArr.<span class="hljs-title function_">indexOf</span>(lastChecked)<br>        <span class="hljs-comment">// 截取应该选中的范围 改成选中状态</span><br>        boxArr.<span class="hljs-title function_">slice</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(start, end), <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(start, end) + <span class="hljs-number">1</span>)<br>            .<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">input</span> =&gt;</span> input.<span class="hljs-property">checked</span> = onOff)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(start + <span class="hljs-string">&#x27;+&#x27;</span> + end);<br>    &#125;<br><br>    lastChecked = <span class="hljs-variable language_">this</span><br><br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>09-Console</title>
    <link href="/2022/09/04/9-Console/"/>
    <url>/2022/09/04/9-Console/</url>
    
    <content type="html"><![CDATA[<h2 id="Console控制台"><a href="#Console控制台" class="headerlink" title="Console控制台"></a>Console控制台</h2><p>平时一般只用console的打印功能，今天的训练学习到了关于console的更多功能</p><h3 id="1-log"><a href="#1-log" class="headerlink" title="1.log"></a>1.log</h3><p>这个是最常用的，但它还有一些更多功能：比如参数支持类似 C 语言的字符串替换模式。</p><ul><li><code>%s</code> 字符串</li><li><code>%d</code> 整数</li><li><code>%f</code> 浮点值</li><li><code>%o</code> Object</li><li><code>%c</code> 设定输出的样式，在之后的文字将按照第二个参数里的值进行显示</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;输出一个字符串 %s &quot;</span>, <span class="hljs-string">&quot;log&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;输出一个整数是 %d &quot;</span>, <span class="hljs-number">1.23</span>); <span class="hljs-comment">//1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;输出一个小数是 %f &quot;</span>, <span class="hljs-number">1.23</span>); <span class="hljs-comment">//1.23</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;%c不同样式的输出效果&quot;</span>, <span class="hljs-string">&quot;color: #00fdff; font-size: 2em;&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="2-不同样式的输出"><a href="#2-不同样式的输出" class="headerlink" title="2.不同样式的输出"></a>2.不同样式的输出</h3><p>除了常规的 <code>log</code> 之外，还有一些其他已设定好的样式，区别在于图标或者颜色不一样：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// warning!</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">warn</span>(<span class="hljs-string">&quot;三角感叹号图标，淡黄色背景&quot;</span>)<br><span class="hljs-comment">// Error :|</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;红叉图标，红字红色背景&quot;</span>);<br><span class="hljs-comment">// Info</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;蓝色圆形感叹号图标&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="3-打印输出"><a href="#3-打印输出" class="headerlink" title="3.打印输出"></a>3.打印输出</h3><p>获取 DOM 元素之后，也可以打印输出。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;p&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(p);<br></code></pre></td></tr></table></figure><p>不同的地方在于，<code>log</code> 输出这个 DOM 的 HTML 标签，而 <code>dir</code> 则会输出这个 DOM 元素的属性列表。</p><h3 id="4-clear"><a href="#4-clear" class="headerlink" title="4. clear"></a>4. clear</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">clear</span>()<span class="hljs-comment">//Console was cleared</span><br><span class="hljs-comment">//快捷键ctrl+L</span><br></code></pre></td></tr></table></figure><h3 id="5-assert方法进行测试"><a href="#5-assert方法进行测试" class="headerlink" title="5.assert方法进行测试"></a>5.assert方法进行测试</h3><p> 接受一个表达式作为参数，如果参数返回值是 false，则会输出第二个参数中的内容。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">// p.classList.contians()返回布尔类型；若传入的参数token包含在列表中时则返回true ，否则返回 false。</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">assert</span>(p.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;ouch&#x27;</span>), <span class="hljs-string">&#x27;That is wrong&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="6-清晰呈现数据"><a href="#6-清晰呈现数据" class="headerlink" title="6.清晰呈现数据"></a>6.清晰呈现数据</h3><ol><li><p>console.table()  可以将数组、对象以表格的形式打印输出，如果只输出其中的某一列，可以加上第二个参数，示例如下。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">table</span>(dogs);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">table</span>(dogs, [<span class="hljs-string">&quot;age&quot;</span>]);<br></code></pre></td></tr></table></figure></li><li><p>将数据分组展示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> dogs = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Snickers&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">2</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;hugo&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">8</span> &#125;];<br>dogs.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">dog</span> =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">group</span>();<br><span class="hljs-comment">//console.groupCollapsed();  // 收起列表</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;dog.name&#125;</span>`</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;dog.age&#125;</span>`</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;dog.name&#125;</span> 有 <span class="hljs-subst">$&#123;dog.age&#125;</span> 岁了`</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">groupEnd</span>();<br>&#125;);<br><span class="hljs-comment">// group/groupCollapsed 和 groupEnd之间的内容会自动分组</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="7-count计数"><a href="#7-count计数" class="headerlink" title="7.count计数"></a>7.count计数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">count</span>(<span class="hljs-string">&#x27;Wes&#x27;</span>) <span class="hljs-comment">//Wes: 1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">count</span>(<span class="hljs-string">&#x27;Wes&#x27;</span>) <span class="hljs-comment">//Wes: 2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">count</span>(<span class="hljs-string">&#x27;puppy&#x27;</span>) <span class="hljs-comment">//puppy: 1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">count</span>(<span class="hljs-string">&#x27;puppy&#x27;</span>) <span class="hljs-comment">//puppy: 2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">count</span>(<span class="hljs-string">&#x27;puppy&#x27;</span>)<span class="hljs-comment">//puppy: 3</span><br></code></pre></td></tr></table></figure><h3 id="8-timing-计时"><a href="#8-timing-计时" class="headerlink" title="8.timing 计时"></a>8.timing 计时</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//异步数据的获取花费了多久时间</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">time</span>(<span class="hljs-string">&#x27;fetching data&#x27;</span>)<br>        <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;https://api.github.com/users/wesbos&#x27;</span>)<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.<span class="hljs-title function_">json</span>())<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">timeEnd</span>(<span class="hljs-string">&#x27;fetching data&#x27;</span>)<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>            &#125;)<br><span class="hljs-comment">// time(&#x27;&#x27;)和timeEnd(&#x27;&#x27;)分别控制开始计时和结束计时,里面参数的name要保持一致</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>08- HTML Canvas</title>
    <link href="/2022/09/02/08-HTML-Canvas/"/>
    <url>/2022/09/02/08-HTML-Canvas/</url>
    
    <content type="html"><![CDATA[<h3 id="HTML5-Canvas"><a href="#HTML5-Canvas" class="headerlink" title="HTML5 Canvas"></a>HTML5 Canvas</h3><p>之前没有做过和canvas相关的案例，今天总结一下canvas的基本用法</p><p><img src="/images/pasted-1.png" alt="upload successful"></p><p>1.在页面中放置一个canvas元素(HTML)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;canvas&gt;&lt;/canvas&gt;<br></code></pre></td></tr></table></figure><p>2.获取canvas元素和canvas元素的getContext(图像会在此被渲染)（JS）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#draw&#x27;</span>)<br><span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&#x27;2d&#x27;</span>) <span class="hljs-comment">//以2d方式渲染</span><br><span class="hljs-comment">//getContext()方法用来获得渲染上下文和它的绘画功能。</span><br></code></pre></td></tr></table></figure><p>3.让画布的大小和浏览器窗口的视口（viewport)的高度和宽度一致(JS)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">canvas.<span class="hljs-property">height</span> = windows.<span class="hljs-property">innerHeight</span><br>canvas.<span class="hljs-property">width</span> = windows.<span class="hljs-property">innerWidth</span><br></code></pre></td></tr></table></figure><p>4.设置图形轮廓的颜色strokeStyle</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&#x27;#BADA55&#x27;</span><br></code></pre></td></tr></table></figure><p>5.设置线条</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ctx.<span class="hljs-property">lineJoin</span> = <span class="hljs-string">&#x27;round&#x27;</span><span class="hljs-comment">// lineJoin设置线条与线条间结合处的样式</span><br>ctx.<span class="hljs-property">lineCap</span> = <span class="hljs-string">&#x27;round&#x27;</span><span class="hljs-comment">// lineCap 设置线条末端样式</span><br>ctx.<span class="hljs-property">lineWidth</span> = <span class="hljs-number">50</span> <span class="hljs-comment">//设置线条宽度</span><br></code></pre></td></tr></table></figure><p>6.绘制路径</p><p>   补充：HSL色彩模式是工业界的一种颜色标准，是通过对色相(H)、饱和度(S)、明度(L)三个颜色通道的变化以及它们相互之间的叠加来得到各式各样的颜色的，HSL即是代表色相，饱和度，明度三个通道的颜色，这个标准几乎包括了人类视力所能感知的所有颜色，是目前运用最广的颜色系统之一。为了颜色保持变化，在hue超过360时，将其变为0</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1. 首先，你需要创建路径起始点。</span><br><span class="hljs-comment">//2.然后你使用画图命令去画出路径。</span><br><span class="hljs-comment">//3.通过线条来绘制图形轮廓。</span><br><span class="hljs-comment">//定义两个全局变量： lastX 和lastY 初识为0</span><br><span class="hljs-keyword">let</span> lastX = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> lasY = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> hue = <span class="hljs-number">0</span><br><span class="hljs-comment">//让direction控制线条大小渐变， 设置初始值为true</span><br><span class="hljs-keyword">let</span> direction = <span class="hljs-literal">true</span><br><span class="hljs-keyword">let</span> isDrawing = <span class="hljs-literal">false</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">draw</span>(<span class="hljs-params">e</span>) &#123;<br><span class="hljs-keyword">if</span>(!isDrawing) <span class="hljs-keyword">return</span>;<br>  ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">`hsl(<span class="hljs-subst">$&#123;hue&#125;</span>, 100%, 50%)`</span>;<br>    ctx.<span class="hljs-title function_">beginPath</span>(); <span class="hljs-comment">//调用beginPath()准备绘制一个新的形状路径</span><br>    <span class="hljs-comment">//绘制路径 此时还没有线条</span><br>    ctx.<span class="hljs-title function_">moveTo</span>(lastX, lastY); <span class="hljs-comment">//使用moveTo()函数移动到目标位置</span><br>    <span class="hljs-comment">//绘制线条</span><br>    ctx.<span class="hljs-title function_">lineTo</span>(e.<span class="hljs-property">offsetX</span>, e.<span class="hljs-property">offsetY</span>); <span class="hljs-comment">//lineTo(x, y)绘制一条从当前位置到指定xy位置的直线。</span><br>    ctx.<span class="hljs-title function_">stroke</span>();<span class="hljs-comment">//通过线条来绘制图形轮廓。</span><br>    <span class="hljs-comment">//ctx.fill()通过填充路径的内容区域生成实心的图形。</span><br>    <span class="hljs-comment">//使用数组解构，将解构出来的值赋值给x y</span><br>    [lastX, lastY] = [e.<span class="hljs-property">offsetX</span>, e.<span class="hljs-property">offsetY</span>]<span class="hljs-comment">//把当前的坐标当做起点</span><br>    hue++<br>      <span class="hljs-keyword">if</span>(hue&gt;=<span class="hljs-number">360</span>)&#123;<br>          hue = <span class="hljs-number">0</span><br>      &#125;<br>      <span class="hljs-comment">//当线条大于100或者小于1时，线条变化，direction控制线条的减少和增加</span><br>      <span class="hljs-keyword">if</span>(ctx.<span class="hljs-property">lineWidth</span> &gt;=<span class="hljs-number">100</span> ||ctx.<span class="hljs-property">lineWidth</span>)  &#123;<br>          direction = !direction<br>      &#125;  <br>      <span class="hljs-keyword">if</span>(direction)&#123;<br>          ctx.<span class="hljs-property">lineWidth</span>++<br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>          ctx.<span class="hljs-property">lineWidth</span>--<br>      &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>   7.事件监听部分</p><ul><li><p>单击鼠标-按下准备开始</p></li><li><p>移动鼠标-画线</p></li><li><p>松开手指-结束画线</p><p> 按下鼠标画出图像</p><pre><code class="hljs">canvas.addEventListener(&#39;mousedown&#39;, (e) =&gt; &#123;isDrawing = true[lastX, lastY] = [e.offsetX, e.offsetY]&#125;)</code></pre><p>设定 mousemove 事件监听触发的函数进行绘制。但是，只有 mousemove 事件监听时，只要鼠标在页面上划过都会触发函数。这时我们需要一个标记变量，来控制当前鼠标是不是处在按下的状态。</p><pre><code class="hljs">canvas.addEventListener(&#39;mousemove&#39;, draw)canvas.addEventListener(&#39;mouseup&#39;, ()=&gt; isDrawing = false)canvas.addEventListener(&#39;mouseuot&#39;, ()=&gt; isDrawing = false)</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS现代教程-对象（基础）</title>
    <link href="/2022/08/31/S%E8%A5%BF%E5%AE%89%E8%B5%9B%E6%95%99%E7%A8%8B-%E5%AF%B9%E8%B1%A1%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/"/>
    <url>/2022/08/31/S%E8%A5%BF%E5%AE%89%E8%B5%9B%E6%95%99%E7%A8%8B-%E5%AF%B9%E8%B1%A1%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><h4 id="1-文本和属性"><a href="#1-文本和属性" class="headerlink" title="1. 文本和属性"></a>1. 文本和属性</h4><ol><li><p>创建对象两种方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 创建空对象</span><br>       <span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>()<span class="hljs-comment">//构造函数</span><br>       <span class="hljs-keyword">let</span> obj1 = &#123;&#125;<span class="hljs-comment">//字面量</span><br></code></pre></td></tr></table></figure></li><li><p>对象中的键和值（键值对）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Puppy&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>,<br>    <span class="hljs-string">&#x27;likes birds&#x27;</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//使用多字词语做键，必须用引号</span><br>    <span class="hljs-comment">//最后一个属性以逗号结尾，这样便于我们随时添加新的属性</span><br>&#125;<br><span class="hljs-comment">//属性的值可以是任意类型</span><br>user.<span class="hljs-property">isAdmin</span> = <span class="hljs-literal">true</span> <span class="hljs-comment">//布尔型</span><br><span class="hljs-comment">//可以使用delete 来移除属性</span><br><span class="hljs-keyword">delete</span> user.<span class="hljs-property">age</span>;<br></code></pre></td></tr></table></figure></li></ol><h4 id="2-方括号"><a href="#2-方括号" class="headerlink" title="2. 方括号[ ]"></a>2. 方括号[ ]</h4><p>1.通过1中已知，访问属性值可以使用user.name的方式，但是对于多词语属性这种方式会报错，因此此时可以用[ ]来访问。user[“like birds”]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;&#125;;<br>user[<span class="hljs-string">&quot;like birds&quot;</span>] = <span class="hljs-literal">true</span>; <span class="hljs-comment">//设置</span><br><span class="hljs-title function_">alert</span>(user[<span class="hljs-string">&quot;like birds&quot;</span>]); <span class="hljs-comment">//读取</span><br><span class="hljs-keyword">delete</span> user[<span class="hljs-string">&quot;like birds&quot;</span>];<span class="hljs-comment">//删除</span><br></code></pre></td></tr></table></figure><p>2.方括号还可以实现通过表达式来获取对象的<strong>属性名</strong></p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> key = <span class="hljs-string">&#x27;like birds&#x27;</span>;<br>user[key] = <span class="hljs-literal">true</span> <span class="hljs-comment">// user[key] 等同于user[&#x27;like birds&#x27;]</span><br><br><span class="hljs-comment">// 用户自己输入变量</span><br> <span class="hljs-keyword">let</span> user = &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,<br>            <span class="hljs-attr">age</span>: <span class="hljs-number">30</span><br>        &#125;<br><br>        <span class="hljs-keyword">let</span> key = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;what do you want to know about the user?&#x27;</span>)<br>        <span class="hljs-title function_">alert</span>(user[key])<br></code></pre></td></tr></table></figure><p>   这种用法不适用于.</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span><br><br>&#125;<br><span class="hljs-keyword">let</span> key = name<br><span class="hljs-title function_">alert</span>(user.<span class="hljs-property">key</span>) <span class="hljs-comment">//undefined</span><br></code></pre></td></tr></table></figure><p>3.在对象字面量中使用方括号来计算属性</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">//计算属性</span><br>        <span class="hljs-keyword">let</span> fruit = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;which fruit?&#x27;</span>, <span class="hljs-string">&#x27;apple&#x27;</span>)<br>        <span class="hljs-keyword">let</span> bag = &#123;<br>            [fruit]: <span class="hljs-number">5</span><br>        &#125;<br>        <span class="hljs-title function_">alert</span>(bag.<span class="hljs-property">apple</span>) <span class="hljs-comment">//5</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(bag); <span class="hljs-comment">//&#123;apple: 5&#125;</span><br><span class="hljs-comment">// 等同于</span><br> <span class="hljs-keyword">let</span> fruit = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;Enter the fruit&#x27;</span>, <span class="hljs-string">&#x27;apple&#x27;</span>)<br>        <span class="hljs-keyword">let</span> bag = &#123;<br>        &#125;<br>        bag[fruit] = <span class="hljs-number">5</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(bag); <span class="hljs-comment">// &#123;apple: 5&#125;</span><br></code></pre></td></tr></table></figure><p>   方括号比点更强大，当属性名是已知且简单的时候用点，如果涉及到变量等复杂内容时，用方括号。</p><h4 id="3-属性名和属性值"><a href="#3-属性名和属性值" class="headerlink" title="3. 属性名和属性值"></a>3. 属性名和属性值</h4><ol><li><p>属性值的简写(实际开发中经常用已存在的变量当做属性名)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//通过变量生成属性</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeUser</span>(<span class="hljs-params">name, age</span>)&#123;<br><span class="hljs-keyword">return</span>&#123;<br><span class="hljs-attr">name</span>: name,   <span class="hljs-comment">//缩写  name,</span><br><span class="hljs-attr">age</span>: age,     <span class="hljs-comment">// 缩写 age,</span><br><span class="hljs-comment">//也可以混写 </span><br><span class="hljs-comment">// name,</span><br><span class="hljs-comment">// age: 30</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">let</span> user = <span class="hljs-title function_">makeUser</span>(<span class="hljs-string">&#x27;John&#x27;</span>, <span class="hljs-number">30</span>)<br><span class="hljs-title function_">alert</span>(user.<span class="hljs-property">name</span>) <span class="hljs-comment">//John</span><br><br></code></pre></td></tr></table></figure><p>2.属性命名没有限制，可以是任何字符串或者symbol,其他类型会被自动转为字符串型</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj = &#123;<br><span class="hljs-number">0</span>: <span class="hljs-string">&#x27;test&#x27;</span><br>&#125;;<br><br><span class="hljs-title function_">alert</span>(obj[<span class="hljs-number">0</span>])<span class="hljs-comment">//test</span><br><span class="hljs-title function_">alert</span>(obj[<span class="hljs-string">&quot;0&quot;</span>])<span class="hljs-comment">//test</span><br><br><span class="hljs-comment">//注意__proto__ 不能把它设置为一个非对象的属性名</span><br><span class="hljs-keyword">let</span> obj = &#123;&#125;<br>obj.<span class="hljs-property">__proto__</span> = <span class="hljs-number">5</span><br><span class="hljs-title function_">alert</span>(obj.<span class="hljs-property">__proto__</span>) <span class="hljs-comment">// 值为对象 [object Object]</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="4-判断属性是否存在"><a href="#4-判断属性是否存在" class="headerlink" title="4. 判断属性是否存在"></a>4. 判断属性是否存在</h4><ol><li>JS对象能够被访问任何属性，即使这个属性不存在也不会报错。读取不存在的属性会返回undefined,根据这个特性可以很简单的判断是否存在某属性</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;&#125;<br><span class="hljs-title function_">alert</span>(user.<span class="hljs-property">noP</span> === <span class="hljs-literal">undefined</span> ) <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><p>2.检查属性是否存在操作符 in</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,<br><span class="hljs-attr">age</span>: <span class="hljs-number">30</span><br>&#125;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;name&#x27;</span> <span class="hljs-keyword">in</span> user) <span class="hljs-comment">//true</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;gender&#x27;</span> <span class="hljs-keyword">in</span> user) <span class="hljs-comment">//false</span><br><span class="hljs-comment">//in 左边的是属性名 引号要加上 </span><br><span class="hljs-comment">//如果不加上引号的时候，代表是一个变量</span><br> <span class="hljs-keyword">let</span> key = <span class="hljs-string">&#x27;name&#x27;</span><br> <span class="hljs-title function_">alert</span>(key <span class="hljs-keyword">in</span> user)<span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><p>3.为什么需要in? 因为当属性存在但是属性值为undefined的时候用undefined会有问题</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj = &#123;<br><span class="hljs-attr">test</span>: <span class="hljs-literal">undefined</span>,<br> <span class="hljs-comment">//这种情况很少发生，因为通常情况下不应该给对象赋值 undefined。我们通常会用 null 来表示未知的或者空的值。</span><br>&#125;<br><span class="hljs-title function_">alert</span>(obj.<span class="hljs-property">test</span>) <span class="hljs-comment">// undefined </span><br><span class="hljs-title function_">alert</span>(test <span class="hljs-keyword">in</span> obj) <span class="hljs-comment">//true  说明属性一定存在</span><br></code></pre></td></tr></table></figure><p>4.练习-判断是否有属性</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 当对象没有属性的时候返回true, 否则返回false</span><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">isEmpty</span>(<span class="hljs-params">obj</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> obj) &#123;<br>                <span class="hljs-comment">// 如果能进到循环里则说明有属性</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br><br>        <span class="hljs-keyword">let</span> schedule = &#123;&#125;<br>        <span class="hljs-title function_">alert</span>(<span class="hljs-title function_">isEmpty</span>(schedule)) <span class="hljs-comment">//true</span><br><br>        schedule[<span class="hljs-string">&quot;puppy&#x27;s hobby&quot;</span>] = <span class="hljs-string">&#x27;jogging&#x27;</span><br>        <span class="hljs-title function_">alert</span>(<span class="hljs-title function_">isEmpty</span>(schedule)) <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><p>   5.练习-对象属性求和</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">// 判断属性是否为空</span><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">noPro</span>(<span class="hljs-params">obj</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> obj) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-comment">// 计算总工资</span><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">getSum</span>(<span class="hljs-params">obj</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> obj) &#123;<br><br>                sum += obj[k]<br>            &#125;<br>            <span class="hljs-keyword">return</span> sum<br>        &#125;<br><br>        <span class="hljs-keyword">let</span> salaries = &#123;<br>            <span class="hljs-title class_">John</span>: <span class="hljs-number">100</span>,<br>            <span class="hljs-title class_">Ann</span>: <span class="hljs-number">160</span>,<br>            <span class="hljs-title class_">Pete</span>: <span class="hljs-number">140</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">noPro</span>(salaries)) &#123;<br>            <span class="hljs-title function_">getSum</span>(salaries)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            sum = <span class="hljs-number">0</span><br>        &#125;<br><br>        <span class="hljs-title function_">alert</span>(sum)<br><span class="hljs-comment">//这段代码中 判断是否有属性的函数不必要，因为当对对象进行遍历的时候，只有当里面有属性的时候才能进入到遍历中，所以先判断是否有属性是多此一举的操作。</span><br><span class="hljs-comment">//简洁的代码</span><br><span class="hljs-keyword">let</span> salaries = &#123;<br>  <span class="hljs-title class_">John</span>: <span class="hljs-number">100</span>,<br>  <span class="hljs-title class_">Ann</span>: <span class="hljs-number">160</span>,<br>  <span class="hljs-title class_">Pete</span>: <span class="hljs-number">130</span><br>&#125;;<br><br><span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> salaries) &#123;<br>  sum += salaries[key];<br>&#125;<br><br><span class="hljs-title function_">alert</span>(sum); <span class="hljs-comment">// 390</span><br></code></pre></td></tr></table></figure><p>   6.将属性值都*2 </p><pre><code class="hljs">  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> menu = &#123;<br>            <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>            <span class="hljs-attr">height</span>: <span class="hljs-number">300</span>,<br>            <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;My menu&quot;</span><br>        &#125;;<br>        <span class="hljs-comment">// 先对对象的属性进行遍历</span><br>        <span class="hljs-comment">//判断属性是否是数值型，如果是就进行运算，如果不是就无需操作</span><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">multiplyNumeric</span>(<span class="hljs-params">obj</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> obj) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj[k] == <span class="hljs-string">&#x27;number&#x27;</span>) &#123;<br>                    obj[k] *= <span class="hljs-number">2</span><br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> obj<br>        &#125;<br>        <span class="hljs-keyword">let</span> m = <span class="hljs-title function_">multiplyNumeric</span>(menu)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(m);<br><span class="hljs-comment">// 教程中有下面这句话，有疑问？</span><br><span class="hljs-comment">//注意 multiplyNumeric 函数不需要返回任何值，它应该就地修改对象。</span><br></code></pre></td></tr></table></figure>  </code></pre><h4 id="5-遍历对象-for…in"><a href="#5-遍历对象-for…in" class="headerlink" title="5. 遍历对象 for…in"></a>5. 遍历对象 for…in</h4><ol><li>for…in</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span>,<br>  <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>,<br>  <span class="hljs-attr">isAdmin</span>: <span class="hljs-literal">true</span><br>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> user)&#123;<br>    <span class="hljs-title function_">alert</span>(key)<span class="hljs-comment">// name, age, isAdmin</span><br>    <span class="hljs-title function_">alert</span>(user[key])<span class="hljs-comment">// John, 30, true</span><br>&#125;<br></code></pre></td></tr></table></figure><p>2.对象排序</p><p>   遍历对象的时候会有特殊的顺序：整数属性会被进行排序，其他属性会按照被创建的顺序显示</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> codes = &#123;<br><span class="hljs-string">&#x27;49&#x27;</span>:<span class="hljs-string">&#x27;Germany&#x27;</span>,<br><span class="hljs-string">&quot;41&quot;</span>: <span class="hljs-string">&quot;Switzerland&quot;</span>,<br><span class="hljs-string">&quot;44&quot;</span>: <span class="hljs-string">&quot;Great Britain&quot;</span>,<br><span class="hljs-comment">// ..,</span><br><span class="hljs-string">&quot;1&quot;</span>: <span class="hljs-string">&quot;USA&quot;</span><br>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> code <span class="hljs-keyword">in</span> codes)&#123;<br><span class="hljs-title function_">alert</span>(code)<span class="hljs-comment">// 1, 41, 44, 49</span><br>&#125;<br><br><span class="hljs-comment">//解决方案是在数字前面加上一个+，变成非整数属性</span><br><span class="hljs-keyword">let</span> codes = &#123;<br>  <span class="hljs-string">&quot;+49&quot;</span>: <span class="hljs-string">&quot;Germany&quot;</span>,<br>  <span class="hljs-string">&quot;+41&quot;</span>: <span class="hljs-string">&quot;Switzerland&quot;</span>,<br>  <span class="hljs-string">&quot;+44&quot;</span>: <span class="hljs-string">&quot;Great Britain&quot;</span>,<br>  <span class="hljs-comment">// ..,</span><br>  <span class="hljs-string">&quot;+1&quot;</span>: <span class="hljs-string">&quot;USA&quot;</span><br>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> code <span class="hljs-keyword">in</span> codes) &#123;<br>  <span class="hljs-title function_">alert</span>( +code ); <span class="hljs-comment">// 49, 41, 44, 1</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-对象引用和复制"><a href="#6-对象引用和复制" class="headerlink" title="6. 对象引用和复制"></a>6. 对象引用和复制</h4><p>对象与原始类型（字符串，数字，布尔值等）的根本区别之一是，对象是通过<strong>引用</strong>存储和复制的，而原始类型总是’作为一个整体’复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> message = <span class="hljs-string">&#x27;Hello&#x27;</span><br><span class="hljs-keyword">let</span> phrase = message<br><span class="hljs-comment">//以上代码表示有两个独立的变量都存储着字符串&#x27;Hello&#x27;</span><br></code></pre></td></tr></table></figure><p>但是赋值了对象的变量存储的不是对象本身，而是对象在<strong>内存中的地址</strong>（换句话说就是对该对象的引用）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span><br>&#125;<br><span class="hljs-comment">//对象&#123;name:&#x27;John&#x27;&#125;其实存储在内存中的某个位置</span><br><span class="hljs-comment">//变量user保存的是该地址(对其的引用)</span><br><span class="hljs-comment">//当我们对对象进行操作，比如user.name的时候，JS引擎会查看这个地址中的内容，并在实际的对象上进行操作</span><br></code></pre></td></tr></table></figure><p><strong>当对象变量被复制（也就是引用被复制）的时候，实际的对象本身是没有被复制的</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">let</span> user = &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>&#125;<br><span class="hljs-keyword">let</span> admin = user <span class="hljs-comment">//复制引用</span><br><span class="hljs-comment">//此时此刻，两个变量，他们保存的是同一个实际对象的地址（他们都指向实际的对象）。所以。毫无疑问，不论通过哪个变量都可以访问对象</span><br><span class="hljs-comment">// </span><br>admin.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;Peter&#x27;</span><br><span class="hljs-title function_">alert</span>(user.<span class="hljs-property">name</span>)<span class="hljs-comment">// Peter admin修改后可以通过user看到</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a = &#123;&#125;;<br><span class="hljs-keyword">let</span> b = a; <span class="hljs-comment">// 复制引用</span><br><br><span class="hljs-title function_">alert</span>( a == b ); <span class="hljs-comment">// true，都引用同一对象</span><br><span class="hljs-title function_">alert</span>( a === b ); <span class="hljs-comment">// true</span><br><br><span class="hljs-keyword">let</span> a = &#123;&#125;;<br><span class="hljs-keyword">let</span> b = &#123;&#125;; <span class="hljs-comment">// 两个独立的对象</span><br><br><span class="hljs-title function_">alert</span>( a == b ); <span class="hljs-comment">// false</span><br></code></pre></td></tr></table></figure><p>2.<strong>复制对象</strong></p><p>   可以通过创建一个新对象，通过遍历已有对象的属性，并在原始类型值的层面复制他们，以实现对对象结构的复制</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>,<br>            <span class="hljs-attr">age</span>: <span class="hljs-number">30</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> clone = &#123;&#125;<br>        <span class="hljs-comment">//把user的属性赋值给对象clone</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> user) &#123;<br>            clone[k] = user[k]<br>        &#125;<br>        <span class="hljs-comment">// 现在clone是带有和user相同内容的完全独立的对象</span><br>        clone.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;Peter&#x27;</span><span class="hljs-comment">//改变了数据</span><br>        <span class="hljs-title function_">alert</span>(user.<span class="hljs-property">name</span>)<span class="hljs-comment">// John</span><br>        <span class="hljs-title function_">alert</span>(clone.<span class="hljs-property">name</span>)<span class="hljs-comment">// Peter</span><br><span class="hljs-comment">// 可以用Object.assign实现同样的效果</span><br>  <span class="hljs-keyword">let</span> user = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span> &#125;<br>        <span class="hljs-keyword">let</span> per1 = &#123; <span class="hljs-attr">canView</span>: <span class="hljs-literal">true</span> &#125;<br>        <span class="hljs-keyword">let</span> per2 = &#123; <span class="hljs-attr">canEdit</span>: <span class="hljs-literal">true</span> &#125;<br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(user, per1, per2)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user);<span class="hljs-comment">//&#123;name: &#x27;John&#x27;, canView: true, canEdit: true&#125;</span><br><br><span class="hljs-comment">//如果属性名已存在，新的属性值会覆盖旧的</span><br><span class="hljs-keyword">let</span> user = &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>&#125;<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(user, &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>&#125;)<br><span class="hljs-title function_">alert</span>(user.<span class="hljs-property">name</span>) <span class="hljs-comment">//puppy</span><br><span class="hljs-comment">// 用Object.assign()代替for...in </span><br><span class="hljs-keyword">let</span> user = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>,<br>    <span class="hljs-attr">age</span>:<span class="hljs-number">30</span><br>&#125;<br><span class="hljs-keyword">let</span> clone = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, user);<span class="hljs-comment">//user 中的所有属性拷贝到了一个空对象中，并返回这个新的对象。</span><br><br><span class="hljs-comment">//也可以使用展开运算符对对象进行浅拷贝</span><br><span class="hljs-keyword">let</span> user = &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span>,<br>            <span class="hljs-attr">age</span>: <span class="hljs-number">30</span><br>        &#125;;<br><br>        <span class="hljs-keyword">let</span> clone = &#123; ...user &#125;;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(clone); <span class="hljs-comment">//&#123;name: &#x27;John&#x27;, age: 30&#125;</span><br>        clone.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;peter&#x27;</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user.<span class="hljs-property">name</span>);<span class="hljs-comment">//John</span><br></code></pre></td></tr></table></figure><p>   3.深层克隆</p><pre><code class="hljs">  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">let</span> user = &#123;<br>                  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>,<br>                  <span class="hljs-attr">sizes</span>: &#123;<br>                      <span class="hljs-attr">height</span>: <span class="hljs-number">182</span>,<br>                      <span class="hljs-attr">width</span>: <span class="hljs-number">50</span><br>                  &#125;<br>              &#125;<br>              <span class="hljs-keyword">let</span> clone = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, user)<span class="hljs-comment">//user.sizes是一个对象，他会以引用的形式被拷贝</span><br>              <span class="hljs-title function_">alert</span>(user.<span class="hljs-property">sizes</span> === clone.<span class="hljs-property">sizes</span>)<span class="hljs-comment">// true, 同一个对象 </span><br>              user.<span class="hljs-property">sizes</span>.<span class="hljs-property">width</span>++;<br>              <span class="hljs-title function_">alert</span>(clone.<span class="hljs-property">sizes</span>.<span class="hljs-property">width</span>)<span class="hljs-comment">//51</span><br>      <span class="hljs-comment">//为了解决这个问题，并让user和clone成为独立的对象，应该使用拷贝循环来检查每个user[k]是否是对象，如果是一个对象，则复制他的结构，这也就是所谓的‘深拷贝&#x27;.</span><br>      <span class="hljs-comment">//我们可以使用递归来实现它。或者为了不重复造轮子，采用现有的实现，例如 lodash 库的 _.cloneDeep(obj)。</span><br>      <br><span class="hljs-number">4.</span>通过引用对对象进行存储的一个重要的副作用是声明为 <span class="hljs-string">`const`</span> 的对象 **可以** 被修改 <br><br><br><span class="hljs-string">``</span><span class="hljs-string">`javascript</span><br><span class="hljs-string">const user = &#123;</span><br><span class="hljs-string">  name: &quot;John&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">user.name = &quot;Pete&quot;; // (*)</span><br><span class="hljs-string">alert(user.name); // Pete</span><br><span class="hljs-string">//看起来 (*) 行的代码会触发一个错误，但实际并没有。user 的值是一个常量，它必须始终引用同一个对象，但该对象的属性可以被自由修改。</span><br><span class="hljs-string">//换句话说，只有当我们尝试将 user=... 作为一个整体进行赋值时，const user 才会报错。</span><br></code></pre></td></tr></table></figure></code></pre><h4 id="7-对象方法-和-this"><a href="#7-对象方法-和-this" class="headerlink" title="7. 对象方法 和 this"></a>7. 对象方法 和 this</h4><p>存储在对象属性中函数称为方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br>           <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;puppy&#x27;</span>,<br>           <span class="hljs-attr">age</span>: <span class="hljs-number">30</span><br>       &#125;<br>       <span class="hljs-comment">//1. 用函数表达式作为方法</span><br>       user.<span class="hljs-property">sayHi</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>           <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hi&#x27;</span>)<br>       &#125;<br><br>       user.<span class="hljs-title function_">sayHi</span>()<br><br><br>       <span class="hljs-comment">//2. 用预先声明的函数作为方法</span><br>       <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHello</span>(<span class="hljs-params"></span>) &#123;<br>           <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)<br>       &#125;<br>       user.<span class="hljs-property">sayHello</span> = sayHello<br>       user.<span class="hljs-title function_">sayHello</span>()<br><br><span class="hljs-comment">//3. 简写</span><br>       <span class="hljs-keyword">let</span> user1 = &#123;<br>           <span class="hljs-title function_">sayHai</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hai&#x27;</span>)<br>           &#125;<br>       &#125;<br><br>       <span class="hljs-keyword">let</span> user2 = &#123;<br>           <span class="hljs-attr">sayH</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;haha&#x27;</span>)<br>           &#125;<br>       &#125;<br></code></pre></td></tr></table></figure><p>为了访问对象，可以使用this关键字，this是指调用该方法的对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;puppy&#x27;</span>,<br><span class="hljs-attr">age</span>:<span class="hljs-number">30</span><br>&#125;<br><span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>)<br>&#125;<br>user.<span class="hljs-title function_">sayHi</span>()<span class="hljs-comment">//puppy</span><br></code></pre></td></tr></table></figure><p>this的值是代码在运行的时候计算出来的，它取决于上下文; 它并不取决于方法声明的位置而是‘点符号前’的是什么</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span> &#125;;<br><span class="hljs-keyword">let</span> admin = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Admin&quot;</span> &#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-title function_">alert</span>( <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> );<br>&#125;<br><br><span class="hljs-comment">// 在两个对象中使用相同的函数</span><br>user.<span class="hljs-property">f</span> = sayHi;<br>admin.<span class="hljs-property">f</span> = sayHi;<br><br><span class="hljs-comment">// 这两个调用有不同的 this 值</span><br><span class="hljs-comment">// 函数内部的 &quot;this&quot; 是“点符号前面”的那个对象</span><br>user.<span class="hljs-title function_">f</span>(); <span class="hljs-comment">// John（this == user）</span><br>admin.<span class="hljs-title function_">f</span>(); <span class="hljs-comment">// Admin（this == admin）</span><br><br>admin[<span class="hljs-string">&#x27;f&#x27;</span>](); <span class="hljs-comment">// Admin（使用点符号或方括号语法来访问这个方法，都没有关系。）</span><br></code></pre></td></tr></table></figure><p>箭头函数没有自己的this，如果在箭头函数中引用this，this的值取决于外部正常的函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br>           <span class="hljs-attr">firstName</span>: <span class="hljs-string">&#x27;p&#x27;</span>,<br>           <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>               <span class="hljs-keyword">let</span> <span class="hljs-title function_">arrow</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span>)<br>               <span class="hljs-title function_">arrow</span>()<br>           &#125;<br>       &#125;<br><br>       user.<span class="hljs-title function_">sayHi</span>() <span class="hljs-comment">//p</span><br><br>       <span class="hljs-comment">//当我们不想要一个独立的this,而是反而想从外部上下文中获取时，它很有用。</span><br></code></pre></td></tr></table></figure><p>this练习1：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// function makeUser() &#123;</span><br>      <span class="hljs-comment">//     return &#123;</span><br>      <span class="hljs-comment">//         name: &#x27;John&#x27;,</span><br>      <span class="hljs-comment">//         ref: this</span><br>      <span class="hljs-comment">//     &#125;</span><br>      <span class="hljs-comment">// &#125;</span><br>      <span class="hljs-comment">// let user = makeUser()</span><br>      <span class="hljs-comment">// console.log(user.ref.name) 错误</span><br>      <span class="hljs-keyword">function</span> <span class="hljs-title function_">makeUser</span>(<span class="hljs-params"></span>) &#123;<br>          <span class="hljs-keyword">return</span> &#123;<br>              <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>,<br>              <span class="hljs-title function_">ref</span>(<span class="hljs-params"></span>) &#123;<br>                  <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>              &#125;<br>          &#125;<br>      &#125;<br>      <span class="hljs-keyword">let</span> user = <span class="hljs-title function_">makeUser</span>()<br>      <span class="hljs-title function_">alert</span>(user.<span class="hljs-title function_">ref</span>().<span class="hljs-property">name</span>)<br>      <span class="hljs-comment">// user.ref()是一个方法，this的值为点符号之前的对象</span><br></code></pre></td></tr></table></figure><p>this练习2：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">let</span> calculator = &#123;<br>            <span class="hljs-attr">read</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> = +<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;please enter a:&#x27;</span>)<br><span class="hljs-comment">// +promt(&#x27;&#x27;)转为数字型</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span> = +<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;please enter b:&#x27;</span>)<br><br>            &#125;,<br>            <span class="hljs-attr">sum</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span><br>            &#125;,<br>            <span class="hljs-attr">mul</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span><br>            &#125;<br>        &#125;<br>        calculator.<span class="hljs-title function_">read</span>()<br>        <span class="hljs-title function_">alert</span>(calculator.<span class="hljs-title function_">sum</span>())<br>        <span class="hljs-title function_">alert</span>(calculator.<span class="hljs-title function_">mul</span>())<br></code></pre></td></tr></table></figure><p>练习3：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> ladder = &#123;<br>  <span class="hljs-attr">step</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-title function_">up</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">step</span>++;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span> <span class="hljs-comment">//添加</span><br>  &#125;,<br>  <span class="hljs-title function_">down</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">step</span>--;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span> <span class="hljs-comment">//添加</span><br>  &#125;,<br>  <span class="hljs-attr">showStep</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-comment">// 显示当前的 step</span><br>    <span class="hljs-title function_">alert</span>( <span class="hljs-variable language_">this</span>.<span class="hljs-property">step</span> );<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span> <span class="hljs-comment">//添加</span><br>  &#125;<br>&#125;;<br><span class="hljs-comment">//这段代码要让他变成链式调用，只需要在每个函数中添加return this 每次返回对象本身 (这种链式调用的写法在JS中很常用)</span><br>ladder.<span class="hljs-title function_">up</span>().<span class="hljs-title function_">up</span>().<span class="hljs-title function_">down</span>().<span class="hljs-title function_">down</span>().<span class="hljs-title function_">showStep</span>() <span class="hljs-comment">//0</span><br></code></pre></td></tr></table></figure><h4 id="8-垃圾回收-这部分有点难"><a href="#8-垃圾回收-这部分有点难" class="headerlink" title="8. 垃圾回收(这部分有点难)"></a>8. 垃圾回收(这部分有点难)</h4><ol><li><p>当我们创建原始值、对象、函数…这一切都会占用内存。JS引擎中有一个被称作垃圾回收器的东西在后台执行，他监控着所有对象的状态，并且删除那些明显<strong>不可达</strong>的。</p></li><li><p>什么是可达性 reachability?</p><p>可达就是指那些以某种方式可访问或可用的值，他们一定是存储在内存中的。</p><p>有些值明显是可达的，不能被释放： 1. 当前执行函数的局部变量和参数；2. 当前嵌套调用链上的其他函数，它的局部变量和参数；3.全局变量。 以上这值被称为<strong>根（roots)</strong></p><p>如果一个值可以通过引用链从根访问任何其他值，则认为该值是可达的。</p><p> 比方说，如果全局变量中有一个对象，并且该对象有一个属性引用了另一个对象，则 <strong>该</strong> 对象被认为是可达的。而且它引用的内容也是可达的。下面是详细的例子。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">marry</span>(<span class="hljs-params">man, woman</span>) &#123;<br>           woman.<span class="hljs-property">husband</span> = man<br>           man.<span class="hljs-property">wife</span> = woman<br>           <span class="hljs-keyword">return</span> &#123;<br>               <span class="hljs-attr">father</span>: man,<br>               <span class="hljs-attr">mother</span>: woman<br>           &#125;<br>       &#125;<br>       <span class="hljs-keyword">let</span> family = <span class="hljs-title function_">marry</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Ann&#x27;</span> &#125;)<br>   <br>       <span class="hljs-keyword">delete</span> family.<span class="hljs-property">father</span><br>       <span class="hljs-keyword">delete</span> family.<span class="hljs-property">mother</span>.<span class="hljs-property">husband</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="9-构造器和操作符new"><a href="#9-构造器和操作符new" class="headerlink" title="9.构造器和操作符new"></a>9.构造器和操作符new</h4><ol><li><p>{…}可以让我们创建一个对象，但是如果要创建多个类似的对象可以通过构造函数和<code>new</code>操作符实现。</p></li><li><p>构造函数的使用规则</p><ul><li>命名以大写字母开头</li><li>只能用<code>new</code>操作符来执行  如果没有参数<code>new</code>后面的<code>()</code>可以省略</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">User</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isAdmin</span> = <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-keyword">let</span> user = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&#x27;Jack&#x27;</span>)<br><span class="hljs-title function_">alert</span>(user.<span class="hljs-property">name</span>)<br><span class="hljs-title function_">alert</span>(user.<span class="hljs-property">isAdmin</span>)<br></code></pre></td></tr></table></figure><ul><li><p>当一个函数被<code>new</code>操作符执行时，他的执行步骤如下：1. 一个新的对象被创建并被分配给<code>this</code>; 2. 函数体执行，这个步骤通常会修改<code>this</code>，为其添加新的属性；3. 返回<code>this</code>的值</p><p><code>new User</code>相当于执行以下代码：</p></li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">User</span>(<span class="hljs-params">name</span>)&#123;<br><span class="hljs-comment">//this = &#123;&#125;; 隐式创建</span><br><span class="hljs-comment">//为this添加属性</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">isAdmin</span> = <span class="hljs-literal">false</span>;<br><br><br><span class="hljs-comment">// return this; 隐式返回</span><br>&#125;<br></code></pre></td></tr></table></figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//new User(&#x27;Jack&#x27;)等同于</span><br><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jack&#x27;</span>,<br><span class="hljs-attr">isAdmin</span>: <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><p>   <strong>实现可重用的对象创建代码</strong>这是构造器的主要目的</p><ol start="3"><li>如果有许多行用于创建单个复杂对象的代码，可以将他们封装在一个立即调用的构造函数中</li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 创建一个函数并使用new立即来调用它</span><br><span class="hljs-keyword">let</span> user = <span class="hljs-keyword">new</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;John&#x27;</span>;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">isAdmin</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">//其他代码....</span><br>&#125;<br><span class="hljs-comment">//这个构造函数不能被再次调用，因为它不保存在任何地方，只是被创建和调用，这个技巧目的用来封装构建单个对象的代码，以后不需要重用</span><br></code></pre></td></tr></table></figure><p>   4.构造器的<code>return</code></p><p>   一般构造函数没有<code>return</code>语句，他们的任务是把必要的东西写入<code>this</code>,并自动转换为结果.</p><p>   如果，<code>return</code>回的是一个对象则返回这个对象，而不是<code>this</code>；如果返回的是一个原始类型，则忽略，返回的还是<code>this</code></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">SmallUser</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = <span class="hljs-string">&quot;John&quot;</span>;<br>  <span class="hljs-keyword">return</span>; <span class="hljs-comment">// &lt;-- 返回 this</span><br>&#125;<br><span class="hljs-title function_">alert</span>( <span class="hljs-keyword">new</span> <span class="hljs-title class_">SmallUser</span>().<span class="hljs-property">name</span> );  <span class="hljs-comment">// John</span><br></code></pre></td></tr></table></figure><p>   5.构造函数中添加<strong>方法</strong><br>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">User</span>(<span class="hljs-params">name</span>) &#123;<br><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">sayHi</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;My name is:&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>)<br>&#125;<br>&#125;<br><span class="hljs-keyword">let</span> john = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&#x27;John&#x27;</span>)<br>john.<span class="hljs-title function_">sayHi</span>()<span class="hljs-comment">// My name is: John</span><br>  <br></code></pre></td></tr></table></figure></p><p>   JS 为许多内建的对象提供了构造函数:<code>Date</code>, <code>Set</code>等。</p><ul><li>构造函数练习</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//创建像 new A() == new B() 这样的函数 A 和 B？</span><br><span class="hljs-keyword">let</span> obj = &#123;&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">A</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> obj;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">B</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> obj;<br>&#125;<br><span class="hljs-keyword">let</span> a = <span class="hljs-keyword">new</span> A;<br><span class="hljs-keyword">let</span> b = <span class="hljs-keyword">new</span> B;<br><span class="hljs-comment">// 如果函数返回一个对象，那么new返回那个对象而不是this</span><br><span class="hljs-title function_">alert</span>(a == b)<span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Calculator</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">read</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> = +<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;a?&#x27;</span>)<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span> = +<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;b&#x27;</span>)<br>&#125;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">sum</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span><br>&#125;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">mul</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">let</span> calculator = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Calculator</span>()<br>calculator.<span class="hljs-title function_">read</span>();<br><br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Sum=&quot;</span> + calculator.<span class="hljs-title function_">sum</span>());<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Mul=&quot;</span> + calculator.<span class="hljs-title function_">mul</span>());<br></code></pre></td></tr></table></figure>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Accumulator</span>(<span class="hljs-params">startingValue</span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span> = startingValue;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">read</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span> += +<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;number?&#x27;</span>)<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">let</span> accumulator = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Accumulator</span>(<span class="hljs-number">1</span>)<br>accumulator.<span class="hljs-title function_">read</span>()<br><span class="hljs-title function_">alert</span>(accumulator.<span class="hljs-property">value</span>)<br></code></pre></td></tr></table></figure><h4 id="10-可选链"><a href="#10-可选链" class="headerlink" title="10. 可选链?."></a>10. 可选链<code>?.</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> html = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.elem&#x27;</span>)?.<span class="hljs-property">innerHTML</span>;<br><span class="hljs-title function_">alert</span>(html) <span class="hljs-comment">//undefined</span><br></code></pre></td></tr></table></figure><p>可选链的存在是因为<strong>不存在的属性</strong></p><p> 如果可选链 <code>?.</code> 前面的值为 <code>undefined</code> 或者 <code>null</code>，它会停止运算并返回 <code>undefined</code>。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//即使对象不存在，使用user?.address也不会报error</span><br><span class="hljs-keyword">let</span> user = <span class="hljs-literal">null</span>;<br><span class="hljs-title function_">alert</span>(user?.<span class="hljs-property">address</span>)<span class="hljs-comment">//undefined</span><br><span class="hljs-title function_">alert</span>(user?.<span class="hljs-property">address</span>.<span class="hljs-property">street</span>)<span class="hljs-comment">//undefined</span><br></code></pre></td></tr></table></figure><p><code>?.</code>前的变量必须声明</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// ReferenceError: user is not defined</span><br>user?.<span class="hljs-property">address</span>;<br></code></pre></td></tr></table></figure><p><code>?.</code>的短路效应: 他前面的值如果为undefined或者null, 后面的代码则不会执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>;<br>user?.<span class="hljs-title function_">sayHi</span>(x++); <span class="hljs-comment">// 没有 &quot;user&quot;，因此代码执行没有到达 sayHi 调用和 x++</span><br><span class="hljs-title function_">alert</span>(x); <span class="hljs-comment">// 0，值没有增加</span><br></code></pre></td></tr></table></figure><p>可选链 <code>?.</code> 语法有三种形式：(谨慎使用根据我们的代码逻辑，<strong>仅在当左侧部分不存在也可接受的情况下使用为宜</strong> )</p><ol><li><code>obj?.prop</code> —— 如果 <code>obj</code> 存在则返回 <code>obj.prop</code>，否则返回 <code>undefined</code>。</li><li><code>obj?.[prop]</code> —— 如果 <code>obj</code> 存在则返回 <code>obj[prop]</code>，否则返回 <code>undefined</code>。</li><li><code>obj.method?.()</code> —— 如果 <code>obj.method</code> 存在则调用 <code>obj.method()</code>，否则返回 <code>undefined</code>。</li></ol><h4 id="11-symbol类型（目前有点糊涂，后面再来仔细研究）"><a href="#11-symbol类型（目前有点糊涂，后面再来仔细研究）" class="headerlink" title="11. symbol类型（目前有点糊涂，后面再来仔细研究）"></a>11. symbol类型（目前有点糊涂，后面再来仔细研究）</h4><p>只有两种原始类型可以作为对象属性键：<code>string型</code>和<code>symbol型</code></p><p>1.symbol型不会自动转化为字符串型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> id = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;id&#x27;</span>)<br>       <span class="hljs-title function_">alert</span>(id)<span class="hljs-comment">// 类型错误，无法将symbol值转换为字符串型</span><br>       <span class="hljs-comment">// alert(id.toString())</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">//symbol 允许创建对象的隐藏属性，不能被访问或者被重写属性</span><br> <span class="hljs-keyword">let</span> user = &#123;<br> <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span><br> &#125;;<br><span class="hljs-keyword">let</span> id = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;id&#x27;</span>)<br>user[id] = <span class="hljs-number">1</span><br><span class="hljs-title function_">alert</span>(user[id])<br></code></pre></td></tr></table></figure><p>如果使用字符串就会有问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>&#125;;<br>user.<span class="hljs-property">id</span> = <span class="hljs-string">&#x27;Our id value&#x27;</span>;<br>user.<span class="hljs-property">id</span> = <span class="hljs-string">&#x27;Their id value&#x27;</span>; <span class="hljs-comment">//被重写了</span><br></code></pre></td></tr></table></figure><p>2.对象字面量中的symbol，需要用<code>[]</code>括起来，因为我们需要变量<code>id</code>的值作为键，而不是字符串<code>&#39;id&#39;</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> id = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;id&#x27;</span>)<br><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>,<br>[id]: <span class="hljs-number">123</span> <span class="hljs-comment">//而不是&#x27;id&#x27;:123</span><br>&#125;<br></code></pre></td></tr></table></figure><p>3.<code>symbol</code>属性不参与<code>for...in</code>循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> id = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;id&#x27;</span>);<br><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jhon&#x27;</span>,<br><span class="hljs-attr">age</span>: <span class="hljs-number">30</span>,<br>[id]: <span class="hljs-number">123</span><br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> user) <span class="hljs-title function_">alert</span>(k) <span class="hljs-comment">// name  age</span><br></code></pre></td></tr></table></figure><p>4.<code>Object.keys(user)</code> 也会忽略他们， 但是<code>Object.assign</code>会同时复制字符串和<code>symbol</code>属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> id = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;id&#x27;</span>)<br><span class="hljs-keyword">let</span> user = &#123;<br>[id]: <span class="hljs-number">123</span><br>&#125;<br><span class="hljs-keyword">let</span> clone = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, user)<br><span class="hljs-title function_">alert</span>(clone[id])<span class="hljs-comment">//123</span><br></code></pre></td></tr></table></figure><h4 id="12-对象-原始值转换"><a href="#12-对象-原始值转换" class="headerlink" title="12. 对象 原始值转换"></a>12. 对象 原始值转换</h4><p><code>hint</code><br><code>Javascript</code>是如何决定应用哪种转换的？类型转换在各种情况下有三种变体（被称为<code>hint</code>)</p><ul><li><code>string</code> 对象到字符串的转换 如<code>alert</code></li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">//输出</span><br><span class="hljs-title function_">alert</span>(obj)<br><span class="hljs-comment">// 将对象作为属性键</span><br>anotherObj[obj] = <span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><ul><li><code>number</code> 对象到数字的转换 如进行数学运算时</li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//显示转换</span><br><span class="hljs-keyword">let</span> num = <span class="hljs-title class_">Number</span>(obj);<br><span class="hljs-comment">// 数学运算</span><br><span class="hljs-keyword">let</span> n = +obj; <span class="hljs-comment">//一元加法（二元加法除外）</span><br><span class="hljs-keyword">let</span> delta = date1 - date2;<br><span class="hljs-comment">// 小于/大于的比较</span><br><span class="hljs-keyword">let</span> greater = user1 &gt; user2<br></code></pre></td></tr></table></figure><ul><li><code>default</code> 在少数情况下发生，当运算符<strong>不确定</strong>期望值的类型。</li></ul> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//二元加法使用默认 hint</span><br><span class="hljs-keyword">let</span> total = obj1 + obj2;<br><span class="hljs-comment">//obj == number 使用默认hint</span><br><span class="hljs-keyword">if</span>(user==<span class="hljs-number">1</span>)&#123;...&#125;;<br></code></pre></td></tr></table></figure><p>除了<code>Date</code>对象之外，所有的内建对象都以和<code>number</code>相同的方式实现<code>default</code>转换。</p><p><strong>为了进行转换，<code>JS</code>尝试查找并调用三个对象方法:</strong></p><ul><li><p>调用<code>obj[Symbol.toPrimitive](hint)</code>—带有symbol键 <code>Symbol.toPrimitive</code>（系统 symbol）的方法，如果这个方法存在的话， </p><ul><li>否则，如果<code>hint</code>是<code>string</code>—尝试调用<code>obj.toString()</code>或者<code>obj.valueOf()</code>，无论哪个存在。  <strong><code>valueOf()</code></strong> 方法返回 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String"><code>String</code></a> 对象的原始值 </li><li>否则，如果<code>hint</code>是<code>number</code>或<code>default</code>—尝试调用<code>obj.valueof()</code>或<code>obj.toString()</code>无论哪个存在</li><li><code>Symbol.toPrimitive</code></li></ul></li><li><p>如果<code>Symbol.toPrimitive</code>方法存在，则它被用于所有的hint,无序其他方法。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>,<br><span class="hljs-attr">money</span>: <span class="hljs-number">1000</span>,<br>[<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">toPrimitive</span>](hint) &#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">`hint: <span class="hljs-subst">$&#123;hint&#125;</span>`</span>);<br><span class="hljs-keyword">return</span> hint == <span class="hljs-string">&#x27;string&#x27;</span> ? <span class="hljs-string">`&#123;name:&quot;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.name&#125;</span>&quot;&#125;`</span> : <span class="hljs-variable language_">this</span>.<span class="hljs-property">money</span>;<br>&#125;<br>&#125;;<br><span class="hljs-comment">// alert(user) //hint: string -&gt; &#123;name: &quot;John&quot;&#125;</span><br><span class="hljs-comment">// alert(+user) // hint: number =&gt; 1000</span><br><span class="hljs-title function_">alert</span>(user + <span class="hljs-number">500</span>)<span class="hljs-comment">// hint:default =&gt;1500</span><br></code></pre></td></tr></table></figure><p>​     如果没有<code>Symbol.toPrimitive</code>，那么<code>JS</code>将尝试寻找<code>toSting</code>或者<code>valueOf</code> </p><ul><li>对于 <code>&quot;string&quot;</code> hint：调用 <code>toString</code> 方法，如果它不存在，则调用 <code>valueOf</code> 方法（因此，对于字符串转换，优先调用 <code>toString</code>）。</li><li>对于其他 hint：调用 <code>valueOf</code> 方法，如果它不存在，则调用 <code>toString</code> 方法（因此，对于数学运算，优先调用 <code>valueOf</code> 方法）。</li></ul><p>默认情况下，普通对象具有 <code>toString</code> 和 <code>valueOf</code> 方法：</p><ul><li><code>toString</code> 方法返回一个字符串 <code>&quot;[object Object]&quot;</code>。</li><li><code>valueOf</code> 方法返回对象自身。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span>&#125;;<br><span class="hljs-title function_">alert</span>(user); <span class="hljs-comment">// [object Object]</span><br><span class="hljs-title function_">alert</span>(user.<span class="hljs-title function_">valueOf</span>() === user); <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><p> 所有这些方法都必须返回一个原始值才能工作（如果已定义）。 </p>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS现代教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS现代教程-函数</title>
    <link href="/2022/08/30/JS%E7%8E%B0%E4%BB%A3%E6%95%99%E7%A8%8B-%E5%87%BD%E6%95%B0/"/>
    <url>/2022/08/30/JS%E7%8E%B0%E4%BB%A3%E6%95%99%E7%A8%8B-%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>创建函数：函数声明 + 函数表达式 + 箭头函数</p><ol><li><strong>函数声明</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">let</span> userName = <span class="hljs-string">&#x27;John&#x27;</span>;<br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params"></span>) &#123;<br>            userName = <span class="hljs-string">&#x27;Bob&#x27;</span><br>            <span class="hljs-keyword">let</span> showMessage = <span class="hljs-string">&#x27;Hello&#x27;</span> + userName;<br>            <span class="hljs-title function_">alert</span>(showMessage)<br>        &#125;<br><span class="hljs-comment">// 在函数执行前</span><br>        <span class="hljs-title function_">alert</span>(userName)<span class="hljs-comment">//John</span><br><span class="hljs-comment">//函数必须先调用才能执行</span><br>        <span class="hljs-title function_">showMessage</span>() <span class="hljs-comment">//Bob</span><br><span class="hljs-title function_">alert</span>(userName)<span class="hljs-comment">//Bob</span><br></code></pre></td></tr></table></figure><p>2.<strong>全局变量和局部变量</strong>  如果函数内部有同名的变量，那函数会遮蔽外部变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> userName = <span class="hljs-string">&#x27;John&#x27;</span>;<br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params"></span>) &#123;<br>           <span class="hljs-keyword">let</span> userName = <span class="hljs-string">&#x27;Bob&#x27;</span><br>            <span class="hljs-keyword">let</span> showMessage = <span class="hljs-string">&#x27;Hello&#x27;</span> + userName;<br>            <span class="hljs-title function_">alert</span>(showMessage)<br>        &#125;<br><br>        <span class="hljs-title function_">alert</span>(userName)<span class="hljs-comment">//John</span><br><span class="hljs-comment">// 函数会访问内部的userName 而不是外部的</span><br>        <span class="hljs-title function_">showMessage</span>() <span class="hljs-comment">//Bob</span><br><span class="hljs-title function_">alert</span>(userName)<span class="hljs-comment">//John</span><br></code></pre></td></tr></table></figure><p>3.参数 通过参数把任意数据传递给函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params"><span class="hljs-keyword">from</span>, text</span>) &#123;<br>           <span class="hljs-title function_">alert</span>(<span class="hljs-keyword">from</span> + <span class="hljs-string">&#x27;:&#x27;</span> + text);<br>       &#125;<br><br>       <span class="hljs-title function_">showMessage</span>(<span class="hljs-string">&#x27;Ann&#x27;</span>, <span class="hljs-string">&#x27;Hello&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params"><span class="hljs-keyword">from</span>, text</span>) &#123;<br>            <span class="hljs-keyword">from</span> = <span class="hljs-string">&#x27;*&#x27;</span> + <span class="hljs-keyword">from</span> + <span class="hljs-string">&#x27;*&#x27;</span>;<br>            <span class="hljs-title function_">alert</span>(<span class="hljs-keyword">from</span> + <span class="hljs-string">&#x27;:&#x27;</span> + text)<br>        &#125;<br><br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">from</span> = <span class="hljs-string">&#x27;Ann&#x27;</span><br>        <span class="hljs-title function_">showMessage</span>(<span class="hljs-keyword">from</span>, <span class="hljs-string">&#x27;Hello&#x27;</span>) <span class="hljs-comment">// *Ann*: Hello</span><br>        <span class="hljs-comment">// from 值未被修改 因为函数修改的是一个复制的局部变量值的副本，在函数外部是看不到更改的</span><br>        <span class="hljs-title function_">alert</span>(<span class="hljs-keyword">from</span>) <span class="hljs-comment">//Ann</span><br></code></pre></td></tr></table></figure><ul><li>注意参数parameter和argument， argument是调用函数时传递给函数的值， parameter是函数声明中括号内列出的变量</li></ul><p>4.默认值</p><p>   如果一个函数被调用了，但存在argument未被提供，那么相应的值就会变成undefined</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params"><span class="hljs-keyword">from</span>, text</span>) &#123;<br>            <span class="hljs-keyword">from</span> = <span class="hljs-string">&#x27;*&#x27;</span> + <span class="hljs-keyword">from</span> + <span class="hljs-string">&#x27;*&#x27;</span>;<br>            <span class="hljs-title function_">alert</span>(<span class="hljs-keyword">from</span> + <span class="hljs-string">&#x27;:&#x27;</span> + text)<br>        &#125;<br><br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">from</span> = <span class="hljs-string">&#x27;Ann&#x27;</span><br>        <span class="hljs-title function_">showMessage</span>(<span class="hljs-keyword">from</span>) <span class="hljs-comment">// *Ann*: undefined</span><br><br><span class="hljs-comment">// 可以用= 为函数声明中的参数指定默认值 (只有在没有给定参数的时候才会执行， 如果给定了参数，则不会执行)</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params"><span class="hljs-keyword">from</span>, text= <span class="hljs-string">&#x27;no text given&#x27;</span></span>)&#123;&#125;<span class="hljs-comment">//字符串</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params"><span class="hljs-keyword">from</span>, text = anotherFunction()</span>)&#123;&#125;<span class="hljs-comment">//函数</span><br><br><span class="hljs-comment">// 后备的默认参数， 将默认值的设置放在函数执行的时候</span><br> <span class="hljs-keyword">function</span> <span class="hljs-title function_">showMessage</span>(<span class="hljs-params">text</span>) &#123;<br>            <span class="hljs-keyword">if</span> (text === <span class="hljs-literal">undefined</span>) &#123;<br>                text = <span class="hljs-string">&#x27;empty message&#x27;</span><br>            &#125;<br>     <span class="hljs-comment">//或者  text = text || &#x27;empty&#x27;</span><br>            <span class="hljs-title function_">alert</span>(text)<br>        &#125;<br><br>        <span class="hljs-title function_">showMessage</span>() <span class="hljs-comment">// empty message</span><br><span class="hljs-comment">//也可使用 空值合并运算符??</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">showCount</span>(<span class="hljs-params">count</span>) &#123;<br>  <span class="hljs-comment">// 如果 count 为 undefined 或 null，则提示 &quot;unknown&quot;</span><br>  <span class="hljs-title function_">alert</span>(count ?? <span class="hljs-string">&quot;unknown&quot;</span>);<br>&#125;<br><br><span class="hljs-title function_">showCount</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">// 0   在假值比如0 应该被视为正常值时更具有优势</span><br><span class="hljs-title function_">showCount</span>(<span class="hljs-literal">null</span>); <span class="hljs-comment">// unknown</span><br><span class="hljs-title function_">showCount</span>(); <span class="hljs-comment">// unknown</span><br></code></pre></td></tr></table></figure><p>   5.返回值</p><pre><code class="hljs">  - return 可以放在任何位置，执行到return时，函数停止。  - return可以不止一个。  - 只写return，不写返回值也是可以的。  - 如果要将return和返回值分行写 一定要给返回值加上（），否则会默认给return后面加上;函数返回值会变成undefined  - 没有return 或者return空值时，函数的返回值是undefined    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">doNothing</span>(<span class="hljs-params"></span>) &#123; &#125;<br><span class="hljs-title function_">alert</span>(<span class="hljs-title function_">doNothing</span>() === <span class="hljs-literal">undefined</span>) <span class="hljs-comment">//true</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">doNothing</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-title function_">alert</span>(<span class="hljs-title function_">doNothing</span>() === <span class="hljs-literal">undefined</span>) <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure>    </code></pre><p>   6.一个函数最好只有一个功能，多个功能通过多个函数来完成最好，比如下面两段代码</p><pre><code class="hljs">  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">function</span> <span class="hljs-title function_">showPrimes</span>(<span class="hljs-params">n</span>) &#123;<br>            <span class="hljs-attr">nextPrime</span>: <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">2</span>; i &lt; n; i++) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">2</span>; j &lt; i; j++) &#123;<br>                    <span class="hljs-keyword">if</span> (i % j == <span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span> nextPrime;<br>                &#125;<br><br>                <span class="hljs-title function_">alert</span>(i)<br>            &#125;<br>        &#125;<br>        <span class="hljs-title function_">showPrimes</span>(<span class="hljs-number">9</span>)<br>        <br><span class="hljs-comment">// 这段更易懂简洁</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">showPrimes</span>(<span class="hljs-params">n</span>)&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">2</span>; i&lt;n; i++)&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_">isPrime</span>(i))<br>            <span class="hljs-title function_">alert</span>(i)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isPrime</span>(<span class="hljs-params">n</span>)&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">2</span>; i&lt;n; i++)&#123;<br>        <span class="hljs-keyword">if</span>(n%i == <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure>  - 使用？或 ||重写函数  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//原函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkAge</span>(<span class="hljs-params">age</span>) &#123;<br>  <span class="hljs-keyword">if</span> (age &gt; <span class="hljs-number">18</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">confirm</span>(<span class="hljs-string">&#x27;Do you have your parents permission to access this page?&#x27;</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// ?改写</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkAge</span>(<span class="hljs-params">age</span>)&#123;<br>    <span class="hljs-keyword">return</span> (age&gt;<span class="hljs-number">18</span>)? <span class="hljs-attr">true</span>: <span class="hljs-title function_">confirm</span>(<span class="hljs-string">&#x27;Do you.....&#x27;</span>)<br>&#125;<br><span class="hljs-comment">// ||改写</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkAge</span>(<span class="hljs-params">age</span>)&#123;<br>    <span class="hljs-keyword">return</span> (age&gt;<span class="hljs-number">18</span>) || <span class="hljs-title function_">confirm</span>(<span class="hljs-string">&#x27;Do you....&#x27;</span>)<br>&#125;<br><span class="hljs-comment">//(age&gt;18)的（）可省略</span><br></code></pre></td></tr></table></figure></code></pre><p>   7.<strong>函数表达式</strong> (函数是一种特殊的值)</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//函数声明</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hi&#x27;</span>)<br>&#125;<br><br><span class="hljs-keyword">let</span> sayHi = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hi&#x27;</span>)<br>&#125;;<br><span class="hljs-comment">// function 关键字后的函数名可以不写</span><br><br><span class="hljs-comment">//都是在sayHi变量中存储了一个函数</span><br><span class="hljs-comment">//如果alert(sayHi)会显示源码 而不是函数的调用结果，因为函数是一个特殊的值，所以，我们可以把它赋值给另一个变量</span><br><span class="hljs-keyword">let</span> func = sayHi <span class="hljs-comment">//这里复制</span><br><span class="hljs-title function_">func</span>()<span class="hljs-comment">//Hi  这个也可以执行</span><br><span class="hljs-title function_">sayHi</span>()<span class="hljs-comment">//Hi</span><br><span class="hljs-comment">//首先声明创建了函数，并把它存在了变量sayHi中， 把sayHi函数本身赋值给变量func,所以func()也能正常执行 （用表达式创建函数sayHi也是同理）</span><br></code></pre></td></tr></table></figure><p>8.回调函数</p><p>   核心: 传递一个函数，在稍后需要用到的时候再’回调’</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">function</span> <span class="hljs-title function_">ask</span>(<span class="hljs-params">question, yes, no</span>) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_">confirm</span>(question)) <span class="hljs-title function_">yes</span>()<br>            <span class="hljs-keyword">else</span> <span class="hljs-title function_">no</span>();<br>        &#125;<br><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">showOk</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;You agreed&#x27;</span>)<br>        &#125;<br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">showCancel</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;You canceled&#x27;</span>)<br>        &#125;<br><br>        <span class="hljs-title function_">ask</span>(<span class="hljs-string">&#x27;Do you agree?&#x27;</span>, showOk, showCancel)<br><span class="hljs-comment">// 上面的showOk和showCancel被称为回调函数（回调）</span><br><span class="hljs-comment">//改写成用匿名函数（没有名字的函数）在ask()函数内进行函数声明： </span><br> <span class="hljs-keyword">function</span> <span class="hljs-title function_">ask</span>(<span class="hljs-params">question, yes, no</span>) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_">confirm</span>(question)) <span class="hljs-title function_">yes</span>()<br>            <span class="hljs-keyword">else</span> <span class="hljs-title function_">no</span>();<br>        &#125;<br><span class="hljs-title function_">ask</span>(<span class="hljs-string">&#x27;Do you agree&#x27;</span>, <br>    <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;You agreed&#x27;</span>)&#125;, <br>    <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;You canceled&#x27;</span>)&#125;);<br><span class="hljs-comment">//这两个函数在ask外是无法访问的（因为没有对它们分配变量）</span><br></code></pre></td></tr></table></figure><p><strong>差别</strong>:</p><p>函数声明和函数表达式的差别体现在：函数表达式只有在代码执行到该处的时候才会被创建，仅从这一个开始才能用；但在函数声明被定义前，它就可以被调用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">sayHi</span>(<span class="hljs-string">&quot;John&quot;</span>); <span class="hljs-comment">// Hello, John</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-title function_">alert</span>( <span class="hljs-string">`Hello, <span class="hljs-subst">$&#123;name&#125;</span>`</span> );<br>&#125;<br><span class="hljs-comment">// JS脚本准备运行时，首先会在脚本里寻找全局的函数声明，并且创建这些函数；在处理完所有的函数声明之后，代码才会被执行。所以上面的sayHi是在准备运行脚本阶段创建的， 脚本的任何位置都可见</span><br><br><span class="hljs-comment">// 函数表达式则不可</span><br><span class="hljs-title function_">sayHi</span>(<span class="hljs-string">&#x27;John&#x27;</span>)<span class="hljs-comment">//error</span><br><span class="hljs-keyword">let</span> sayHi = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title function_">alert</span>( <span class="hljs-string">`Hello, <span class="hljs-subst">$&#123;name&#125;</span>`</span> );<br>&#125;<br></code></pre></td></tr></table></figure><p>严格模式下：如果一个函数声明是在一个代码块内，那么它在代码块内的任何位置都是可访问的，但是在代码块外部是不可访问的，比如以下代码:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> age = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;What is your age?&quot;</span>, <span class="hljs-number">18</span>);<br><br><span class="hljs-comment">// 有条件地声明一个函数</span><br><span class="hljs-keyword">if</span> (age &lt; <span class="hljs-number">18</span>) &#123;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">welcome</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello!&quot;</span>);<br>  &#125;<br><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">welcome</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Greetings!&quot;</span>);<br>  &#125;<br><br>&#125;<br><br><span class="hljs-comment">// ……稍后使用</span><br><span class="hljs-title function_">welcome</span>(); <span class="hljs-comment">// Error: welcome is not defined</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> age = <span class="hljs-number">16</span>; <span class="hljs-comment">// 拿 16 作为例子</span><br><br><span class="hljs-keyword">if</span> (age &lt; <span class="hljs-number">18</span>) &#123;<br>  <span class="hljs-title function_">welcome</span>();               <span class="hljs-comment">// \   (运行)</span><br>                           <span class="hljs-comment">//  |</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">welcome</span>(<span class="hljs-params"></span>) &#123;     <span class="hljs-comment">//  |</span><br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello!&quot;</span>);       <span class="hljs-comment">//  |  函数声明在声明它的代码块内任意位置都可用</span><br>  &#125;                        <span class="hljs-comment">//  |</span><br>                           <span class="hljs-comment">//  |</span><br>  <span class="hljs-title function_">welcome</span>();               <span class="hljs-comment">// /   (运行)</span><br><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">welcome</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Greetings!&quot;</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 在这里，我们在花括号外部调用函数，我们看不到它们内部的函数声明。</span><br><br><br><span class="hljs-title function_">welcome</span>(); <span class="hljs-comment">// Error: welcome is not defined</span><br></code></pre></td></tr></table></figure><p>解决方案：用函数表达式，声明成全局变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> age = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;What is your age?&quot;</span>, <span class="hljs-number">18</span>);<br><br><span class="hljs-keyword">let</span> welcome;<br><br><span class="hljs-keyword">if</span> (age &lt; <span class="hljs-number">18</span>) &#123;<br><br>  welcome = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello!&quot;</span>);<br>  &#125;;<br><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><br>  welcome = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Greetings!&quot;</span>);<br>  &#125;;<br><br>&#125;<br><br><span class="hljs-title function_">welcome</span>(); <span class="hljs-comment">// 现在可以了</span><br><br><span class="hljs-comment">//简洁写法</span><br><span class="hljs-keyword">let</span> age = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;what&#x27;s your age&quot;</span>)<br>        <span class="hljs-keyword">let</span> welcome = (age &lt;<span class="hljs-number">18</span>) ?<br>        <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello!&quot;</span>); &#125;:<br>        <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Greetings!&quot;</span>);&#125;<br></code></pre></td></tr></table></figure><p>总结：在大多数情况下，当我们需要声明一个函数时，最好使用函数声明，因为函数在被声明之前也是可见的。这使我们在代码组织方面更具灵活性，通常也会使得代码可读性更高。所以，仅当函数声明不适合对应的任务时，才应使用函数表达式。（偷懒，直接摘抄的）</p><p>9.箭头函数（基础）</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title function_">sum</span> = (<span class="hljs-params">a, b</span>) =&gt; &#123;<br>            <span class="hljs-keyword">let</span> result = a + b;<br>            <span class="hljs-keyword">return</span> result; <span class="hljs-comment">//如果使用了花括号，则一定要用return</span><br>        &#125;<br>        <span class="hljs-title function_">alert</span>(<span class="hljs-title function_">sum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>))<br><br>        <span class="hljs-keyword">let</span> age = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&quot;What&#x27;s your age&quot;</span>)<br>        <span class="hljs-keyword">let</span> welcome = (age &lt; <span class="hljs-number">18</span>) ?<br>            <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hi&#x27;</span>) :<br>            <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Greetings&#x27;</span>) <span class="hljs-comment">//无参  保留括号  只有一个参数 省略括号</span><br><br>        <span class="hljs-title function_">welcome</span>();<br><br><span class="hljs-comment">//改写代码</span><br> <span class="hljs-keyword">let</span> <span class="hljs-title function_">ask</span> = (<span class="hljs-params">question, yes, no</span>) =&gt; <span class="hljs-title function_">confirm</span>(question) ? <span class="hljs-title function_">yes</span>() : <span class="hljs-title function_">no</span>()<br>        <span class="hljs-title function_">ask</span>(<span class="hljs-string">&#x27;Do you agree?&#x27;</span>, <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;agree&#x27;</span>), <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;cancel&#x27;</span>))<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS现代教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS现代教程- 循环和遍历</title>
    <link href="/2022/08/29/JS%E7%8E%B0%E4%BB%A3%E6%95%99%E7%A8%8B-%E5%BE%AA%E7%8E%AF%E5%92%8C%E9%81%8D%E5%8E%86/"/>
    <url>/2022/08/29/JS%E7%8E%B0%E4%BB%A3%E6%95%99%E7%A8%8B-%E5%BE%AA%E7%8E%AF%E5%92%8C%E9%81%8D%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<h4 id="1-循环"><a href="#1-循环" class="headerlink" title="(1) 循环"></a>(1) 循环</h4><h5 id="1-1-for-循环"><a href="#1-1-for-循环" class="headerlink" title="1.1 for 循环"></a>1.1 for 循环</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//for (;;) —— 每次迭代之前都要检查条件，可以使用其他设置。</span><br> <span class="hljs-keyword">const</span> list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; list.<span class="hljs-property">length</span>; i++) &#123;<br>            <span class="hljs-keyword">if</span> (list[i] === <span class="hljs-number">5</span>) &#123;<br>                <span class="hljs-keyword">break</span>; <span class="hljs-comment">//中止整个循环</span><br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(list[i]); <span class="hljs-comment">//1, 2, 3, 4</span><br>        &#125;<br></code></pre></td></tr></table></figure><h5 id="1-2-while循环"><a href="#1-2-while循环" class="headerlink" title="1.2 while循环"></a>1.2 while循环</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//每次迭代之前都要检查条件 为true则一直执行</span><br><span class="hljs-keyword">let</span> num = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> (num &lt; <span class="hljs-number">10</span>)&#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num)<br>  num++<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="1-3-do…while循环"><a href="#1-3-do…while循环" class="headerlink" title="1.3 do…while循环"></a>1.3 do…while循环</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//每次迭代后都要检查条件 该循环至少会执行一次，即使条件为false</span><br> <span class="hljs-keyword">let</span> i = <span class="hljs-number">6</span><br>        <span class="hljs-keyword">do</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i); <span class="hljs-comment">//6</span><br>            i--<br>        &#125; <span class="hljs-keyword">while</span> (i &lt; <span class="hljs-number">5</span>)<br><br></code></pre></td></tr></table></figure><h5 id="1-4-跳出循环continue和break"><a href="#1-4-跳出循环continue和break" class="headerlink" title="1.4 跳出循环continue和break"></a>1.4 跳出循环continue和break</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//continue跳出当前循环</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;<br>            <span class="hljs-keyword">if</span> (i === <span class="hljs-number">3</span>) &#123;<br>                <span class="hljs-keyword">continue</span><br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i); <span class="hljs-comment">// 0 1 2 4 </span><br>        &#125;<br><br><span class="hljs-comment">//break 跳出整个循环</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;<br>            <span class="hljs-keyword">if</span> (i === <span class="hljs-number">2</span>) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i); <span class="hljs-comment">// 0, 1</span><br>        &#125;<br></code></pre></td></tr></table></figure><h4 id="2-遍历"><a href="#2-遍历" class="headerlink" title="(2) 遍历"></a>(2) 遍历</h4><h5 id="2-1-数组遍历"><a href="#2-1-数组遍历" class="headerlink" title="2.1 数组遍历"></a>2.1 数组遍历</h5><h6 id="2-1-1-for"><a href="#2-1-1-for" class="headerlink" title="2.1.1 for"></a>2.1.1 for</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; list.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">if</span> (list[i] === <span class="hljs-number">5</span>) &#123;<br>        <span class="hljs-keyword">break</span>; <span class="hljs-comment">//中止整个循环</span><br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(list[i]); <span class="hljs-comment">//1, 2, 3, 4</span><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="2-1-2-forEach-和-for…of"><a href="#2-1-2-forEach-和-for…of" class="headerlink" title="2.1.2 forEach 和 for…of"></a>2.1.2 forEach 和 for…of</h6><p>注意：会直接在原数组上进行变动，和map()不同的是，不会生成新的数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//for...of </span><br><span class="hljs-keyword">const</span> list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>]<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> i <span class="hljs-keyword">of</span> list) &#123;<br>            <span class="hljs-keyword">if</span> (item === <span class="hljs-number">5</span>) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);<span class="hljs-comment">//1, 2, 3, 4</span><br>        &#125;<br><span class="hljs-comment">// 可以使用break 或者continue跳过或终止循环</span><br><span class="hljs-comment">//for...of 访问的是实际的元素， for访问的是索引</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// forEach   无法跳出循环 要加上return</span><br><span class="hljs-keyword">const</span> list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>]<br>        list.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item, index, arr</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (item === <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span>;<br><br>            <span class="hljs-comment">// console.log(index);// 0,1,2,3,5,6</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(item); <span class="hljs-comment">// 1,2,3,4,6,7</span><br>        &#125;)<br><span class="hljs-comment">//按升序为数组中含有效值的每一项执行一次给定的函数</span><br></code></pre></td></tr></table></figure><h6 id="2-1-3-find-和-findIndex"><a href="#2-1-3-find-和-findIndex" class="headerlink" title="2.1.3 find 和 findIndex"></a>2.1.3 find 和 findIndex</h6><p>find方法返回数组中满足提供的函数的第一个元素的值，否则返回undefined</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">const</span> list = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;上&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;中&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;下&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">3</span> &#125;]<br> <span class="hljs-keyword">const</span> result = list.<span class="hljs-title function_">find</span>(<span class="hljs-function">(<span class="hljs-params">index</span>) =&gt;</span> index.<span class="hljs-property">id</span> === <span class="hljs-number">3</span>)<br> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<br>result.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;新的&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result); <span class="hljs-comment">// &#123;name:&#x27;新的&#x27;， id:3&#125;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(list);<span class="hljs-comment">//同理</span><br></code></pre></td></tr></table></figure><p>findIndex返回的是符合条件的第一个元素的索引值，而不是值本身, 如果不存在符合条件的则返回-1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> list = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;上&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;中&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;下&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">3</span> &#125;]<br><span class="hljs-keyword">const</span> index = list.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">id</span> === <span class="hljs-number">3</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(index); <span class="hljs-comment">//2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(list[index].<span class="hljs-property">name</span>); <span class="hljs-comment">// 下</span><br><br></code></pre></td></tr></table></figure><h6 id="2-1-4-map-和-filter"><a href="#2-1-4-map-和-filter" class="headerlink" title="2.1.4 map 和 filter"></a>2.1.4 map 和 filter</h6><p>map()和filter()都会跳过空元素， map 生成的新数组元素是可自定义 ，但filter生成的不可。</p><p>map()返回一个新数组，新数组由旧数组中的每一个元素都调用一次函数后的返回值组成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>]<br><span class="hljs-keyword">let</span> newArr = arr.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> item * <span class="hljs-number">2</span><br>&#125;)<br><br><span class="hljs-comment">// 也可以更简写</span><br><span class="hljs-keyword">let</span> newArr = arr.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item * <span class="hljs-number">2</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newArr); <span class="hljs-comment">//[4, 8, 18, 8, 0]</span><br></code></pre></td></tr></table></figure><p>map()重新格式化数组中的对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> arr = [&#123; <span class="hljs-attr">key</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">10</span> &#125;,<br>           &#123; <span class="hljs-attr">key</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">20</span> &#125;,<br>           &#123; <span class="hljs-attr">key</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">30</span> &#125;];<br><span class="hljs-keyword">let</span> newArr = arr.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) &#123;<br>    <span class="hljs-keyword">let</span> rObj = &#123;&#125;<br>    rObj[obj.<span class="hljs-property">key</span>] = obj.<span class="hljs-property">value</span><br>    <span class="hljs-keyword">return</span> rObj<br>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newArr);<span class="hljs-comment">//[&#123;1: 10&#125;, &#123;2: 20&#125;, &#123;3: 30&#125;]</span><br><span class="hljs-comment">//原数组没有改变</span><br></code></pre></td></tr></table></figure><p>filter()， 返回一个新数组，新数组包含符合提供的函数条件的所有元素 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><span class="hljs-keyword">let</span> newArr = arr.<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) &#123;<br><span class="hljs-keyword">return</span> item - <span class="hljs-number">2</span> &gt; <span class="hljs-number">1</span><br>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newArr);<span class="hljs-comment">// [4,5]</span><br></code></pre></td></tr></table></figure><h6 id="2-1-5-some-和-every"><a href="#2-1-5-some-和-every" class="headerlink" title="2.1.5 some  和 every"></a>2.1.5 some  和 every</h6><p>some和every返回值是Boolean型</p><p>some()方法测试数组中是不是至少有一个元素是满足提供的函数的条件的，如果有则返回true(同时循环中断)否则返回false(如果提供的是空数组，返回的是false)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">test</span>(<span class="hljs-params">element, index, array</span>) &#123;<br>            <span class="hljs-keyword">return</span> element &gt; <span class="hljs-number">5</span><br>        &#125;<br><br>        <span class="hljs-keyword">const</span> arr1 = [<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>]<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr1.<span class="hljs-title function_">some</span>(test)); <span class="hljs-comment">// true</span><br>        <span class="hljs-comment">// 用箭头函数书写</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr1.<span class="hljs-title function_">some</span>(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e &gt; <span class="hljs-number">11</span>)); <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><p>every()方法和some()相反; every是所有的元素都符合条件才会返回true</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">test1</span>(<span class="hljs-params">element, index, array</span>) &#123;<br><span class="hljs-keyword">return</span> element &gt; <span class="hljs-number">20</span><br>&#125;<br><br><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">20</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>, <span class="hljs-number">70</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr.<span class="hljs-title function_">every</span>(test1));<span class="hljs-comment">//false</span><br><span class="hljs-comment">//箭头函数写法</span><br>  <span class="hljs-keyword">const</span> arr = [<span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>]<br>        <span class="hljs-keyword">let</span> result = arr.<span class="hljs-title function_">every</span>(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e &gt; <span class="hljs-number">10</span>)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h5 id="2-2-对象遍历"><a href="#2-2-对象遍历" class="headerlink" title="2.2 对象遍历"></a>2.2 对象遍历</h5><h6 id="2-2-1-for…in"><a href="#2-2-1-for…in" class="headerlink" title="2.2.1 for…in"></a>2.2.1 for…in</h6><p>遍历一个对象的所有的key(键)，可以使用for…in{} (对象中每个key执行的代码)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;John&#x27;</span>,<br>            <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>,<br>            <span class="hljs-attr">isAdmin</span>: <span class="hljs-literal">true</span><br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> user) &#123;<br>            <span class="hljs-comment">// 键</span><br>            <span class="hljs-title function_">alert</span>(k) <span class="hljs-comment">// name  age isAdmin</span><br>            <span class="hljs-comment">// 键值</span><br>            <span class="hljs-title function_">alert</span>(user[k]) <span class="hljs-comment">// John 30 true</span><br>        &#125;<br><span class="hljs-comment">//访问属性的方法</span><br><span class="hljs-comment">//点符号: obj.property。</span><br><span class="hljs-comment">//方括号 obj[&quot;property&quot;]，方括号允许从变量中获取键，例如 obj[varWithKey]。</span><br><br><span class="hljs-comment">//使用 for in 循环时，返回的是所有能够通过对象访问的、可枚举的属性，既包括存在于实例中的属性，也包括存在于原型中的实例。如果只需要获取对象的实例属性，可以使用 hasOwnProperty 进行过滤。</span><br> <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">fun</span> = <span class="hljs-function">() =&gt;</span> &#123; &#125;;<br>        <span class="hljs-keyword">const</span> obj = &#123; <span class="hljs-number">2</span>: <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>: <span class="hljs-string">&#x27;b&#x27;</span> &#125;;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> i <span class="hljs-keyword">in</span> obj) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i, <span class="hljs-string">&#x27;:&#x27;</span>, obj[i]);<br>        &#125;<span class="hljs-comment">// 1: b// 2: a// fun : () =&gt; &#123;&#125; Object 原型链上扩展的方法也被遍历出来</span><br>        <span class="hljs-comment">//</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> i <span class="hljs-keyword">in</span> obj) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>.<span class="hljs-title function_">call</span>(obj, i)) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i, <span class="hljs-string">&#x27;:&#x27;</span>, obj[i]);<br>            &#125;<br>        &#125;<span class="hljs-comment">// name : a 不属于自身的属性将被 hasOwnProperty 过滤</span><br></code></pre></td></tr></table></figure><h6 id="2-2-2-Object-keys"><a href="#2-2-2-Object-keys" class="headerlink" title="2.2.2 Object.keys()"></a>2.2.2 Object.keys()</h6><p>Object.keys()遍历对象，返回一个数组，其元素包括对象自身的所有可枚举的属性（不含Symbol属性)的键名，不会返回原型上的方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">fun</span> = <span class="hljs-function">() =&gt;</span> &#123; &#125;;<br>       <span class="hljs-keyword">const</span> str = <span class="hljs-string">&#x27;ab&#x27;</span>;<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(str));<span class="hljs-comment">// [&#x27;0&#x27;, &#x27;1&#x27;]</span><br>       <span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>];<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(arr));<span class="hljs-comment">// [&#x27;0&#x27;, &#x27;1&#x27;]</span><br>       <span class="hljs-keyword">const</span> obj = &#123; <span class="hljs-number">1</span>: <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">0</span>: <span class="hljs-string">&#x27;a&#x27;</span> &#125;;<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj));<span class="hljs-comment">// [&#x27;0&#x27;, &#x27;1&#x27;]</span><br></code></pre></td></tr></table></figure><h6 id="2-2-3-Object-values"><a href="#2-2-3-Object-values" class="headerlink" title="2.2.3 Object.values()"></a>2.2.3 Object.values()</h6><p>对象遍历，返回一个由目标对象value组成的数组其元素是在目标对象上找到的可枚举属性值 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>,<br>  <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>,<br>  <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;男&#x27;</span><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj))<br><span class="hljs-comment">// 输出 [&quot;张三&quot;, 18, &quot;男&quot;]</span><br></code></pre></td></tr></table></figure><h6 id="2-2-4-Object-entries"><a href="#2-2-4-Object-entries" class="headerlink" title="2.2.4 Object.entries()"></a>2.2.4 Object.entries()</h6><p> 方法返回一个给定对象自身可枚举属性的键值对数组，其排列与使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in"><code>for...in</code></a> 循环遍历该对象时返回的顺序一致（区别在于 for-in 循环还会枚举原型链中的属性）。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> obj1 = &#123;<br><span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;somestring&#x27;</span>,<br><span class="hljs-attr">b</span>: <span class="hljs-number">42</span><br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> [key, value] <span class="hljs-keyword">of</span> <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">entries</span>(obj1)) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span>: <span class="hljs-subst">$&#123;value&#125;</span>`</span>); <span class="hljs-comment">//a: somestring b: 42</span><br>&#125;<br><br><span class="hljs-keyword">const</span> anObj = &#123; <span class="hljs-number">100</span>: <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">2</span>: <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">7</span>: <span class="hljs-string">&#x27;c&#x27;</span> &#125;;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">entries</span>(anObj)); <span class="hljs-comment">// [ [&#x27;2&#x27;, &#x27;b&#x27;], [&#x27;7&#x27;, &#x27;c&#x27;], [&#x27;100&#x27;, &#x27;a&#x27;] ]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>JS现代教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS现代教程-基础</title>
    <link href="/2022/08/29/JS%E7%8E%B0%E4%BB%A3%E6%95%99%E7%A8%8B-%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/08/29/JS%E7%8E%B0%E4%BB%A3%E6%95%99%E7%A8%8B-%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<p>重新系统地过一遍JS现代教程，这部分主要是<strong>基础知识</strong></p><h3 id="（1）自增自减"><a href="#（1）自增自减" class="headerlink" title="（1）自增自减"></a>（1）自增自减</h3><ol><li>区分先赋值还是先进行自增或自减后再参与赋值运算即可</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> counter = <span class="hljs-number">0</span>;<br><span class="hljs-comment">//情况1：</span><br>a = ++counter;<br><span class="hljs-title function_">alert</span>(a) <span class="hljs-comment">// 1  counter=1</span><br><br><span class="hljs-comment">// 情况2 </span><br>a = counter++;<br><span class="hljs-title function_">alert</span>(a)<span class="hljs-comment">//0 counter = 1</span><br><br><br></code></pre></td></tr></table></figure><h3 id="（2）值的比较"><a href="#（2）值的比较" class="headerlink" title="（2）值的比较"></a>（2）值的比较</h3><ol><li><p>比较运算符永远返回布尔值</p></li><li><p>字符串比较大小是根据字符在Unicode中的字符索引值来比较的 比如</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&#x27;A&#x27;</span> &lt;<span class="hljs-string">&#x27;Z&#x27;</span>;  <span class="hljs-comment">// true</span><br><span class="hljs-string">&#x27;a&#x27;</span>&gt;<span class="hljs-string">&#x27;A&#x27;</span> <span class="hljs-comment">//true</span><br><span class="hljs-string">&#x27;2&#x27;</span>&gt;<span class="hljs-string">&#x27;12&#x27;</span> <span class="hljs-comment">//true </span><br></code></pre></td></tr></table></figure></li><li><p><strong>不同类型的值</strong>进行大小比较时， 首先会转化成数字型 再进行比较（普通相等）</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;2&#x27;</span>&gt;<span class="hljs-number">1</span>)<span class="hljs-comment">//true  2先转成数字型2</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;02&#x27;</span>==<span class="hljs-number">2</span>)<span class="hljs-comment">//true </span><br><span class="hljs-comment">//布尔类型 true == 1  false == 0</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-literal">true</span> == <span class="hljs-number">1</span>) <span class="hljs-comment">//true</span><br><br><span class="hljs-keyword">let</span> a = <span class="hljs-number">0</span>; <span class="hljs-comment">//注意这里是字符型</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-title class_">Boolean</span>(a) ); <span class="hljs-comment">// false</span><br><br><span class="hljs-keyword">let</span> b = <span class="hljs-string">&quot;0&quot;</span>; <span class="hljs-comment">//注意这里是字符串</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-title class_">Boolean</span>(b) ); <span class="hljs-comment">// true</span><br><br><span class="hljs-title function_">alert</span>(a == b); <span class="hljs-comment">// true!</span><br></code></pre></td></tr></table></figure><ol start="4"><li>要区分非严格相等和严格相等的情况。非严格相等的情况下 undefined==null ; null &gt;=0 结果为true（其他情况是false）， 因为null被转化为0； undefined被转化为NaN， 它和任何值比较返回的都是false。</li><li>注意布尔值的转换：“ ‘’, 0, null, undefined, NaN 都会转换成false； 其他的转为true</li></ol><h3 id="（4）if-语句"><a href="#（4）if-语句" class="headerlink" title="（4）if 语句"></a>（4）if 语句</h3><p>注意下面这段代码 {}里的代码块会执行。注意区分’0’ 和 ‘’和0是不同的 ‘0’的逻辑值是true, 0和’’的逻辑值是false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;0&#x27;</span>)&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="（5）逻辑运算"><a href="#（5）逻辑运算" class="headerlink" title="（5）逻辑运算"></a>（5）逻辑运算</h3><ol><li>要注意下面这种 <strong>获取变量列表或者表达式中的第一个真值</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> firstName = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">let</span> lastName = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">let</span> nickName = <span class="hljs-string">&#x27;superCoder&#x27;</span><br><span class="hljs-title function_">alert</span>(firstName || lastName || nickName || <span class="hljs-string">&#x27;Anonymous&#x27;</span>) <span class="hljs-comment">//superCoder</span><br><span class="hljs-comment">//如果所有的变量都是假值 那最后返回的是Anonymous</span><br></code></pre></td></tr></table></figure><p>2.<strong>或与运算符的短路求值</strong></p><p>   <strong>短路求值</strong>的意思是||对其参数进行处理，知道运行到到第一个真值，立即返回该值，不再处理后面的参数。</p><ul><li>这条是不会打印的，因为或与运算符||遇到true之后就停止执行 代码不会运行到alert(‘Hello’)</li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-literal">true</span> || <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>这条会打印</li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-literal">false</span> || <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>或运算寻找第一个真值</li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">alert</span>( <span class="hljs-number">1</span> || <span class="hljs-number">0</span> ); <span class="hljs-comment">// 1（1 是真值）</span><br><br><span class="hljs-title function_">alert</span>( <span class="hljs-literal">null</span> || <span class="hljs-number">1</span> ); <span class="hljs-comment">// 1（1 是第一个真值）</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-literal">null</span> || <span class="hljs-number">0</span> || <span class="hljs-number">1</span> ); <span class="hljs-comment">// 1（第一个真值）</span><br><br><span class="hljs-title function_">alert</span>( <span class="hljs-literal">undefined</span> || <span class="hljs-literal">null</span> || <span class="hljs-number">0</span> ); <span class="hljs-comment">// 0（都是假值，返回最后一个值）</span><br></code></pre></td></tr></table></figure><p>3.与运算寻找第一个假值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 如果第一个操作数是真值，</span><br><span class="hljs-comment">// 与运算返回第二个操作数：</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-number">0</span> ); <span class="hljs-comment">// 0</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-number">5</span> ); <span class="hljs-comment">// 5</span><br><br><span class="hljs-comment">// 如果第一个操作数是假值，</span><br><span class="hljs-comment">// 与运算将直接返回它。第二个操作数会被忽略</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-number">5</span> ); <span class="hljs-comment">// null</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-string">&quot;no matter what&quot;</span> ); <span class="hljs-comment">// 0</span><br><span class="hljs-comment">// 返回第一个假值</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-number">2</span> &amp;&amp; <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-number">3</span> ); <span class="hljs-comment">// null</span><br><span class="hljs-comment">//如果都是真值，则返回最后一个</span><br><span class="hljs-title function_">alert</span>( <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-number">2</span> &amp;&amp; <span class="hljs-number">3</span> ); <span class="hljs-comment">// 3，最后一个值</span><br></code></pre></td></tr></table></figure><p>注意：&amp;&amp; 的优先级比||高</p><p>prompt运行过程中按下‘ESC’键，获得的是null； 输入空字符串得到的是’ ‘</p><h3 id="（6）空值合并运算符"><a href="#（6）空值合并运算符" class="headerlink" title="（6）空值合并运算符??"></a>（6）空值合并运算符??</h3><ol><li>？？可以选出第一个undefined/null的值， 一般用来为变量分配默认值</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">height = height ?? <span class="hljs-number">100</span> <span class="hljs-comment">// 当height的值为undefined或null时，将height的值设定为100</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">result = a??b<br><span class="hljs-comment">//重写</span><br>result= <span class="hljs-keyword">if</span>(a !== <span class="hljs-literal">undefined</span> &amp;&amp; a !== <span class="hljs-literal">null</span>)?? <span class="hljs-attr">a</span>:b<br><span class="hljs-comment">//只要第一个参数不是null/undefined， ？？返回第一个参数，否则返回第二个参数</span><br><span class="hljs-comment">//比如下面这个例子：</span><br><span class="hljs-keyword">let</span> user<br><span class="hljs-title function_">alert</span>(user ?? <span class="hljs-string">&#x27;匿名&#x27;</span>)<span class="hljs-comment">// 返回的是匿名  因为user未定义</span><br><span class="hljs-comment">// 下面这个例子返回的是user</span><br><span class="hljs-keyword">let</span> user = <span class="hljs-string">&#x27;Jhon&#x27;</span><br><span class="hljs-title function_">alert</span>(user ?? <span class="hljs-string">&#x27;匿名&#x27;</span>) <span class="hljs-comment">//返回的是Jhon,因为user已定义</span><br></code></pre></td></tr></table></figure><p> 2.以下代码使用??和|| 效果是一样的</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> firstName = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> lastName = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> nickName = <span class="hljs-string">&quot;Supercoder&quot;</span>;<br><span class="hljs-title function_">alert</span>(firstName||lastName||nickName||<span class="hljs-string">&#x27;super&#x27;</span>)<span class="hljs-comment">// Supercoder</span><br></code></pre></td></tr></table></figure><ul><li>但是|| 和??是由区别的：||是选出第一个<strong>真值</strong>，而?? 是选出第一个<strong>不是undefined/null</strong>的值</li><li>||和？？的优先级一样 但是不能同时使用，要用（）</li></ul>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS现代教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>06-Type Ahead</title>
    <link href="/2022/08/26/-Ahead/"/>
    <url>/2022/08/26/-Ahead/</url>
    
    <content type="html"><![CDATA[<p>实现功能：给出关键字，在搜索框呈现符合条件的选项</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span><br>        <span class="hljs-keyword">const</span> cities = [];<br>        <span class="hljs-title function_">fetch</span>(endpoint)<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">blob</span> =&gt;</span> blob.<span class="hljs-title function_">json</span>())<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> cities.<span class="hljs-title function_">push</span>(...data));<br><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">findMathches</span>(<span class="hljs-params">wordToMatch, cities</span>) &#123;<br>            <span class="hljs-keyword">return</span> cities.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;<br>                <span class="hljs-comment">// here we need to figure out if the city or state matches what was searched</span><br>                <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(wordToMatch, <span class="hljs-string">&#x27;gi&#x27;</span>);<br>                <span class="hljs-keyword">return</span> place.<span class="hljs-property">city</span>.<span class="hljs-title function_">match</span>(regex) || place.<span class="hljs-property">state</span>.<span class="hljs-title function_">match</span>(regex)<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">numberWithCommas</span>(<span class="hljs-params">x</span>) &#123;<br>            <span class="hljs-keyword">return</span> x.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\B(?=(\d&#123;3&#125;)+(?!\d))/g</span>, <span class="hljs-string">&#x27;,&#x27;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">displayMatches</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">const</span> matchArray = <span class="hljs-title function_">findMatches</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, cities);<br>            <span class="hljs-keyword">const</span> html = matchArray.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;<br>                <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, <span class="hljs-string">&#x27;gi&#x27;</span>);<br>                <span class="hljs-keyword">const</span> cityName = place.<span class="hljs-property">city</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>                <span class="hljs-keyword">const</span> stateName = place.<span class="hljs-property">state</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">      &lt;li&gt;</span><br><span class="hljs-string">        &lt;span class=&quot;name&quot;&gt;<span class="hljs-subst">$&#123;cityName&#125;</span>, <span class="hljs-subst">$&#123;stateName&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">        &lt;span class=&quot;population&quot;&gt;<span class="hljs-subst">$&#123;numberWithCommas(place.population)&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">      &lt;/li&gt;</span><br><span class="hljs-string">    `</span>;<br>            &#125;).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>            suggestions.<span class="hljs-property">innerHTML</span> = html;<br>        &#125;<br><br>        <span class="hljs-keyword">const</span> searchInput = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.search&#x27;</span>);<br>        <span class="hljs-keyword">const</span> suggestions = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.suggestions&#x27;</span>);<br><br>        searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, displayMatches);<br>        searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;keyup&#x27;</span>, displayMatches);<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><ol><li><p>如何获取资料？ 除axios之外，主要有两种方法：fetch和XTMLHttp </p><ul><li>fetch:  从 <code>fetch()</code> 返回的 Promise <strong>不会被标记为 reject</strong> ;  <code>fetch</code> <strong>不会发送跨域 cookie</strong>，除非你使用了 <em>credentials</em> 的<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/fetch#%E5%8F%82%E6%95%B0">初始化选项</a>。 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// fetch请求设置</span><br><span class="hljs-title function_">fetch</span>(endpoint)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-title function_">json</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data))<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error))<br><br></code></pre></td></tr></table></figure><ul><li>fetch 获取信息有两种方式:</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1. 直接赋值 </span><br><span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span><br><span class="hljs-keyword">let</span> cities = <span class="hljs-literal">null</span><br><span class="hljs-title function_">fetch</span>(endpoint)<br><span class="hljs-comment">//将获取到的数据解析(json())</span><br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-title function_">json</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> cities = data)<br><span class="hljs-comment">//成功获取数据</span><br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">cities</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(cities))<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//2. 解构赋值   设置空数组，利用解构一个一个放进数组</span><br><span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span><br><span class="hljs-keyword">const</span> cities = []<br><span class="hljs-title function_">fetch</span>(endpoint)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> <span class="hljs-title function_">json</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> cities.<span class="hljs-title function_">push</span>(...data))<br></code></pre></td></tr></table></figure></li><li><p>获取完数据之后，建立function findMatches(wordToMatch, cities)</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">function</span> find<span class="hljs-constructor">Matches(<span class="hljs-params">wordToMatch</span>, <span class="hljs-params">cities</span>)</span>&#123;<br>return cities.filter(place =&gt; &#123;<br>const regex = <span class="hljs-keyword">new</span> <span class="hljs-constructor">RegExp(<span class="hljs-params">wordToMatch</span>, &#x27;<span class="hljs-params">gi</span>&#x27;)</span><br>return place.city.<span class="hljs-keyword">match</span>(regex)<span class="hljs-operator"> || </span>place.state.<span class="hljs-keyword">match</span>(regex)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>建立displayMatches()，并监听输入框的change和keyup。每一次输入都会触发。将对比的结果用map来return li</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">numberWithCommas</span>(<span class="hljs-params">x</span>) &#123;<br>              <span class="hljs-keyword">return</span> x.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\B(?=(\d&#123;3&#125;)+(?!\d))/g</span>, <span class="hljs-string">&#x27;,&#x27;</span>);<br>          &#125;<br>  <br>          <span class="hljs-keyword">function</span> <span class="hljs-title function_">displayMatches</span>(<span class="hljs-params"></span>) &#123;<br>              <span class="hljs-keyword">const</span> matchArray = <span class="hljs-title function_">findMatches</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, cities);<br>              <span class="hljs-keyword">const</span> html = matchArray.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;<br>                  <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, <span class="hljs-string">&#x27;gi&#x27;</span>);<br>                  <span class="hljs-keyword">const</span> cityName = place.<span class="hljs-property">city</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>                  <span class="hljs-keyword">const</span> stateName = place.<span class="hljs-property">state</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>                  <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">        &lt;li&gt;</span><br><span class="hljs-string">          &lt;span class=&quot;name&quot;&gt;<span class="hljs-subst">$&#123;cityName&#125;</span>, <span class="hljs-subst">$&#123;stateName&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">          &lt;span class=&quot;population&quot;&gt;<span class="hljs-subst">$&#123;numberWithCommas(place.population)&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">        &lt;/li&gt;</span><br><span class="hljs-string">      `</span>;<br>              &#125;).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>              suggestions.<span class="hljs-property">innerHTML</span> = html;<br>          &#125;<br>  <br>          <span class="hljs-keyword">const</span> searchInput = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.search&#x27;</span>);<br>          <span class="hljs-keyword">const</span> suggestions = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.suggestions&#x27;</span>);<br>  <br>          searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, displayMatches);<br>          searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;keyup&#x27;</span>, displayMatches); <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>06-Type Ahead</title>
    <link href="/2022/08/26/Ahead/"/>
    <url>/2022/08/26/Ahead/</url>
    
    <content type="html"><![CDATA[<p>实现功能：给出关键字，在搜索框呈现符合条件的选项</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span><br>        <span class="hljs-keyword">const</span> cities = [];<br>        <span class="hljs-title function_">fetch</span>(endpoint)<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">blob</span> =&gt;</span> blob.<span class="hljs-title function_">json</span>())<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> cities.<span class="hljs-title function_">push</span>(...data));<br><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">findMathches</span>(<span class="hljs-params">wordToMatch, cities</span>) &#123;<br>            <span class="hljs-keyword">return</span> cities.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;<br>                <span class="hljs-comment">// here we need to figure out if the city or state matches what was searched</span><br>                <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(wordToMatch, <span class="hljs-string">&#x27;gi&#x27;</span>);<br>                <span class="hljs-keyword">return</span> place.<span class="hljs-property">city</span>.<span class="hljs-title function_">match</span>(regex) || place.<span class="hljs-property">state</span>.<span class="hljs-title function_">match</span>(regex)<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">numberWithCommas</span>(<span class="hljs-params">x</span>) &#123;<br>            <span class="hljs-keyword">return</span> x.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\B(?=(\d&#123;3&#125;)+(?!\d))/g</span>, <span class="hljs-string">&#x27;,&#x27;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">function</span> <span class="hljs-title function_">displayMatches</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">const</span> matchArray = <span class="hljs-title function_">findMatches</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, cities);<br>            <span class="hljs-keyword">const</span> html = matchArray.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;<br>                <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, <span class="hljs-string">&#x27;gi&#x27;</span>);<br>                <span class="hljs-keyword">const</span> cityName = place.<span class="hljs-property">city</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>                <span class="hljs-keyword">const</span> stateName = place.<span class="hljs-property">state</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">      &lt;li&gt;</span><br><span class="hljs-string">        &lt;span class=&quot;name&quot;&gt;<span class="hljs-subst">$&#123;cityName&#125;</span>, <span class="hljs-subst">$&#123;stateName&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">        &lt;span class=&quot;population&quot;&gt;<span class="hljs-subst">$&#123;numberWithCommas(place.population)&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">      &lt;/li&gt;</span><br><span class="hljs-string">    `</span>;<br>            &#125;).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>            suggestions.<span class="hljs-property">innerHTML</span> = html;<br>        &#125;<br><br>        <span class="hljs-keyword">const</span> searchInput = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.search&#x27;</span>);<br>        <span class="hljs-keyword">const</span> suggestions = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.suggestions&#x27;</span>);<br><br>        searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, displayMatches);<br>        searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;keyup&#x27;</span>, displayMatches);<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><ol><li><p>如何获取资料？ 除axios之外，主要有两种方法：fetch和XTMLHttp </p><ul><li>fetch:  从 <code>fetch()</code> 返回的 Promise <strong>不会被标记为 reject</strong> ;  <code>fetch</code> <strong>不会发送跨域 cookie</strong>，除非你使用了 <em>credentials</em> 的<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/fetch#%E5%8F%82%E6%95%B0">初始化选项</a>。 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// fetch请求设置</span><br><span class="hljs-title function_">fetch</span>(endpoint)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-title function_">json</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data))<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error))<br><br></code></pre></td></tr></table></figure><ul><li>fetch 获取信息有两种方式:</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//1. 直接赋值 </span><br><span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span><br><span class="hljs-keyword">let</span> cities = <span class="hljs-literal">null</span><br><span class="hljs-title function_">fetch</span>(endpoint)<br><span class="hljs-comment">//将获取到的数据解析(json())</span><br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-title function_">json</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> cities = data)<br><span class="hljs-comment">//成功获取数据</span><br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">cities</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(cities))<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//2. 解构赋值   设置空数组，利用解构一个一个放进数组</span><br><span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span><br><span class="hljs-keyword">const</span> cities = []<br><span class="hljs-title function_">fetch</span>(endpoint)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> <span class="hljs-title function_">json</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> cities.<span class="hljs-title function_">push</span>(...data))<br></code></pre></td></tr></table></figure></li><li><p>获取完数据之后，建立function findMatches(wordToMatch, cities)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">findMatches</span>(<span class="hljs-params">wordToMatch, cities</span>)&#123;<br><span class="hljs-keyword">return</span> cities.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;<br><span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(wordToMatch, <span class="hljs-string">&#x27;gi&#x27;</span>)<br><span class="hljs-keyword">return</span> place.<span class="hljs-property">city</span>.<span class="hljs-title function_">match</span>(regex) || place.<span class="hljs-property">state</span>.<span class="hljs-title function_">match</span>(regex)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>建立displayMatches()，并监听输入框的change和keyup。每一次输入都会触发。将对比的结果用map来return <li></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">function</span> <span class="hljs-title function_">numberWithCommas</span>(<span class="hljs-params">x</span>) &#123;<br>        <span class="hljs-keyword">return</span> x.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\B(?=(\d&#123;3&#125;)+(?!\d))/g</span>, <span class="hljs-string">&#x27;,&#x27;</span>);<br>    &#125;<br>   <br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">displayMatches</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> matchArray = <span class="hljs-title function_">findMatches</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, cities);<br>        <span class="hljs-keyword">const</span> html = matchArray.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>, <span class="hljs-string">&#x27;gi&#x27;</span>);<br>            <span class="hljs-keyword">const</span> cityName = place.<span class="hljs-property">city</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>            <span class="hljs-keyword">const</span> stateName = place.<span class="hljs-property">state</span>.<span class="hljs-title function_">replace</span>(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.value&#125;</span>&lt;/span&gt;`</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">  &lt;li&gt;</span><br><span class="hljs-string">    &lt;span class=&quot;name&quot;&gt;<span class="hljs-subst">$&#123;cityName&#125;</span>, <span class="hljs-subst">$&#123;stateName&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">    &lt;span class=&quot;population&quot;&gt;<span class="hljs-subst">$&#123;numberWithCommas(place.population)&#125;</span>&lt;/span&gt;</span><br><span class="hljs-string">  &lt;/li&gt;</span><br><span class="hljs-string">`</span>;<br>        &#125;).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>        suggestions.<span class="hljs-property">innerHTML</span> = html;<br>    &#125;<br>   <br>    <span class="hljs-keyword">const</span> searchInput = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.search&#x27;</span>);<br>    <span class="hljs-keyword">const</span> suggestions = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.suggestions&#x27;</span>);<br>   <br>    searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;change&#x27;</span>, displayMatches);<br>    searchInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;keyup&#x27;</span>, displayMatches);<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05-Flex Panel Gallery</title>
    <link href="/2022/08/26/x-Panel-Gallery/"/>
    <url>/2022/08/26/x-Panel-Gallery/</url>
    
    <content type="html"><![CDATA[<p><strong>1. 重点：利用DOM操作CSS</strong></p><p>前:</p><p><img src="/images/pasted-5.png" alt="upload successful"></p><p>后:<br><img src="/images/pasted-3.png" alt="upload successful"></p><p>单图‘点击’后的效果<br><img src="/images/pasted-4.png" alt="upload successful"></p><p><strong>2. 核心思路</strong></p><ul><li><p>HTML： 整体由一个大的panels包含5个小的panel组成</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&lt;div <span class="hljs-keyword">class</span>=&quot;<span class="hljs-symbol">panels</span>&quot;&gt;<br>        &lt;<span class="hljs-symbol">div</span> <span class="hljs-symbol">class</span>=&quot;<span class="hljs-symbol">panel</span> <span class="hljs-symbol">panel1</span>&quot;&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Hey</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Let</span>&#x27;<span class="hljs-symbol">s</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Dance</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>        &lt;/<span class="hljs-symbol">div</span>&gt;<br>        &lt;<span class="hljs-symbol">div</span> <span class="hljs-symbol">class</span>=&quot;<span class="hljs-symbol">panel</span> <span class="hljs-symbol">panel2</span>&quot;&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Give</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Take</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Receive</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>        &lt;/<span class="hljs-symbol">div</span>&gt;<br>        &lt;<span class="hljs-symbol">div</span> <span class="hljs-symbol">class</span>=&quot;<span class="hljs-symbol">panel</span> <span class="hljs-symbol">panel3</span>&quot;&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Experience</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">It</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Today</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>        &lt;/<span class="hljs-symbol">div</span>&gt;<br>        &lt;<span class="hljs-symbol">div</span> <span class="hljs-symbol">class</span>=&quot;<span class="hljs-symbol">panel</span> <span class="hljs-symbol">panel4</span>&quot;&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Give</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">All</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">You</span> <span class="hljs-symbol">can</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>        &lt;/<span class="hljs-symbol">div</span>&gt;<br>        &lt;<span class="hljs-symbol">div</span> <span class="hljs-symbol">class</span>=&quot;<span class="hljs-symbol">panel</span> <span class="hljs-symbol">panel5</span>&quot;&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Life</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">In</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>            &lt;<span class="hljs-symbol">p</span>&gt;<span class="hljs-symbol">Motion</span>&lt;/<span class="hljs-symbol">p</span>&gt;<br>        &lt;/<span class="hljs-symbol">div</span>&gt;<br> &lt;/<span class="hljs-symbol">div</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>CSS：</p><p>   1.使用flex布局，设置flex-direction为column</p><p> 2.给first-child及last-child做位移效果，同时设置open-active，利用DOM操作CSS效果</p><p> 3.使用classList.toggle新增/移除动画class</p><p> 4.click&amp;transitionend事件触发toggle函数</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="language-css">            <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        *,</span><br><span class="language-css">        *<span class="hljs-selector-pseudo">::before</span>,</span><br><span class="language-css">        *<span class="hljs-selector-pseudo">::after</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">box-sizing</span>: inherit;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panels</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="language-css">            <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css"></span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#6b0f9c</span>;</span><br><span class="language-css">            <span class="hljs-attribute">box-shadow</span>: inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.1</span>);</span><br><span class="language-css">            <span class="hljs-attribute">color</span>: white;</span><br><span class="language-css">            <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">            <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">            <span class="hljs-attribute">transition</span>:</span><br><span class="language-css">                font-size <span class="hljs-number">0.7s</span> <span class="hljs-built_in">cubic-bezier</span>(<span class="hljs-number">0.61</span>, -<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>, -<span class="hljs-number">0.11</span>),</span><br><span class="language-css">                flex <span class="hljs-number">0.7s</span> <span class="hljs-built_in">cubic-bezier</span>(<span class="hljs-number">0.61</span>, -<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>, -<span class="hljs-number">0.11</span>),</span><br><span class="language-css">                background <span class="hljs-number">0.2s</span>;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="language-css">            <span class="hljs-attribute">background-position</span>: center;</span><br><span class="language-css">            <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="language-css">            <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">            <span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel1</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/gYl-UtwNg_I/1500x1500</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel2</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/rFKUFzjPYiQ/1500x1500</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel3</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=faces&amp;cs=tinysrgb&amp;w=1500&amp;h=1500&amp;fit=crop&amp;s=967e8a713a4e395260793fc8c802901d</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel4</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/ITjiVXcwVng/1500x1500</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel5</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/3MNzGlQM7qs/1500x1500</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span>&gt;* &#123;</span><br><span class="language-css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">            <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.5s</span>;</span><br><span class="language-css">            <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span> <span class="hljs-number">0</span> auto;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">            <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">            <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span>&gt;*<span class="hljs-selector-pseudo">:first</span>-child &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">100%</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span><span class="hljs-selector-class">.open-active</span>&gt;*<span class="hljs-selector-pseudo">:first</span>-child &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span>&gt;*<span class="hljs-selector-pseudo">:last-child</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">100%</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span><span class="hljs-selector-class">.open-active</span>&gt;*<span class="hljs-selector-pseudo">:last-child</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span> <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">text-transform</span>: uppercase;</span><br><span class="language-css">            <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Amatic SC&#x27;</span>, cursive;</span><br><span class="language-css">            <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.72</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">14px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.45</span>);</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2em</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">4em</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.panel</span><span class="hljs-selector-class">.open</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">flex</span>: <span class="hljs-number">5</span>;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-keyword">@media</span> <span class="hljs-keyword">only</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">600px</span>) &#123;</span><br><span class="language-css">            <span class="hljs-selector-class">.panel</span> <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">font-style</span>: <span class="hljs-number">1em</span>;</span><br><span class="language-css">            &#125;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>JS</li></ul> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> panels = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.panel&#x27;</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">toggleOpen</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>);</span><br><span class="language-javascript">          <span class="hljs-variable language_">this</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">toggle</span>(<span class="hljs-string">&#x27;open&#x27;</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">toggleActive</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">propertyName</span>);</span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (e.<span class="hljs-property">propertyName</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;flex&#x27;</span>)) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">this</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">toggle</span>(<span class="hljs-string">&#x27;open-active&#x27;</span>)</span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">      panels.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">panel</span> =&gt;</span> panel.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, toggleOpen))</span><br><span class="language-javascript">      panels.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">panel</span> =&gt;</span> panel.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;transitionend&#x27;</span>, toggleActive))</span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 30 days</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
